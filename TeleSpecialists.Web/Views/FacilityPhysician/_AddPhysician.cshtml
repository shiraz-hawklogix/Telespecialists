@model TeleSpecialists.BLL.Model.facility_physician

@{
    ViewBag.Title = "_AssignFacility";

    var timerOptions = new List<SelectListItem>
{
new SelectListItem { Value="1", Text = "1 Hour" },
new SelectListItem { Value="8", Text = "8 Hours" },
new SelectListItem { Value="24", Text = "1 Day" },
new SelectListItem { Value="48", Text = "2 Days" },
new SelectListItem { Value="72", Text = "3 Days" },
new SelectListItem { Value="168", Text = "1 Week" }
};
}

@*<div id="FacilityPhysicianModel" class="modal" data-backdrop="static" data-keyboard="false">*@
<div class="modal-dialog modal-lg">
    <form method="post" role="form" id="physicianForm" action="@Url.Action("SaveFacility", new { FacilityView = false })">


        @Html.AntiForgeryToken()
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Add Physician</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.HiddenFor(m => m.fap_fac_key)
                    <input type="hidden" value="@Model.fap_fac_key" id="getid" />
                    @Html.HiddenFor(m => m.fap_key)
                    <input type="hidden" value="@Model.fap_key" id="getfap_key" />
                    @Html.HiddenFor(m => m.fap_is_active)
                    @Html.HiddenFor(m => m.fap_created_by)
                    <input type="hidden" value="@Model.fap_created_by" id="getcreated_by" />
                    @Html.HiddenFor(m => m.fap_created_date)
                    @Html.HiddenFor(m => m.fap_created_by_name)
                    @Html.HiddenFor(m => m.fap_start_date)
                    @Html.HiddenFor(m => m.fap_end_date)
                    @Html.HiddenFor(m => m.fap_onboarding_complete_provider_active_date)

                    <div id="validationSummary"></div>
                    <div class="row">
                        <div class="col-sm-10 offset-sm-1">
                            <div class="form-group row">
                                @Html.Label("Physician:", htmlAttributes: new { @class = "control-label col-3" })
                                <div class="col-9">

                                    @if (Model.fap_key > 0)
                                    {
                                        @Html.DropDownList("fap_phy_key_temp", (ViewBag.fap_phy_key as List<SelectListItem>), new { @disabled = "disabled", @class = "form-control" })
                                        @Html.HiddenFor(m => m.fap_user_key)

                                        @*@Html.DropDownList(ViewBag.fap_fac_key, null, "--select--", new { @class = "form-control",@disabled = true })*@
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.fap_user_key, null, "--select--", new { @class = "form-control" })
                                    }

                                </div>
                            </div>

                            <div class="form-group row @(Model.fap_start_date.HasValue ? "" : "d-none")">
                                @Html.Label("Onboarded:", htmlAttributes: new { @class = "control-label col-3" })
                                <div class="col-9">
                                    @if (!Model.fap_start_date.HasValue)
                                    {
                                        @Html.HiddenFor(m => m.fap_is_on_boarded)
                                        @Html.CheckBoxFor(m => m.fap_is_on_boarded, new { @disabled = true })
                                    }
                                    else
                                    {
                                        @Html.CheckBoxFor(m => m.fap_is_on_boarded)
                                    }

                                    @Html.ValidationMessageFor(model => model.fap_fac_key, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row d-none">
                                @Html.Label("Disable MD Staff Update:", htmlAttributes: new { @class = "control-label col-3" })
                                <div class="col-2">
                                    @Html.CheckBoxFor(m => m.fap_is_override, new { @onclick = "showHideTimer()" })
                                </div>

                                <div class="col-7" id="divOverride">
                                    <div class="row">
                                        @Html.Label("Timer:", htmlAttributes: new { @class = "control-label col-3" })
                                        <div class="col-9">
                                            @Html.DropDownListFor(m => m.fap_override_hours, timerOptions, "-- Select --", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="col-sm-10 offset-sm-1">
                            <div class="form-group row">
                                @Html.Label("Facilities:", htmlAttributes: new { @class = "control-label col-3" })
                                <div class="col-7">
                                    @Html.DropDownList("Facilities", ViewBag.Facilities as List<SelectListItem>, new { @class = "form-control Facilities", @multiple = "multiple" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-10 offset-sm-1">
                            <div class="form-group row">
                                @Html.Label("All Physician:", htmlAttributes: new { @class = "control-label col-3" })
                                <div class="col-7">
                                    @*@Html.DropDownList("AllPhycision", (ViewBag.AllPhycision as List<SelectListItem>), new { @class = "form-control", @multiple = "multiple" })*@
                                    <select id="AllPhycision" name="Physician" class="form-control Physician" multiple="multiple"></select>
                                    @Html.EditorFor(model => model.fap_Array_path, new { htmlAttributes = new { @class = "form-control", @id = "putvalue", @type = "hidden" } })

                                    @*<input type="text" id="@Model.fap_UserName" name="@Model.fap_UserName" class="form-control">*@
                                </div>
                                <a href="javascript:void(0);" onclick="getrowcount();" value="Add Row" class="btn btn-dark">Add Row</a>
                            </div>
                            <table id="table1" class="table">
                                <thead>
                                    <tr style="text-align:center!important">
                                        <td>Physician Name</td>
                                        <td>User Name/Password</td>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <a href="#" class="btn btn-link" data-dismiss="modal">Cancel</a>
                <input type="submit" class="btn btn-dark" value="Save" />
            </div>

        </div>
    </form>
</div>
@*</div>*@

<script>
    $("#physicianForm").off("submit").submit(function (e) {
        e.preventDefault();
        var TableData = [];
        $.each($(".Facilities option:selected"), function () {
            var fackey = $(this).val();
            $('#table1 tr').each(function (row, tr) {
                if ($(tr).find('td:eq(3) input').val()) {
                    TableData.push({
                        "fap_user_key": $(tr).find('td:eq(0) input').val(),
                        "Phycision_Name": $(tr).find('td:eq(1) input').val(),
                        "fap_UserName": $(tr).find('td:eq(2) input').val(),
                        "fap_Password": $(tr).find('td:eq(3) input').val(),
                        "fap_fac_key": fackey,
                        "fap_key": $('#getfap_key').val(),
                    })
                }
            });
        });
        //TableData.shift();
        var _TableData = JSON.stringify(TableData);
        $("#putvalue").val(_TableData);


        var url = $(this).attr("action");
        var data = $(this).serialize();
        $("#divModelPopUp").find("input:button, input:submit").disable();
        $.post(url, data, function (response) {
            $("#divModelPopUp").find("input:button, input:submit").enable();
            if (response.success) {
                getPhysicians();
                $("#divModelPopUp").modal("hide");
            }
            else {
                $("#divModelPopUp").find("#validationSummary").showBSDangerAlert("", response.data);
            }
        });
    });

    function showHideTimer() {
        $('#divOverride').css('display', 'none');

        if ($("#fap_is_override").is(':checked')) {
            $('#divOverride').css('display', 'block');
        }
    }

    showHideTimer();


    function uplaod() {
        var TableData = new Array();
        $('#table1 tr').each(function (row, tr) {
            TableData[row] = {
                "fap_key": $(tr).find('td:eq(0) input').val(),
                "Phycision_Name": $(tr).find('td:eq(1) input').val(),
                "fap_UserName": $(tr).find('td:eq(2) input').val(),
                "fap_Password": $(tr).find('td:eq(3) input').val()
            }
        });
        TableData.shift();
        var _TableData = JSON.stringify(TableData);
        var s = $("#putvalue").val(_TableData);
        console.log(_TableData);
        //$.ajax({

        //    type: "POST",
        //    url: '/FacilityPhysician/_Upload',
        //    data: { Table_Array: _TableData },
        //    success: function (response) {
        //        console.log(response);
        //    },
        //    error: function (error) {
        //        console.log(error );
        //    }
        //});
    }


</script>
<script>
    $(document).ready(function () {
        $('#table1').css('display', 'none');
        //$('#AllPhycision').multiselect({
        //    columns: 1,
        //    placeholder: 'Select Physician',
        //    selectAll: true,
        //    search: true,
        //    searchOptions: {
        //        'default': 'Search Physician'
        //    }
        //});

        $('.Facilities').multiselect({
            columns: 1,
            placeholder: 'Select Facility',
            selectAll: true,
            search: true,
            searchOptions: {
                'default': 'Search Facility'
            }
        });
        var Facility = null;
        GetPhysicianByFacility(Facility);
    });

    $("#Facilities").change(function () {
        var Facility = $(this).val();
        if (Facility.length == 0) {
            Facility = null;
        }
        GetPhysicianByFacility(Facility);
    })

    function GetPhysicianByFacility(Facility) {
        $.ajax({
            cache: false,
            async: true,
            type: "POST",
            url: '/FacilityPhysician/GetPhysicianByFacility',
            data: { Facility: Facility },
            success: function (data) {
                $('#AllPhycision').multiselect('reset');
                $('#AllPhycision').html("");
                var html = "";
                $.each(data, function (key, val) {
                    html += "<option value=" + val.Value + ">" + val.Text + "</option>";
                });
                $('#AllPhycision').append(html);
                $('#AllPhycision').multiselect({
                    columns: 1,
                    placeholder: 'Select Physician',
                    selectAll: true,
                    search: true,
                    searchOptions: {
                        'default': 'Search Physician'
                    }
                });
                $('#AllPhycision').multiselect('reload');
            },
            error: function () {

            }
        });

    }

    function getrowcount() {
        $('#table1').show();

        $('#AllPhycision option:selected').each(function () {
            var name = $(this).text();

            $("#table1").append("<tr><td style='display:none;'><input type='text' class ='form-control' value=" + $(this).val() + "  /><td><input type='text' class ='form-control' value='" + name + "' readonly  /></td><td><input type='text' class ='form-control' /></td><td  style='display:none!important'><input type='text' class ='form-control' value='0' /></td></tr>");
        });

        $("#AllPhycision").multiselect('reset');
    };
</script>
