
<link href="~/Content/Elite/css/chat.css" rel="stylesheet" />

<div class="message-wrapper">

    <div class="h-100">
        <div class="h-100">
            @*<h3 class=" text-center">Messaging</h3>*@
            <div class="row col-md-12">
                <a href="#" target="_blank" data-toggle="modal" data-target=".bs-example-modal-lg" class="grp-create-link" title="Add New Group"><i class="fa fa-audio-description"></i></a>
                <ol class="breadcrumb" style="display:none">
                    <li> <div id="userInfo">  </div>  </li>
                </ol>
            </div>
            <div class="messaging h-100">
                <div class="inbox_msg h-100">
                    <div class="inbox_people">
                        <div class="headind_srch">
                            <div class="recent_heading">
                                <h6>Recent</h6>
                            </div>
                            <div class="srch_bar">
                                <div class="stylish-input-group">
                                    <input type="text" class="search-bar font-style-custome" placeholder="Search" id="txtSearch">
                                </div>
                            </div>
                            @*<div class="srch_bar">
                                <div class="stylish-input-group">
                                    <input type="text" class="search-bar" placeholder="Search" id="txtSearch">
                                    <span class="input-group-addon">
                                        <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                                    </span>
                                </div>
                            </div>*@
                        </div>
                        <div class="inbox_chat">
                            <div id="binduser"></div>
                        </div>
                    </div>
                    <div class="mesgs h-100">
                        <div class="row" style="margin-top:-20px">
                            <h6 class="box-title">Chat Message</h6>
                            <div id="person" style="width:95%">
                            </div>
                            <div style="float:left;width:4%">
                                <a href="javacript:void(0)" style="float:right" id="file" class="cst-icon" data-toggle="tooltip" title="File Attachment"><i class="fa fa-paperclip"></i></a>
                            </div>
                        </div>
                        <div class="msg_history" id="msgDetail">
                            <div id="msgDetail"></div>
                        </div>
                        <div class="type_msg">
                            <div class="input_msg_write">
                                <input type="text" class="write_msg" placeholder="Type a message" id="txtMsg">
                                <button class="msg_send_btn" type="button" id="SendMsg"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                            </div>
                            @*<div class="input_msg_write">
                                <div class="row">
                                    <input type="text" class="write_msg" placeholder="Type a message" id="txtMsg" />
                                </div>
                                <button class="msg_send_btn" type="button" id="SendMsg"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
                            </div>*@
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>

<div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" style="float:left">Add Group Title</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <input class="form-control" id="txtGroupName" placeholder="Enter Group Title Here" />
                <div>
                    <br>
                    @Html.RadioButton("grpType", "Private", new { @class = "lbltype", @checked = "true" })
                    <span class="font-style-custome">Private (Only allowed members can chat)</span> <br>
                    @Html.RadioButton("grpType", "Public", new { @class = "lbltype" })
                    <span class="font-style-custome">Public (Anyone can send msg )</span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-dark waves-effect text-left" data-dismiss="modal" id="btnClose">Close</button>
                <button type="button" class="btn btn-dark waves-effect text-left" id="saveGroup">Save</button>
            </div>
        </div>

    </div>

</div>
<div class="modal fade bs-example-modal-lg1" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myLargeModalLabel">Users List</h4>
                <div class="srch_bar">
                    <div class="stylish-input-group">
                        <input type="text" class="search-bar font-style-custome" placeholder="Search" id="txtSearchGrpUsers">
                    </div>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div style="max-height:400px;overflow-y:auto">
                    <ul class="chatonline style-none" id="userlistforGrp" style="list-style-type: none;"></ul>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-dark waves-effect text-left" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>

</div>

<script>
    $("#btnClose").click(function () {
        $('body').css('padding-right', '0');
    });
</script>
<script>
    var SenderId;
    var _senderName;
    var _senderPhoto;
    var _receiverId;
    var _receiverName;
    var _receiverPhoto;
    var _teleid;
    var _serverTime;
    var teleUsersArr = [];
    var isGroup;
    var teleUsersForGrpArr = [];
    var groupUsers = [];
    var _userType;
    var _GroupType;
    var _isOnline;
    var _allGroup = [];
    var _userChatList = [];
    var unreadMsg = [];
    var unreadMessage = 0;
    var totalNotifications = 0;
    var _msgType;
    var publicGrpArr = [];
    var activeFriendId;

    var FileExtensions = ['png', 'jpg', 'jpeg', 'gif', 'bmp',
        'txt', 'text',
        'doc', 'docx', 'docs', 'docm', 'dotx', 'dotm', 'docb',
        'pdf',
        'xlsx', 'xlx', 'xlsb', 'xlsm',
        'ppt', 'pptm', 'pptx',
        'mp4', 'wmv'];

    $(document).ready(function () {
        initApp();
    });
</script>
<script>
   // <<<<<<<<<<<<<<<<<*************  Currently Used Functions In Firebase Start ***************************** >>>>>>>>>>>>>>>>>>>>>>>>

    function initApp() {
        var name;
        var email;
        var teleid;
        var img;
        @{
            @:name = '@Model.name';
            @:email = '@Model.email';
            @:teleid = @Model.teleid;
            @:img = '@Model.ImgPath';
        }
        Save(name, email, teleid, img);
    }
    function Save(name, email, teleid, img) {
       // logout();
        var email = email;
        var username = name;
        var tele_id = teleid; //7;
        var img = img;
        loginUsername(email, email, tele_id, username, img);
    }
    function loginUsername(email, password, tele_id, username, img) {
        //debugger;
        firebase.auth().signInWithEmailAndPassword(email, password).then(function (value) {
            firebase.auth().onAuthStateChanged(function (user) {
                if (user) {
                    var userId = user.uid;
                    SenderId = userId;
                    SaveInDB(SenderId);
                    _SignInStatus();
                    teleUsersArr = [];
                    teleUsersForGrpArr = [];
                    GetUsers(tele_id);
                    //***************************************** Test for On change purpose ******************************//

                    //******************************************************************************************************//
                    AfterChanged();
                    AfterModify();


                    //**************************************** temprary hide *****************************


                    //**************************************** temprary hide end *****************************
                    var ref = firebase.database().ref("TeleUsers");
                    ref.child(userId).once('value', function (snapshot) {
                        if (snapshot.val() !== null) {
                            $("#userInfo").html('');
                            _senderName = snapshot.val().name;
                            //  below code is for base 64 image
                            //var src = snapshot.val().image;
                            ////src += item_image;
                            //var newImage = document.createElement('img');
                            //newImage.src = src;
                            //newImage.classList.add("img-circle");
                            _senderPhoto = snapshot.val().image;
                            _teleid = snapshot.val().teleid;
                            //$("#userInfo").append(newImage);
                            var user_info = "<div class='row'><img src='" + _senderPhoto + "' style='height:20px;width:20px' /> <span> " + _senderName + " </span>&nbsp;<span class='label label-rouded label-danger' id='lblnotify'></span></div>";
                            // var user_info = " <span> " + _senderName + " </span>&nbsp;<span class='label label-rouded label-danger' id='lblnotify'></span>";
                            $("#userInfo").append(user_info);
                            $("#lblnotify").html(totalNotifications);
                            if (totalNotifications === 0)
                                $("#lblnotify1").html('');
                            else
                                $("#lblnotify1").html(totalNotifications);

                        }
                        else {
                            // alert('record not found');
                            firebase.database().ref('TeleUsers').child(userId).set({
                                id: userId,
                                name: username,
                                teleid: tele_id,
                                image: img
                            });
                            location.reload();
                        }

                    });

                    // LoadGroup();
                    //  LoadGroupNew();

                    GetAllGroups();
                }
                else {

                }
            });

        }).catch(function (error) {
            toast(error.message, 7000);
        });


    }
    function SaveInDB(userid) {
        $.ajax({
            type: 'POST',
            url: '/firebaseChat/SaveId',
            data: { id: userid },
            success: function (e) {

            },
            Error: function (e) {
            }
        });
    }
    function _SignInStatus() {
        var ref = firebase.database().ref("TeleUsers");
        ref.on("child_added", function (snapshot) {
            ref.child(snapshot.key).child('Connections').on('child_added', function (data) {
                // console.log(data.key);
                if (data.key === SenderId) {
                    var _ref = firebase.database().ref("TeleUsers/" + snapshot.key + "/Connections");
                    _ref.child(SenderId).update({
                        Online: true,
                        lastOnline: firebase.database.ServerValue.TIMESTAMP
                    });
                }
            });
        });
    }
    function _SignOutStatus() {
        var ref = firebase.database().ref("TeleUsers");
        ref.on("child_added", function (snapshot) {
            ref.child(snapshot.key).child('Connections').on('child_added', function (data) {
                //  console.log(data.key);
                if (data.key === SenderId) {
                    var _ref = firebase.database().ref("TeleUsers/" + snapshot.key + "/Connections");
                    _ref.child(SenderId).update({
                        Online: false,
                        lastOnline: firebase.database.ServerValue.TIMESTAMP
                    });
                }
            });
        });
    }
    function GetUsers(tele_id) {
        var ref = firebase.database().ref("TeleUsers");
        ref.orderByChild("teleid").equalTo(tele_id).on("child_added", function (snapshot) {
            if (SenderId !== snapshot.key) {
                var checkUserExist = teleUsersArr.some(x => x.id == snapshot.key);
                //console.log('checkUserExist status is : ' + checkUserExist);
                if (!checkUserExist) {
                    teleUsersArr.push({ id: snapshot.key, name: snapshot.val().name, image: snapshot.val().image, searchname: snapshot.val().name.toLowerCase() });
                    teleUsersForGrpArr.push({ id: snapshot.key, name: snapshot.val().name, image: snapshot.val().image, searchname: snapshot.val().name.toLowerCase() });
                }
                // console.log('Snapshot record is: ' + snapshot.val().name);
            }
        });
    }
    function logout() {
        _SignOutStatus();
        firebase.auth().signOut().then(function () {

        }).catch(function (error) {
            // console.log("Error signing user out:", error);
        });
    }
    function AfterModify() {
        $("#binduser").html('');
        //  debugger;
        totalNotifications = 0;
        $("#binduser").empty();
        var getConnection = firebase.database().ref("TeleUsers/" + SenderId + "/Connections");
        getConnection.orderByChild('lastOnline').on('child_added', function (friends) {
            //console.log('UserUnreadMsgsModify called !');
            // create  friends list
            let isExist = _userChatList.some(x => x.id == friends.key);
            if (!isExist)
                _userChatList.push({ id: friends.key, name: friends.val().name, image: friends.val().image, searchname: friends.val().name.toLowerCase() });
            // end
            if (friends.val().Online) {
                onlineTag = "<span class='text-success'>online</span>";
                onlineStatus = "online_icon";
            }
            else {
                onlineTag = "<span class='text-muted'>offline</span>";
                onlineStatus = "online_icon offline";
            }
            //var _count = ReadMessageStatus(SenderId, friends.key);
            var date = new Date(friends.val().lastOnline);
            var serverTime = date.toLocaleString();
            // temp hide serverTime
            serverTime = '';

            //console.log('user is:  ' + friends.val().name + ' ,  by husnain');

            totalNotifications += friends.val().unread;
            var unreadmsg = '';
            var spanUnread = '';
            if (friends.val().unread !== 0 && friends.val().unread) {
                unreadmsg = friends.val().unread;
                spanUnread = "<span class='dot'><span style='padding:3px'>" + unreadmsg + "<span></span>";
            }
            else {
                spanUnread = "<span style='float:right'></span>";
            }

            var activeCls = '';
            if (activeFriendId === friends.key)
                activeCls = 'active_chat';

            if (friends.val().type === 'Private') {
                var liTag = "<div class='chat_list " + friends.key + ' ' + activeCls + "'><div class='chat_people'><a href = 'javascript:void(0)' id='btnRequest' class='btnRequest'  data-senderid = '" + SenderId + "' data-type=" + friends.val().type + " data-receiverid = '" + friends.key + "' data-receiverName = '" + friends.val().name + "' data-receiverPhoto = '" + friends.val().image + "' data-onlineStatus = '" + friends.val().Online + "' data-isgrpPublic = 'false'><div class='chat_img'> <img src='" + friends.val().image + "' alt='user-img' class='rounded-circle user_img'><span class='" + onlineStatus + "'> </div><div class='chat_ib'><h5> " + friends.val().name + " <span class='chat_date'> " + serverTime + "</span></h5><p>" + friends.val().lastMessage + " <span > " + onlineTag + spanUnread + "</span></span></p></div></a></div></div>"
            }
            else {
                var liTag = "<div class='chat_list " + friends.key + ' ' + activeCls + "'><div class='chat_people'><a href = 'javascript:void(0)' id='btnRequest'  class='btnRequest' data-senderid = '" + SenderId + "' data-type=" + friends.val().type + " data-receiverid = '" + friends.key + "' data-receiverName = '" + friends.val().name + "' data-receiverPhoto = '" + friends.val().image + "' data-onlineStatus = '" + friends.val().Online + "' data-isgrpPublic = 'false' ><div class='chat_img'> <img src='" + friends.val().image + "' alt='user-img' class='rounded-circle user_img'><span class='online_icon'> </div><div class='chat_ib'><h5>" + friends.val().name + "<span class='chat_date'>" + serverTime + "</span></h5><p>" + friends.val().lastMessage + " <span class='grpTextClr'> (GROUP) </span>" + spanUnread + "</p> </div></div></div>"
            }



            $('.' + friends.key).remove();
            $("#binduser").append(liTag);
            $("#lblnotify").html(totalNotifications);
            if (totalNotifications === 0)
                $("#lblnotify1").html('');
            else
                $("#lblnotify1").html(totalNotifications);
        });

    }
    function AfterChanged() {
        $("#binduser").html('');

        totalNotifications = 0;
        $("#binduser").empty();

        var countArr = [];
        var getConnection = firebase.database().ref("TeleUsers/" + SenderId + "/Connections");
        getConnection.orderByChild('lastOnline').on('child_changed', function (friends) {

            //console.log('UserUnreadMsgsChanged called !');
            AfterModify();
            // code commented to verify the sorted list
            /* 
            if (friends.val().Online) {
                onlineTag = "<span class='text-success'>online</span>";
                onlineStatus = "online_icon";
            }
            else {
                onlineTag = "<span class='text-muted'>offline</span>";
                onlineStatus = "online_icon offline";
            }

            var date = new Date(friends.val().lastOnline);
            var serverTime = date.toLocaleString();
            serverTime = '';
            totalNotifications = friends.val().unread;

            var unreadmsg = '';
            if (friends.val().unread !== 0) {
                unreadmsg = friends.val().unread;
                //document.getElementById("firebaseLink").style.color = "#FCFC00";
                //$('#firebaseLink').toggle(500);
            }
            else {
               // document.getElementById("firebaseLink").style.color = "#FFFFFF";
                //$('#firebaseLink').hide();
                //$('#firebaseLink').show();
            }

            var activeCls = '';
            if (activeFriendId === friends.key)
                activeCls = 'active_chat';

            if (friends.val().type === 'Private') {
                var liTag = "<div class='chat_list " + friends.key + ' ' + activeCls + "'><div class='chat_people'><a href = 'javascript:void(0)' id='btnRequest' class='btnRequest'  data-senderid = '" + SenderId + "' data-type=" + friends.val().type + " data-receiverid = '" + friends.key + "' data-receiverName = '" + friends.val().name + "' data-receiverPhoto = '" + friends.val().image + "' data-onlineStatus = '" + friends.val().Online + "' data-isgrpPublic = 'false'><div class='chat_img'> <img src='" + friends.val().image + "' alt='user-img' class='rounded-circle user_img'><span class='" + onlineStatus + "'></div><div class='chat_ib'><h5> " + friends.val().name + " <span class='chat_date'>" + serverTime + "</span></h5><p>" + friends.val().lastMessage + " <span > " + onlineTag + " <span>" + unreadmsg + "</span></span></p></div></a></div></div>"

            }
            else {
                var liTag = "<div class='chat_list " + friends.key + ' ' + activeCls + "'><div class='chat_people'><a href = 'javascript:void(0)' id='btnRequest' class='btnRequest' data-senderid = '" + SenderId + "' data-type=" + friends.val().type + " data-receiverid = '" + friends.key + "' data-receiverName = '" + friends.val().name + "' data-receiverPhoto = '" + friends.val().image + "' data-onlineStatus = '" + friends.val().Online + "' data-isgrpPublic = 'false' ><div class='chat_img'> <img src='" + friends.val().image + "' alt='user-img' class='rounded-circle user_img'><span class='online_icon'> </div><div class='chat_ib'><h5>" + friends.val().name + "<span class='chat_date'>" + serverTime + "</span></h5><p>" + friends.val().lastMessage + " <span class='grpTextClr'> (GROUP) </span><span class='label label-rouded label-danger'>" + unreadmsg + "</span></p> </div></div></div>"
            }

            // $("." + friends.key).remove();

            $("." + friends.key).html(liTag);
            // $("#binduser").append(liTag);
            */
        });
       
    }
    function GetAllGroups() {
        try {
            var ref = firebase.database().ref("Groups");
            ref.on('child_added', function (data) {
                const checkGrpExist = _allGroup.some(x => x.grpid == data.key);
                if (!checkGrpExist)
                    _allGroup.push({ grpid: data.key, grpname: data.val().groupName, img: data.val().image, admin: data.val().id, searchgrpname: data.val().groupName.toLowerCase() });
            });
            GetPublicGroups();
        } catch (err) {
            console.error(err);
        }
    }
    function GetPublicGroups() {
        try {
            let ref = firebase.database().ref("Groups");
            ref.orderByChild("grpType").equalTo('Public').on("child_added", function (data) {
                const checkGrpExist = publicGrpArr.some(x => x.grpid == data.key);
                if (!checkGrpExist)
                    publicGrpArr.push({ grpid: data.key, grpname: data.val().groupName, img: data.val().image, admin: data.val().id, searchgrpname: data.val().groupName.toLowerCase() });
            });
        }
        catch (error) {
            console.error(error);
        }
    }
    $(document).on('click', ".btnRequest", function () {
        var _senderid = $(this).attr("data-senderid");
        var receiverid = $(this).attr("data-receiverid");
        var receiverName = $(this).attr("data-receiverName");
        var receiverPhoto = $(this).attr("data-receiverPhoto");
        var type = $(this).attr("data-type");
        var isGrpPublic = $(this).attr('data-isgrpPublic');
        if (isGrpPublic === 'true') { type = 'Public'; }

        _isOnline = $(this).attr("data-onlineStatus");
        _msgType = type;
        // debugger;
        activeFriendId = receiverid;
        _receiverId = receiverid;
        _receiverName = receiverName;
        _receiverPhoto = receiverPhoto;

        AfterModify();
        //alert('sender : ' + _senderid + ', Receiver : ' + receiverid);
        // ReadMessageStatus(SenderId, receiverid);
        if (type)
            UpdateReadStatus(type);

       
        GetPerson(type);
        var count = unreadMsg.length;
        if (type === 'Public') {
            isGroup = true;
            UpdateGroupChat(_receiverId);
            checkAllgrpUserReadMsg(_receiverId);
            //GetUnreadGrpMsg(_receiverId);
            _GetGroupChat(_senderid, receiverid);

        }
        else {
            isGroup = false;
            GetChatNew(_senderid, receiverid);

        }

        
    });
    $(document).on('click', "#SendMsg", function () {
        var msg = $("#txtMsg").val();
        if (msg) {
            var id = SenderId + '-' + _receiverId;
            var _id = _receiverId + '-' + SenderId;
            var shortMsg = msg.substring(0, 10) + '...';
            UserConnections(shortMsg);
            if (isGroup) {
                _GroupMessages(_receiverId, msg, 'text');
            }
            else {
                SendMessageNew(id, _id, msg, 'text');
            }
        }
    });
    $(document).on('click', "#saveGroup", function () {
        var name = $("#txtGroupName").val();
        var grptype = $('input[name="grpType"]:checked').val();
        if (name) {
            CreateGroupNew(name, grptype);
            $("#txtGroupName").val('');
            $(".modal").modal('hide');
            // $('#modal').modal('toggle');
        }
    });
    $("#txtMsg").keyup(function (event) {
        if (teleUsersForGrpArr === undefined || teleUsersForGrpArr.length == 0) {
            console.log('recall function for grp users!');
            GetUsers(1);
        }
        if (event.keyCode === 13) {
            var msg = $("#txtMsg").val();
            if (msg) {
                var id = SenderId + '-' + _receiverId;
                var _id = _receiverId + '-' + SenderId;
                var shortMsg = msg.substring(0, 10) + '...';

                UserConnections(shortMsg);

                console.log('is group : ' + isGroup);
                if (isGroup) {
                    //GroupMessages(_receiverId, msg);
                    //*********************** First Time read and update unread group msg of a user **********************//
                    /*
                    var grpUnread = GetUnreadGrpMsg(_receiverId);
                    var ref = firebase.database().ref("TeleUsers/" + SenderId + '/Connections');
                    ref.child(_receiverId).update({
                        lastOnline: firebase.database.ServerValue.TIMESTAMP,
                        name: _receiverName,
                        image: _receiverPhoto,
                        unread: grpUnread
                    });
                    */
                    //***************************************************************************************************//
                    _GroupMessages(_receiverId, msg, 'text');

                }
                else {
                    SendMessageNew(id, _id, msg, 'text');
                }
            }
        }
    });
    $("#txtSearch").keyup(function (event) {
        console.log('users array contain : ', teleUsersArr);
        $("#binduser").html('');
        var txt = $("#txtSearch").val();
        if (txt) {
            var newArr = [];
            for (var i = 0; i < teleUsersArr.length; i++) {
                if (teleUsersArr[i].searchname.match(txt.toLowerCase())) {
                    newArr.push({ id: teleUsersArr[i].id, name: teleUsersArr[i].name, image: teleUsersArr[i].image, isGrpPublic: 'false' });
                }
            }
            for (var i = 0; i < publicGrpArr.length; i++) {
                if (publicGrpArr[i].searchgrpname.match(txt.toLowerCase())) {
                    newArr.push({ id: publicGrpArr[i].grpid, name: publicGrpArr[i].grpname, image: publicGrpArr[i].img, isGrpPublic: 'true' });
                }
            }
            for (var i = 0; i < _userChatList.length; i++) {
                if (_userChatList[i].searchname.match(txt.toLowerCase())) {
                    let found = newArr.some(x => x.id == _userChatList[i].id);
                    if (!found)
                        newArr.push({ id: _userChatList[i].id, name: _userChatList[i].name, image: _userChatList[i].image, isGrpPublic: 'false' });
                }
            }
            for (var i = 0; i < newArr.length; i++) {
                //var liTag = "<li><a href = 'javascript:void(0)' id='btnRequest' data-senderid = '" + SenderId + "' data-receiverid = '" + newArr[i].id + "' data-receiverName = '" + newArr[i].name + "' data-receiverPhoto = '" + newArr[i].image + "'  data-isgrpPublic = '" + newArr[i].isGrpPublic + "'> <img src='" + newArr[i].image + "' alt='user-img' class='img-circle'> <span> " + newArr[i].name + "<small class='text-success'>online</small></span></a></li > ";
                var liTag = "<div class='chat_list'><div class='chat_people'><a href = 'javascript:void(0)' id='btnRequest' class='btnRequest' data-senderid = '" + SenderId + "' data-receiverid = '" + newArr[i].id + "' data-receiverName = '" + newArr[i].name + "' data-receiverPhoto = '" + newArr[i].image + "'  data-isgrpPublic = '" + newArr[i].isGrpPublic + "'><div class='chat_img'> <img src='" + newArr[i].image + "' alt='user-img'> </div><div class='chat_ib'><h5> " + newArr[i].name + " <span class='chat_date'>Dec 25</span></h5><p>users<span></p></div></a></div></div>"
                $("#binduser").append(liTag);
            }
        }
        else {
            AfterModify();
        }
    });
    $("#txtSearchGrpUsers").keyup(function (event) {
        $("#userlistforGrp").html('');
        var txt = $("#txtSearchGrpUsers").val();
        console.log('groupUsers:', groupUsers);
        if (txt) {
            var newArr = [];
            for (var i = 0; i < teleUsersForGrpArr.length; i++) {
                if (teleUsersForGrpArr[i].searchname.match(txt.toLowerCase())) {
                    newArr.push({ id: teleUsersForGrpArr[i].id, name: teleUsersForGrpArr[i].name, image: teleUsersForGrpArr[i].image });
                }
            }
            var grpId = _receiverId;
            var j = 1;
            for (var i = 0; i < newArr.length; i++) {
                var _userid = newArr[i].id;
                var _photo = newArr[i].image;
                var _name = newArr[i].name;
                var checkExist = _userid + '-' + grpId;
                var exist = groupUsers.map(e => e.id).indexOf(_userid);
                if (exist > -1) {
                    var liTag = "<li> <div class='row col-md-12'> <div style='width:80%'> <a href = 'javascript:void(0)'  data-senderid = '" + SenderId + "' data-receiverid = '" + _userid + "' data-receiverName = '" + _name + "' data-receiverPhoto = '" + _photo + "' class='text-decoration-none' > <img src='" + _photo + "' alt='user-img' class='chat_userList'> <span> " + _name + "</span></a> </div> <div class='checkbox checkbox-success'><input id = 'checkbox3" + j + "' type ='checkbox' class='Addusers' data-usrid='" + _userid + "' data-usrname='" + _name + "' data-usrimage='" + _photo + "' data-loop='" + j + "' checked ><label for='checkbox3'> </label></div> </div> </li > ";
                    $("#userlistforGrp").append(liTag);
                }
                else {
                    var liTag = "<li> <div class='row col-md-12'><div style='width:80%'> <a href = 'javascript:void(0)' data-senderid = '" + SenderId + "' data-receiverid = '" + _userid + "' data-receiverName = '" + _name + "' data-receiverPhoto = '" + _photo + "' class='text-decoration-none'  > <img src='" + _photo + "' alt='user-img' class='chat_userList '> <span> " + _name + "</span></a> </div> <div class='checkbox checkbox-success'><input id = 'checkbox3" + j + "' type ='checkbox' class='Addusers' data-usrid='" + _userid + "' data-usrname='" + _name + "' data-usrimage='" + _photo + "' data-loop='" + j + "'><label for='checkbox3'>  </label></div> </div></li > ";
                    $("#userlistforGrp").append(liTag);
                }
                j++;
            }
        }
        else {
            //call load methoad
            _LoadGrpUsers();
        }
    });
    $(document).on('click', "#addUserToGrp", function () {
        $("#userlistforGrp").html('');
        //GetGroupUsers();
        _LoadGrpUsers();
    });
    function _LoadGrpUsers() {
        var _groupUsers = [];
        var grpId = _receiverId;
        var ref = firebase.database().ref("Groups/" + grpId + "/users");
        ref.on("child_added", function (snapshot) {
            _groupUsers.push({ id: snapshot.key });
        });
        groupUsers = _groupUsers.slice();
        _GetGroupUsers(_groupUsers);
    }
    function _GetGroupUsers(_groupUsers) {
        if (teleUsersForGrpArr === undefined || teleUsersForGrpArr.length == 0) {
            console.log('recall function for grp users!');
            GetUsers(1);
        }
        $("#userlistforGrp").html('');
        var grpId = _receiverId;
        var j = 1;
        console.log('grp user array contain : ', teleUsersForGrpArr);
        for (var i = 0; i < teleUsersForGrpArr.length; i++) {
            var _userid = teleUsersForGrpArr[i].id;
            var _photo = teleUsersForGrpArr[i].image;
            var _name = teleUsersForGrpArr[i].name;
            var checkExist = _userid + '-' + grpId;
            var exist = _groupUsers.map(e => e.id).indexOf(_userid);
            if (exist > -1) {
                var liTag = "<li> <div class='row col-md-12'> <div style='width:80%'> <a href = 'javascript:void(0)'  data-senderid = '" + SenderId + "' data-receiverid = '" + _userid + "' data-receiverName = '" + _name + "' data-receiverPhoto = '" + _photo + "' class='text-decoration-none' > <img src='" + _photo + "' alt='user-img' class='chat_userList'> <span> " + _name + "</span></a> </div> <div class='checkbox checkbox-success'><input id = 'checkbox3" + j + "' type ='checkbox' class='Addusers' data-usrid='" + _userid + "' data-usrname='" + _name + "' data-usrimage='" + _photo + "' data-loop='" + j + "' checked ><label for='checkbox3'> </label></div> </div> </li > ";
                $("#userlistforGrp").append(liTag);
            }
            else {
                var liTag = "<li> <div class='row col-md-12'><div style='width:80%'> <a href = 'javascript:void(0)' data-senderid = '" + SenderId + "' data-receiverid = '" + _userid + "' data-receiverName = '" + _name + "' data-receiverPhoto = '" + _photo + "' class='text-decoration-none'  > <img src='" + _photo + "' alt='user-img' class='chat_userList '> <span> " + _name + "</span></a> </div> <div class='checkbox checkbox-success'><input id = 'checkbox3" + j + "' type ='checkbox' class='Addusers' data-usrid='" + _userid + "' data-usrname='" + _name + "' data-usrimage='" + _photo + "' data-loop='" + j + "'><label for='checkbox3'>  </label></div> </div></li > ";
                $("#userlistforGrp").append(liTag);
            }
            j++;
        }
    }
    function UpdateReadStatus(type) {
        // debugger;
        if (type === 'Private') {


            var id = SenderId + '-' + _receiverId;
            var _id = _receiverId + '-' + SenderId;
            var status = 'not';

            var ref = firebase.database().ref("userMessages/" + id);
            ref.orderByChild('receiverId').equalTo(SenderId).on('child_added', function (snapshot) {
                status = 'found';
                var _ref = firebase.database().ref("userMessages/" + id);
                // console.log('update msg id : ' + snapshot.key);
                _ref.child(snapshot.key).update({
                    isRead: true
                });
            });


            if (status !== 'found') {
                var _ref = firebase.database().ref("userMessages/" + _id);
                _ref.orderByChild('receiverId').equalTo(SenderId).on('child_added', function (snapshot) {
                    var _ref = firebase.database().ref("userMessages/" + _id + "/" + snapshot.key);
                    // console.log('id is ; ' + snapshot.key);
                    _ref.update({
                        isRead: true
                    });

                });

            }
        }
        else if (type === 'Public') {
            UpdateGroupChat(_receiverId);
        }
        firebase.database().ref("TeleUsers/" + SenderId + "/Connections").child(_receiverId).update({
            unread: 0
        });

    }
    function GetPerson(type) {
        var index = _allGroup.map(e => e.grpid).indexOf(_receiverId);
        var record = _allGroup[index];
        if (record) {
            if (record.admin === SenderId)
                _userType = 'Admin';
            else
                _userType = 'user';
        }
        else
            _userType = 'user';


        if (_userType === "Admin") {
            addTag = "<a href='javascript:void(0)' id='addUserToGrp' class='cst-icon' target='_blank' data-toggle='modal' data-target='.bs-example-modal-lg1' data-id '" + _receiverId + "' title='Add Users' > <span class='fa fa-user-plus'></span> </a>";
        }
        else {
            addTag = '';
        }
        if (type === 'Private') {
            if (_isOnline == 'true') {
                onlineTag = "<span class='text-success'>online</span>";
                onlineStatus = "online_icon";
            }
            else {
                onlineTag = "<span class='text-muted'>offline</span>";
                onlineStatus = "online_icon offline";
            }
        }
        else {
            onlineTag = "<span class='text-success'>GRP</span>";
            onlineStatus = "online_icon";
        }

        liTag = "<div class='chat_img_prf_div'><img src='" + _receiverPhoto + "' alt='user-img' class= 'user_img_prf rounded-circle'><span class='" + onlineStatus + "'></span></div > <div style='float:left'> <span class='grp-title-name'> " + _receiverName + "<small class='text-success'>&nbsp; " + onlineTag + "</small></span> " + addTag + "</div>";
        $(".box-title").hide();
        $("#person").html(liTag);

    }
    function UpdateGroupChat(grpid) {
        //debugger;
        var ref = firebase.database().ref("userMessages/" + grpid);
        ref.on("child_added", function (snapshot) {
            // console.log('key is : ' + snapshot.key);
            ref.child(snapshot.key).child('read/' + SenderId).set({
                id: SenderId,
                name: _senderName
            });
        });

    }
    function checkAllgrpUserReadMsg(grpid) {
        //******************* Method One **********************************//
        try {
            var _grpArr = [];
            var groupUser = firebase.database().ref("Groups/" + grpid + "/users");
            groupUser.on('child_added', function (grpUser) {
                _grpArr.push({ id: grpUser.key });
            });

            var ref = firebase.database().ref("userMessages/" + grpid);
            ref.on("child_added", function (snapshot) {
                
                var msgArr = [];
                for (var i = 0; i < _grpArr.length; i++) {
                    //console.log(' id is undefiend _grpArr is : ', _grpArr[i]);
                    if (_grpArr[i]) {
                        var Alluser = 'notFound';
                        ref.child(snapshot.key + '/read').child(_grpArr[i].id).once('child_added', function (userData) {
                            if (_grpArr[i]) {
                                Alluser = 'userFound';
                                msgArr.push({ id: _grpArr[i].id });
                            }
                        });
                        if (Alluser !== 'userFound') {
                            Alluser = 'notFound';
                        }
                    }
                    // console.log('user is : ' + _grpArr[i].id + ' , find user is : ' + Alluser);
                }
                if (_grpArr.length === msgArr.length) {
                    // console.log('husnain All Members have read this msg.');
                    var _ref = firebase.database().ref("userMessages/" + grpid + '/' + snapshot.key);
                    _ref.update({
                        isRead: true
                    });
                }

                else {
                    // console.log('husnain arrays not equal in length');
                }

            });
        }
        catch (err) {
            console.log('')
        }

        /////////////////////////////////////////////////////////////////////////////////

        //////////////////// Method Two ///////////////////////////////
        /*
        var _grpArr = [];
        var groupUser = firebase.database().ref("Groups/" + grpid + "/users");
        groupUser.on('child_added', function (grpUser) {
            _grpArr.push({ id: grpUser.key });
        });

        var msgArr = [];
        var ref = firebase.database().ref("userMessages/" + grpid);
        ref.on("child_added", function (snapshot) {
            console.log('key is : ' + snapshot.key);
            var Alluser = 'notFound';
            ref.child(snapshot.key + '/read').on('child_added', function (userData) {
                Alluser = 'userFound';
                console.log('get user data : ' + userData.key);
                msgArr.push({ id: userData.key });
            });
            if (Alluser !== 'userFound') {
                Alluser = 'notFound';
            }
           // console.log('user result is , user is : ' + grpUser.key + ' , find user is : ' + Alluser);
        });
        var iLength = 0;
        for (var i = 0; i < _grpArr.length; i++) {
            var recordfind = msgArr.map(e => e.id).indexOf(_grpArr[i].id);
            if (recordfind > -1) {
                console.log('array record found : ' + msgArr[recordfind]);
            }
        }
        */
    }
    function _GetGroupChat(senderid, receiverid) {
        $("#msgDetail").html('');
        var firstKnownKey = '';
        var ref = firebase.database().ref("userMessages/" + receiverid);
        ref.on("child_added", function (snapshot) {
            if (!firstKnownKey) {
                firstKnownKey = snapshot.key;
            }
            if (snapshot.ref.parent.key === _receiverId) {
                if (SenderId === snapshot.val().senderId) {
                    //_senderName = snapshot.val().senderName;
                    //_senderPhoto = snapshot.val().senderPhoto;
                    _teleid = snapshot.val().teleid;
                    var date = new Date(snapshot.val().dateTime);
                    var serverTime = date.toLocaleString();


                    var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                    if (record)
                        record = snapshot.val().msgType;
                    else
                        record = '';
                    // console.log('my group record is : ' + record);
                    var isCheck;
                    if (snapshot.val().isRead)
                        isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                    else
                        isCheck = "<i class='fa fa-check'></i>";

                    var myfileTag;

                    // Decrypt
                    var bytes = CryptoJS.AES.decrypt(snapshot.val().message, '123');
                    var decryptMsg = bytes.toString(CryptoJS.enc.Utf8);

                    if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                        myfileTag = "<img src='" + decryptMsg + "' style='height:100px;width:100px'/>";
                    else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'pdf')
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'text')
                        myfileTag = "<p> " + decryptMsg + " </p>";
                    else
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";

                    // current working div 27/10/2020
                    //var liTag = "<div class='outgoing_msg " + snapshot.key + "'><div class='sent_msg'>" + myfileTag + "<div class='row col-md-12'><span class='time_date'>" + serverTime + " </span><span class='fa-icon-size'>" + isCheck + "</span></div></div><div>"

                    // new testing div
                    var liTag = "<div class='outgoing_msg " + snapshot.key + "'><div class='sent_msg'>" + myfileTag + "<div class='row col-md-12'><span class='time_date'>" + serverTime + " </span><span class='fa-icon-size'>" + isCheck + "</span></div></div><div>"

                    $("." + snapshot.key).remove();
                    $("#msgDetail").append(liTag);
                    var messageBody = document.querySelector('#msgDetail');
                    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                }
                else {
                    var date = new Date(snapshot.val().dateTime);
                    var serverTime = date.toLocaleString();


                    var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                    if (record)
                        record = snapshot.val().msgType;
                    else
                        record = '';
                    //console.log('my group record is : ' + record);
                    var isCheck;
                    if (snapshot.val().isRead)
                        isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                    else
                        isCheck = "<i class='fa fa-check'></i>";

                    var myfileTag;

                    // Decrypt
                    var bytes = CryptoJS.AES.decrypt(snapshot.val().message, '123');
                    var decryptMsg = bytes.toString(CryptoJS.enc.Utf8);

                    if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                        myfileTag = "<img src='" + decryptMsg + "' style='height:100px;width:100px'/>";
                    else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'pdf')
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'text')
                        myfileTag = "<p> " + decryptMsg + " </p>";
                    else
                        myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";

                    //var liTag = "<li class='odduser " + snapshot.key + "'><div class='chat-image'> <img src='" + snapshot.val().senderPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + snapshot.val().senderName + "</h4>" + myfileTag + " <b>" + serverTime + " </b><span>" + isCheck + "</span></div></div></li >";
                    var liTag = "<div class='incoming_msg " + snapshot.key + "'><div class='incoming_msg_img'> <img src='" + _receiverPhoto + "'> </div><div class='received_msg'><small>" + snapshot.val().senderName + "</small><div class='received_withd_msg'>" + myfileTag + "<div class='row col-md-12'><span class='time_date'> " + serverTime + " </span><span class='fa-icon-size'>" + isCheck + "</span></div></div></div></div>"

                    $("." + snapshot.key).remove();
                    $("#msgDetail").append(liTag);
                    
                    var users = '';
                    ref.child(snapshot.key).child('read').on('child_added', function (seenUser) {
                        users += seenUser.val().name + ', ';
                    });
                    let seenMsg = 'Seen By ' + users;
                    let _defaultAtamp = 'Seen By ' + _senderName + ', ';
                    //console.log('default users : ' + _defaultAtamp);
                    if (seenMsg !== _defaultAtamp) {
                        var _text = "<li class='centerAlignSeen'><span>" + seenMsg + " </span></li>";
                        $("#msgDetail").append(_text);
                    }
                    var messageBody = document.querySelector('#msgDetail');
                    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                }
            }
        });


    }
    function GetChatNew(senderid, receiverid) {
        $("#msgDetail").html('');
        $("#msgDetail").empty();
        var id = senderid + '-' + receiverid;
        var _id = receiverid + '-' + senderid;
        var status = 'not';
        var foundId;
        var ref = firebase.database().ref("userMessages");
        var refConnection = firebase.database().ref("TeleUsers/" + SenderId + '/ConnectionRules');
        refConnection.child(id).on('value', function (data) {
            if (data.val() !== null) {
                foundId = id;
                endToEndChatId = id;
                ref.child(foundId).on("child_added", function (snapshot) {
                    if (snapshot.ref.parent.key === endToEndChatId) {
                        if (SenderId === snapshot.val().senderId) {
                            _teleid = snapshot.val().teleid;
                            var date = new Date(snapshot.val().dateTime);
                            var serverTime = date.toLocaleString();
                            var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                            if (record)
                                record = snapshot.val().msgType;
                            else
                                record = '';

                            var isCheck;
                            if (snapshot.val().isRead)
                                isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                            else
                                isCheck = "<i class='fa fa-check'></i>";


                            var myfileTag;

                            // Decrypt
                            var bytes = CryptoJS.AES.decrypt(snapshot.val().message, '123');
                            var decryptMsg = bytes.toString(CryptoJS.enc.Utf8);

                            if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                                myfileTag = "<img src='" + decryptMsg + "' style='height:100px;width:100px'/>";
                            else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                            else if (record === 'pdf')
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                            else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                            else if (record === 'text')
                                myfileTag = "<p> " + decryptMsg + " </p>";
                            else
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";

                            // var liTag = "<li class='odd " + snapshot.key + "'><div class='chat-image'> <img src='" + _senderPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _senderName + "</h4> " + myfileTag + " <b>" + serverTime + " </b> <span>" + isCheck + "</span></div></div></li >";
                            var liTag = "<div class='outgoing_msg " + snapshot.key + "'><div class='sent_msg'>" + myfileTag + "<div class='row col-md-12'><span class='time_date'> " + serverTime + " </span><span class='fa-icon-size'>" + isCheck + "</span></div></div><div>"

                            // console.log('(my record is) : ' + snapshot.val().message);
                            $("." + snapshot.key).remove();
                            $("#msgDetail").append(liTag);
                            var messageBody = document.querySelector('#msgDetail');
                            messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                        }
                        else {

                            var date = new Date(snapshot.val().dateTime);
                            var serverTime = date.toLocaleString();

                            var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);

                            if (record)
                                record = snapshot.val().msgType;
                            else
                                record = '';

                            var isCheck;
                            if (snapshot.val().isRead)
                                isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                            else
                                isCheck = "<i class='fa fa-check'></i>";

                            var myfileTag;
							 
                            // Decrypt
                            var bytes = CryptoJS.AES.decrypt(snapshot.val().message, '123');
                            var decryptMsg = bytes.toString(CryptoJS.enc.Utf8);

                            if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                                myfileTag = "<img src='" + decryptMsg + "' style='height:100px;width:100px'/>";
                            else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                            else if (record === 'pdf')
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                            else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                            else if (record === 'text')
                                myfileTag = "<p> " + decryptMsg + " </p>";
                            else
                                myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";


                            //var liTag = "<li class='odduser " + snapshot.key + "'><div class='chat-image'> <img src='" + _receiverPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _receiverName + "</h4> " + myfileTag + " <b>" + serverTime + " </b><span>" + isCheck + "</span></div></div></li >";
                            var liTag = "<div class='incoming_msg " + snapshot.key + "'><div class='incoming_msg_img'> <img src='" + _receiverPhoto + "'> </div><div class='received_msg'><small>" + _receiverName + "</small><div class='received_withd_msg'>" + myfileTag + "<div class='row col-md-12'><span class='time_date'> " + serverTime + " </span><span class='fa-icon-size'>" + isCheck + "</span></div></div></div></div>"

                            $("." + snapshot.key).remove();
                            $("#msgDetail").append(liTag);
                            var messageBody = document.querySelector('#msgDetail');
                            messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                        }
                    }
                });
            }
            else {
                refConnection.child(_id).on('value', function (collect) {
                    foundId = _id;
                    endToEndChatId = _id;
                    ref.child(foundId).on("child_added", function (snapshot) {
                        if (snapshot.ref.parent.key === endToEndChatId) {
                            if (SenderId === snapshot.val().senderId) {
                                _senderName = snapshot.val().senderName;
                                _senderPhoto = snapshot.val().senderPhoto;
                                _teleid = snapshot.val().teleid;
                                var date = new Date(snapshot.val().dateTime);
                                var serverTime = date.toLocaleString();


                                var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                                if (record)
                                    record = snapshot.val().msgType;
                                else
                                    record = '';
                                //console.log('my record is : ' + record);

                                var isCheck;
                                if (snapshot.val().isRead)
                                    isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                                else
                                    isCheck = "<i class='fa fa-check'></i>";

                                var myfileTag;

                                // Decrypt
                                var bytes = CryptoJS.AES.decrypt(snapshot.val().message, '123');
                                var decryptMsg = bytes.toString(CryptoJS.enc.Utf8);

                                if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                                    myfileTag = "<img src='" + decryptMsg + "' style='height:100px;width:100px'/>";
                                else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                                else if (record === 'pdf')
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                                else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                                else if (record === 'text')
                                    myfileTag = "<p> " + decryptMsg + " </p>";
                                else
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";


                                // var liTag = "<li class='odd " + snapshot.key + "'><div class='chat-image'> <img src='" + _senderPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _senderName + "</h4>" + myfileTag + "<b>" + serverTime + " </b><span>" + isCheck + "</span></div></div></li >";
                                var liTag = "<div class='outgoing_msg " + snapshot.key + "'><div class='sent_msg'>" + myfileTag + "<div class='row col-md-12'><span class='time_date'> " + serverTime + " </span><span class='fa-icon-size'>" + isCheck + "</span></div></div><div>"

                                $("." + snapshot.key).remove();
                                $("#msgDetail").append(liTag);
                                var messageBody = document.querySelector('#msgDetail');
                                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                            }
                            else {
                                var date = new Date(snapshot.val().dateTime);
                                var serverTime = date.toLocaleString();


                                var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                                if (record)
                                    record = snapshot.val().msgType;
                                else
                                    record = '';
                                //console.log('my record is : ' + record);

                                var isCheck;
                                if (snapshot.val().isRead)
                                    isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                                else
                                    isCheck = "<i class='fa fa-check'></i>";

                                var myfileTag;

                                // Decrypt
                                var bytes = CryptoJS.AES.decrypt(snapshot.val().message, '123');
                                var decryptMsg = bytes.toString(CryptoJS.enc.Utf8);

                                if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp')
                                    myfileTag = "<img src='" + decryptMsg + "' style='height:100px;width:100px'/>";
                                else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                                else if (record === 'pdf')
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                                else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                                else if (record === 'text')
                                    myfileTag = "<p> " + decryptMsg + " </p>";
                                else
                                    myfileTag = "<a href='" + decryptMsg + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";

                                //var liTag = "<li class='odduser " + snapshot.key + "'><div class='chat-image'> <img  src='" + _receiverPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _receiverName + "</h4>" + myfileTag + " <b>" + serverTime + "</b><span>" + isCheck + "</span></div></div></li >";
                                var liTag = "<div class='incoming_msg " + snapshot.key + "'><div class='incoming_msg_img'> <img src='" + _receiverPhoto + "'> </div><div class='received_msg'><small>" + _receiverName + "</small><div class='received_withd_msg'>" + myfileTag + "<div class='row col-md-12'><span class='time_date'> " + serverTime + " </span><span class='fa-icon-size'>" + isCheck + "</span></div></div></div></div>"

                                $("." + snapshot.key).remove();
                                $("#msgDetail").append(liTag);
                                var messageBody = document.querySelector('#msgDetail');
                                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                            }
                        }
                    });
                });
            }
        });

    }
    function UserConnections(shortmsg) {
        var _type = '';
        if (isGroup)
            _type = 'Public';
        else
            _type = 'Private';

        var ref = firebase.database().ref("TeleUsers/" + SenderId + '/Connections');
        ref.child(_receiverId).update({
            lastOnline: firebase.database.ServerValue.TIMESTAMP,
            name: _receiverName,
            image: _receiverPhoto,
            lastMessage: shortmsg,
            type: _type,
            msgNode: SenderId + '-' + _receiverId
        }).then(function () {
            if (_type === 'Private')
                return ref.child(SenderId).once("value");
            else
                return ref.child(_receiverId).once("value");
        }).then(function (snapshot) {
            //debugger;
            var data = snapshot.val();
            var time = snapshot.val().lastOnline;
            //console.log('my local time is : ' + time);
            var reff = firebase.database().ref("TeleUsers/" + SenderId + '/Connections');
            reff.child(_receiverId).update({
                lastOnline: time * -1
            });

            // AfterModify();
        });
        if (isGroup) {
            LoadGrpUsers(shortmsg);

            var refRule = firebase.database().ref("TeleUsers/" + SenderId + '/ConnectionRules');
            refRule.child(_receiverId).update({
                msgNode: _receiverId
            });
        }

        if (isGroup === false) {
            var ref = firebase.database().ref("TeleUsers/" + _receiverId + '/Connections');
            ref.child(SenderId).update({
                lastOnline: firebase.database.ServerValue.TIMESTAMP,
                name: _senderName,
                image: _senderPhoto,
                lastMessage: shortmsg,
                type: _type
            }).then(function () {
                return ref.child(SenderId).once("value");
            }).then(function (snapshot) {
                // debugger;
                var data = snapshot.val();
                var time = snapshot.val().lastOnline;
                var unread = snapshot.val().unread;
                if (unread)
                    unread += 1;
                else
                    unread = 1;
                //console.log('my local time is : ' + time);
                var reff = firebase.database().ref("TeleUsers/" + _receiverId + '/Connections');
                reff.child(SenderId).update({
                    lastOnline: time * -1,
                    unread: unread
                });
                // AfterModify();
            });



            var id = SenderId + "-" + _receiverId;
            var _id = _receiverId + "-" + SenderId;
            // debugger;
            var isExist = "not";

            var getRule = firebase.database().ref("TeleUsers/" + SenderId + '/ConnectionRules');
            getRule.child(id).on('value', function (snapshot) {
                if (snapshot.val() !== null) {
                    isExist = 'found';
                    // console.log('value is : ' + isExist + ' ,  ' + snapshot.key);
                }
                else {
                    getRule.child(_id).on('value', function (data) {
                        if (data.val() !== null) {
                            isExist = '_found';
                            //  console.log('value is : ' + isExist + ' ,  ' + data.key);
                        }
                        else {
                            isExist = 'noFound';
                        }
                    });
                }
            });

            /*
            if (isExist === 'noFound') {
                var _getRule = firebase.database().ref("TeleUsers/" + SenderId + '/ConnectionRules');
                _getRule.child(_id).on('value', function (snapshot) {
                    isExist = '_found';
                    console.log('value is : ' + isExist + ' ,  ' + snapshot.key);
                });
            }
            */

            if (isExist === 'noFound') {
                var refRule = firebase.database().ref("TeleUsers/" + SenderId + '/ConnectionRules');
                refRule.child(id).update({
                    msgNode: id
                });

                var refRule = firebase.database().ref("TeleUsers/" + _receiverId + '/ConnectionRules');
                refRule.child(id).update({
                    msgNode: id
                });
            }



        }




    }
    function _GroupMessages(grpid, msg, type) {
        // Encrypt
        var encryptMsg = CryptoJS.AES.encrypt(msg, '123');
        firebase.database().ref('userMessages/' + grpid).push({
            isRead: false,
            grpId: grpid,
            senderId: SenderId,
            read: false,
            senderName: _senderName,
            senderPhoto: _senderPhoto,
            dateTime: firebase.database.ServerValue.TIMESTAMP,
            teleid: _teleid,
            message: encryptMsg.toString(),
            type: 'Public',
            msgType: type
        });
        $("#txtMsg").val('');
    }
    function SendMessageNew(id, _id, msg, type) {
        // Encrypt
        var encryptMsg = CryptoJS.AES.encrypt(msg, '123');
        var ref = firebase.database().ref("TeleUsers/" + SenderId + '/ConnectionRules');
        ref.child(id).once('value', function (snapshot) {
            if (snapshot.val() !== null) {
                firebase.database().ref('userMessages').child(id).push({
                    isRead: false,
                    receiverId: _receiverId,
                    receiverName: _receiverName,
                    receiverPhoto: _receiverPhoto,
                    senderId: SenderId,
                    senderName: _senderName,
                    senderPhoto: _senderPhoto,
                    dateTime: firebase.database.ServerValue.TIMESTAMP,
                    teleid: _teleid,
                    message: encryptMsg.toString(),
                    type: 'Private',
                    msgType: type
                });
            }
            else {
                ref.child(_id).once('value', function (snapshot) {
                    if (snapshot.val() !== null) {
                        firebase.database().ref('userMessages').child(_id).push({
                            isRead: false,
                            receiverId: _receiverId,
                            receiverName: _receiverName,
                            receiverPhoto: _receiverPhoto,
                            senderId: SenderId,
                            senderName: _senderName,
                            senderPhoto: _senderPhoto,
                            dateTime: firebase.database.ServerValue.TIMESTAMP,
                            teleid: _teleid,
                            message: encryptMsg.toString(),
                            type: 'Private',
                            msgType: type
                        });
                    }
                    else {
                        firebase.database().ref('userMessages').child(id).push({
                            isRead: false,
                            receiverId: _receiverId,
                            receiverName: _receiverName,
                            receiverPhoto: _receiverPhoto,
                            senderId: SenderId,
                            senderName: _senderName,
                            senderPhoto: _senderPhoto,
                            dateTime: firebase.database.ServerValue.TIMESTAMP,
                            teleid: _teleid,
                            message: encryptMsg.toString(),
                            type: 'Private',
                            msgType: type
                        });
                    }
                });
            }
        });
        $("#txtMsg").val('');
    }
    function CreateGroupNew(name, grptype) {
        var getkey = firebase.database().ref().child("Groups").push().key;
        firebase.database().ref('Groups').child(getkey).set({
            groupName: name,
            createdBy: SenderId,
            id: SenderId,
            teleid: _teleid,
            type: 'Admin',
            grpFor: '',
            userName: _senderName,
            image: '/Content/images/group.png',//_senderPhoto,
            dateTime: firebase.database.ServerValue.TIMESTAMP,
            grpType: grptype
        });
        firebase.database().ref('Groups/' + getkey + '/users/').child(SenderId).set({
            id: SenderId,
            groupName: name,
            teleid: _teleid,
            type: 'Admin',
            userName: _senderName,
            image: _senderPhoto,
            dateTime: firebase.database.ServerValue.TIMESTAMP
        });

        GetGroupByKey(getkey);
    }
    function LoadGrpUsers(shortmsg) {
        // debugger;
        var _Users = [];
        var grpId = _receiverId;
        var ref = firebase.database().ref("Groups/" + grpId + "/users");
        ref.on("child_added", function (snapshot) {
            //_Users.push({ id: snapshot.key });
            var id = snapshot.key;
            if (id !== SenderId) {
                var ref = firebase.database().ref("TeleUsers/" + id + '/Connections');
                ref.child(grpId).update({
                    lastOnline: firebase.database.ServerValue.TIMESTAMP,
                    lastMessage: shortmsg,
                    type: 'Public'
                }).then(function () {
                    return ref.child(grpId).once("value");
                }).then(function (snapshot) {
                    // debugger;
                    var data = snapshot.val();
                    var time = snapshot.val().lastOnline;
                    var unread = snapshot.val().unread;
                    if (unread)
                        unread += 1;
                    else
                        unread = 1;
                    //console.log('my local time is : ' + time);
                    var reff = firebase.database().ref("TeleUsers/" + id + '/Connections');
                    reff.child(grpId).update({
                        lastOnline: time * -1,
                        unread: unread
                    });

                });
            }
        });
        //UpdateUnreadCountForGroupUsers(grpId, _Users, shortmsg);
    }
    function GetGroupByKey(key) {
        //debugger;
        var ref = firebase.database().ref("Groups/" + key);
        ref.on('value', function (data) {
            _receiverId = data.key;
            _receiverName = data.val().groupName;
            _receiverPhoto = data.val().image;
            isGroup = true;
        });
        var txt = '';
        UserConnections(txt);
    }
    $(document).on('change', ".Addusers", function () {

        var _userid = $(this).attr("data-usrid");
        var _name = $(this).attr("data-usrname");
        var _image = $(this).attr("data-usrimage");

        var loop = $(this).attr("data-loop");

        var grpId = _receiverId;

        var nodeid = _userid + '-' + grpId;
        var grpname = _receiverName;

        var isChecked = document.getElementById("checkbox3" + loop).checked;
        if (isChecked) {
            // AddUserToGroup(_userid, _name, _image, grpId, nodeid, grpname);
            AddUserToGroupNew(_userid, _name, _image, grpId, nodeid, grpname);
        }
        else {
            DeleteUserFromGroup(grpId, _userid);
        }


    });
    function AddUserToGroupNew(userid, name, image, grpid, nodeid, grpname) {

        firebase.database().ref('Groups/' + grpid + '/users').child(userid).set({
            id: userid,
            teleid: _teleid,
            groupId: grpid,
            groupName: grpname,
            type: 'user',
            userName: name,
            image: image,
            dateTime: firebase.database.ServerValue.TIMESTAMP
        });

        var ref = firebase.database().ref("TeleUsers/" + userid + "/Connections");
        ref.child(grpid).set({
            lastOnline: firebase.database.ServerValue.TIMESTAMP,
            name: grpname,
            image: _receiverPhoto,
            lastMessage: '',
            type: 'Public'
        });

        var refRule = firebase.database().ref("TeleUsers/" + userid + "/ConnectionRules");
        refRule.child(grpid).set({
            msgNode: grpid
        });
    }
    function DeleteUserFromGroup(grpid, nodeid) {
        firebase.database().ref('Groups/' + grpid + '/users').child(nodeid).remove();
        firebase.database().ref('TeleUsers/' + nodeid + '/Connections').child(grpid).remove();
        firebase.database().ref('TeleUsers/' + nodeid + '/ConnectionRules').child(grpid).remove();
    }

   // <<<<<<<<<<<<<<<<<*************  Currently Used Functions In Firebase End ***************************** >>>>>>>>>>>>>>>>>>>>>>>>

   

</script>
<script>
     // <<<<<<<<<<<<<<<<<*************  Currently Not Used Functions In Firebase  Or Can be used in future  Start***************************** >>>>>>>>>>>>>>>>>>>>>>>>

    var _ab;
    function PassValues(myArr) {

        // var ref = firebase.database().ref("TeleUsers");
        //ref.orderByChild("teleid").equalTo('7').on("child_added", function (snapshot) {
        //    var liTag = "<li><a href = 'javascript:void(0)' > <img src='../plugins/images/users/varun.jpg' alt='user-img' class='img-circle'> <span> " + snapshot.val().name + "<small class='text-success'>online</small></span></a></li >";
        //    $("#binduser").append(liTag);
        //    console.log(snapshot.val().name);
        //});




        for (var i = 0; i < myArr.length; i++) {
            var id = myArr[i]._id;
            var teleid = myArr[i]._teleid;
            var email = myArr[i]._email;
            var password = myArr[i]._password;
            var name = myArr[i]._name;

            //firebase.database().ref('hawkuser').child(id).update({
            //    id: id,
            //    name: name,
            //    teleid: teleid
            //});



            //var currentUser = firebase.auth();
            //var userRef = firebase.database().ref("Users/Drivers").child(currentUser.uid);
            //userRef.on("value").then(function (snapshot) {
            //    console.log(snapshot.val());
            //})

            // var query = firebase.database().ref("TeleUsers/" + id ).update({ name: "New trainer 2" });//.child(id)//orderByChild(id).equalTo(name);
            //query.once("child_added", function (snapshot) {
            //    snapshot.ref.update({ name: "New trainer" })
            //});

            //var starCountRef = firebase.database().ref('TeleUsers/' + id + '/name');
            //starCountRef.on('value', function (snapshot) {
            //    updateStarCount(postElement, snapshot.val());
            //});

            //var refObj = firebase.database().ref('TeleUsers').child(id);
            //refObj.child('id').update({
            //    id: 101
            //});

            //firebase.database().ref('TeleUsers/' + id + '/' + 'Friends').set({
            //    userid: 355,
            //    LastMsg : 'yes'
            //});

            //firebase.database().ref('TeleUsers/' + id + '/' + 'Status').set({
            //    status: 'Active',
            //    date: '1/24/2019 05:15:45'
            //});
        }
    }
    function GetConnections() {
        var connectionList = firebase.database().ref("TeleUsers/" + SenderId + "/Connections");

        //_userChatList
    }
    function GetTotalUnreadCount() {

        // debugger;
        totalNotifications = 0;

        var getConnection = firebase.database().ref("TeleUsers/" + SenderId + "/Connections");
        getConnection.on('child_added', function (friends) {


            totalNotifications += friends.val().unread;
            // console.log('total count is : ' + totalNotifications);
            $("#lblnotify").html(totalNotifications);
            if (totalNotifications === 0)
                $("#lblnotify1").html('');
            else
                $("#lblnotify1").html(totalNotifications);
        });

    }
    function GetChat(senderid, receiverid) {
        // debugger;
        alert('casdcfaskjh this');
        $("#msgDetail").html('');
        $("#msgDetail").empty();


        var id = senderid + '-' + receiverid;
        var _id = receiverid + '-' + senderid;
        var status = 'not';

        var ref = firebase.database().ref("userMessages");
        ref.child(id).on("child_added", function (snapshot) {
            status = 'found';

            //console.log(snapshot.val().senderId);
            if (SenderId === snapshot.val().senderId) {
                //_senderName = snapshot.val().senderName;
                //_senderPhoto = snapshot.val().senderPhoto;
                _teleid = snapshot.val().teleid;
                var date = new Date(snapshot.val().dateTime);
                var serverTime = date.toLocaleString();
                //debugger;
                var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                if (record)
                    record = snapshot.val().msgType;
                else
                    record = '';

                var isCheck;
                if (snapshot.val().isRead)
                    isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                else
                    isCheck = "<i class='fa fa-check'></i>";


                var myfileTag;

                if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                    myfileTag = "<img src='" + snapshot.val().message + "' style='height:100px;width:100px'/>";
                else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                else if (record === 'pdf')
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                else if (record === 'text')
                    myfileTag = "<p> " + snapshot.val().message + " </p>";
                else
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";

                //var liTag = "<li class='odd " + snapshot.key + "'><div class='chat-image'> <img src='" + _senderPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _senderName + "</h4> " + myfileTag + " <b>" + serverTime + " </b> <span>" + isCheck + "</span></div></div></li >";
                var liTag = "<div class='outgoing_msg " + snapshot.key + "'><div class='sent_msg'>" + myfileTag + "<span class='time_date'> " + serverTime + "</span><span>" + isCheck + "</span></div><div>"

                $("." + snapshot.key).remove();
                $("#msgDetail").append(liTag);
                var messageBody = document.querySelector('#msgDetail');
                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            }
            else {

                var date = new Date(snapshot.val().dateTime);
                var serverTime = date.toLocaleString();

                var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);

                if (record)
                    record = snapshot.val().msgType;
                else
                    record = '';

                var isCheck;
                if (snapshot.val().isRead)
                    isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                else
                    isCheck = "<i class='fa fa-check'></i>";

                var myfileTag;

                if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                    myfileTag = "<img src='" + snapshot.val().message + "' style='height:100px;width:100px'/>";
                else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                else if (record === 'pdf')
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                else if (record === 'text')
                    myfileTag = "<p> " + snapshot.val().message + " </p>";
                else
                    myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";


                //var liTag = "<li class='odduser " + snapshot.key + "'><div class='chat-image'> <img src='" + _receiverPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _receiverName + "</h4> " + myfileTag + " <b>" + serverTime + " </b><span>" + isCheck + "</span></div></div></li >";
                var liTag = "<div class='incoming_msg " + snapshot.key + "'><div class='incoming_msg_img'> <img src='" + _receiverPhoto + "'> </div><div class='received_msg'><small>" + _receiverName + "</small><div class='received_withd_msg'>" + myfileTag + "<div clas='row'><span class='time_date'> " + serverTime + " </span><span> " + isCheck + "</span></div> </div></div></div>"

                $("." + snapshot.key).remove();
                $("#msgDetail").append(liTag);
                var messageBody = document.querySelector('#msgDetail');
                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            }

        });

        if (status !== 'found') {
            ref.child(_id).on("child_added", function (snapshot) {
                // console.log(snapshot.val().senderId);
                if (SenderId === snapshot.val().senderId) {
                    _senderName = snapshot.val().senderName;
                    _senderPhoto = snapshot.val().senderPhoto;
                    _teleid = snapshot.val().teleid;
                    var date = new Date(snapshot.val().dateTime);
                    var serverTime = date.toLocaleString();


                    var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                    if (record)
                        record = snapshot.val().msgType;
                    else
                        record = '';
                    //console.log('my record is : ' + record);

                    var isCheck;
                    if (snapshot.val().isRead)
                        isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                    else
                        isCheck = "<i class='fa fa-check'></i>";

                    var myfileTag;

                    if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                        myfileTag = "<img src='" + snapshot.val().message + "' style='height:100px;width:100px'/>";
                    else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'pdf')
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'text')
                        myfileTag = "<p> " + snapshot.val().message + " </p>";
                    else
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";


                    //var liTag = "<li class='odd " + snapshot.key + "'><div class='chat-image'> <img src='" + _senderPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _senderName + "</h4>" + myfileTag + "<b>" + serverTime + " </b><span>" + isCheck + "</span></div></div></li >";
                    var liTag = "<div class='outgoing_msg " + snapshot.key + "'><div class='sent_msg'>" + myfileTag + "<span class='time_date'> " + serverTime + "</span><span>" + isCheck + "</span></div><div>"

                    $("." + snapshot.key).remove();
                    $("#msgDetail").append(liTag);
                    var messageBody = document.querySelector('#msgDetail');
                    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                }
                else {
                    var date = new Date(snapshot.val().dateTime);
                    var serverTime = date.toLocaleString();


                    var record = (FileExtensions.indexOf(snapshot.val().msgType) > -1);
                    if (record)
                        record = snapshot.val().msgType;
                    else
                        record = '';
                    //console.log('my record is : ' + record);

                    var isCheck;
                    if (snapshot.val().isRead)
                        isCheck = "<i class='fa fa-check'></i><i class='fa fa-check'></i>";
                    else
                        isCheck = "<i class='fa fa-check'></i>";

                    var myfileTag;

                    if (record === 'jpg' || record === 'png' || record === 'jpeg' || record === 'gif' || record === 'bmp' || record === 'JPG' || record === 'PNG')
                        myfileTag = "<img src='" + snapshot.val().message + "' style='height:100px;width:100px'/>";
                    else if (record === 'doc' || record === 'docx' || record === 'docs' || record === 'docm' || record === 'dotx' || record === 'dotm' || record === 'docb')
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'> <img src='/content/images/worddocx.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'pdf')
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/pdf_4.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'xlsx' || record === 'xlx' || record === 'xlsb' || record === 'xlsm')
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/excel.png' style='height:100px;width:100px'/> </a>";
                    else if (record === 'text')
                        myfileTag = "<p> " + snapshot.val().message + " </p>";
                    else
                        myfileTag = "<a href='" + snapshot.val().message + "' target='_blank'><img src='/content/images/other.png' style='height:100px;width:100px'/> </a>";

                    //var liTag = "<li class='odduser " + snapshot.key + "'><div class='chat-image'> <img  src='" + _receiverPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + _receiverName + "</h4>" + myfileTag + " <b>" + serverTime + "</b><span>" + isCheck + "</span></div></div></li >";
                    var liTag = "<div class='incoming_msg " + snapshot.key + "'><div class='incoming_msg_img'> <img src='" + _receiverPhoto + "'> </div><div class='received_msg'><small>" + _receiverName + "</small><div class='received_withd_msg'>" + myfileTag + "<span class='time_date'> " + serverTime + " </span><span>" + isCheck + "</span></div></div></div>"

                    $("." + snapshot.key).remove();
                    $("#msgDetail").append(liTag);
                    var messageBody = document.querySelector('#msgDetail');
                    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
                }
            });
        }

    }
    function SendMessage(id, _id, msg, type) {
        // debugger;
        var ref = firebase.database().ref("userMessages");
        ref.child(id).once('value', function (snapshot) {
            if (snapshot.val() !== null) {
                firebase.database().ref('userMessages').child(id).push({
                    isRead: false,
                    receiverId: _receiverId,
                    receiverName: _receiverName,
                    receiverPhoto: _receiverPhoto,
                    senderId: SenderId,
                    senderName: _senderName,
                    senderPhoto: _senderPhoto,
                    dateTime: firebase.database.ServerValue.TIMESTAMP,
                    teleid: _teleid,
                    message: msg,
                    type: 'Private',
                    msgType: type
                });
            }
            else {
                ref.child(_id).once('value', function (snapshot) {
                    if (snapshot.val() !== null) {
                        firebase.database().ref('userMessages').child(_id).push({
                            isRead: false,
                            receiverId: _receiverId,
                            receiverName: _receiverName,
                            receiverPhoto: _receiverPhoto,
                            senderId: SenderId,
                            senderName: _senderName,
                            senderPhoto: _senderPhoto,
                            dateTime: firebase.database.ServerValue.TIMESTAMP,
                            teleid: _teleid,
                            message: msg,
                            type: 'Private',
                            msgType: type
                        });
                    }
                    else {
                        firebase.database().ref('userMessages').child(id).push({
                            isRead: false,
                            receiverId: _receiverId,
                            receiverName: _receiverName,
                            receiverPhoto: _receiverPhoto,
                            senderId: SenderId,
                            senderName: _senderName,
                            senderPhoto: _senderPhoto,
                            dateTime: firebase.database.ServerValue.TIMESTAMP,
                            teleid: _teleid,
                            message: msg,
                            type: 'Private',
                            msgType: type
                        });
                    }
                });
            }
        });
        $("#txtMsg").val('');
    }
    function SearchUser(name) {


        //var ref = firebase.database().ref("TeleUsers");
        //ref.orderByChild("teleid").equalTo(_teleid).on("child_added", function (snapshot) {

        //});
    }
    function CreateGroup(name) {

        firebase.database().ref('Groups').push({
            groupName: name,
            createdBy: SenderId,
            id: SenderId,
            teleid: _teleid,
            type: 'Admin',
            userName: _senderName,
            image: _senderPhoto,
            dateTime: firebase.database.ServerValue.TIMESTAMP
        });

    }
    function AddUserToGroup(userid, name, image, grpid, nodeid, grpname) {

        firebase.database().ref('Group-users').child(nodeid).set({
            id: userid,
            teleid: _teleid,
            groupId: grpid,
            groupName: grpname,
            type: 'user',
            userName: name,
            image: image,
            dateTime: firebase.database.ServerValue.TIMESTAMP
        });
    }
    function GroupMessages(grpid, msg) {

        firebase.database().ref('Groups/' + grpid + '/Messages').push({
            isRead: false,
            senderId: SenderId,
            senderName: _senderName,
            senderPhoto: _senderPhoto,
            dateTime: firebase.database.ServerValue.TIMESTAMP,
            teleid: _teleid,
            message: msg
        });
        $("#txtMsg").val('');
    }
    function UpdateGroup() {
        var name = 'Hawk Logix';
        var grpid = '-LXYPYm0QxFQEI9UhHt8';
        firebase.database().ref('Groups/' + grpid).update({
            groupName: name,
            createdBy: SenderId,
            id: SenderId,
            teleid: _teleid,
            type: 'Admin',
            userName: _senderName,
            image: _senderPhoto,
            dateTime: firebase.database.ServerValue.TIMESTAMP
        });
    }
    function GetGroupChat(senderid, receiverid) {
        $("#msgDetail").html('');
        var ref = firebase.database().ref("Groups/" + receiverid + "/Messages");
        ref.on("child_added", function (snapshot) {
            if (SenderId === snapshot.val().senderId) {
                _senderName = snapshot.val().senderName;
                _senderPhoto = snapshot.val().senderPhoto;
                _teleid = snapshot.val().teleid;
                var date = new Date(snapshot.val().dateTime);
                var serverTime = date.toLocaleString();
                var liTag = "<li class='odd'><div class='chat-image'> <img src='" + snapshot.val().senderPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + snapshot.val().senderName + "</h4><p> " + snapshot.val().message + " </p> <b>" + serverTime + " </b></div></div></li >";
                $("#msgDetail").append(liTag);
                var messageBody = document.querySelector('#msgDetail');
                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            }
            else {
                var date = new Date(snapshot.val().dateTime);
                var serverTime = date.toLocaleString();
                var liTag = "<li class='odduser'><div class='chat-image'> <img src='" + snapshot.val().senderPhoto + "'></div><div class='chat-body'><div class='chat-text'><h4>" + snapshot.val().senderName + "</h4><p> " + snapshot.val().message + " </p> <b>" + serverTime + " </b></div></div></li >";
                $("#msgDetail").append(liTag);
                var messageBody = document.querySelector('#msgDetail');
                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            }
        });


    }
    function GetGroupUsers() {

        $("#userlistforGrp").html('');
        var grpId = _receiverId;

        var j = 1;

        for (var i = 0; i < teleUsersForGrpArr.length; i++) {
            var _userid = teleUsersForGrpArr[i].id;
            var _photo = teleUsersForGrpArr[i].image;
            var _name = teleUsersForGrpArr[i].name;
            var checkExist = _userid + '-' + grpId;

            var exist = groupUsers.map(e => e.id).indexOf(checkExist);
            if (exist > -1) {
                var liTag = "<li> <div class='col-md-12'> <div class='col-md-8'> <a href = 'javascript:void(0)'  data-senderid = '" + SenderId + "' data-receiverid = '" + _userid + "' data-receiverName = '" + _name + "' data-receiverPhoto = '" + _photo + "'  > <img src='" + _photo + "' alt='user-img' class='chat_userList text-decoration-none'> <span> " + _name + "</span></a> </div> <div class='col-md-4 checkbox checkbox-success'><input id = 'checkbox3" + j + "' type ='checkbox' class='Addusers' data-usrid='" + _userid + "' data-usrname='" + _name + "' data-usrimage='" + _photo + "' data-loop='" + j + "' checked ><label for='checkbox3'> </label></div> </div> </li > ";
                $("#userlistforGrp").append(liTag);
            }
            else {
                var liTag = "<li> <div class='col-md-12'><div class='col-md-8'> <a href = 'javascript:void(0)' data-senderid = '" + SenderId + "' data-receiverid = '" + _userid + "' data-receiverName = '" + _name + "' data-receiverPhoto = '" + _photo + "'  > <img src='" + _photo + "' alt='user-img' class='chat_userList text-decoration-none'>  <span> " + _name + "</span></a> </div> <div class='col-md-4 checkbox checkbox-success'><input id = 'checkbox3" + j + "' type ='checkbox' class='Addusers' data-usrid='" + _userid + "' data-usrname='" + _name + "' data-usrimage='" + _photo + "' data-loop='" + j + "'><label for='checkbox3'>  </label></div> </div></li > ";
                $("#userlistforGrp").append(liTag);
            }
            j++;
        }
    }
    function ReadMessageStatus(SenderId, _receiverId) {
        // debugger;
        var _status = 'not';
        var _unreadMsg = [];
        var id = SenderId + '-' + _receiverId;
        var _id = _receiverId + '-' + SenderId;

        var ref = firebase.database().ref("userMessages/" + id);
        ref.orderByChild('receiverId').equalTo(SenderId).on('child_added', function (snapshot) {
            _status = 'found';
            var count = 0;

            if (snapshot.val().isRead === false) {
                count++;
                //unreadMsg.push({ msgid: snapshot.key })
            }
            unreadMessage = count;
        });
        if (_status !== 'found') {
            var ref = firebase.database().ref("userMessages");
            ref.child(_id).on("child_added", function (snapshot) {
                if (SenderId === snapshot.val().receiverId) {
                    if (snapshot.val().isRead === false) {
                        unreadMsg.push({ id: snapshot.val().receiverId })
                        unreadMessage++;
                        firebase.database().ref("TeleUsers/" + SenderId + "/Connections").child(_receiverId).update({
                            unread: unreadMessage
                        });
                        //console.log('my msg is : ' + unreadMessage);
                    }
                    else {
                        //unreadMessage++;
                        // console.log('my else msg is : ' + unreadMessage);
                    }
                }
            });

            /*
            var ref = firebase.database().ref("userMessages/" + _id);
            ref.orderByChild('receiverId').equalTo(SenderId).on('child_added', function (snapshot) {
                var count = 0;
                snapshot.forEach(function () {
                    if (snapshot.val().isRead === false) {
                        count++;
                        //unreadMsg.push({ msgid: snapshot.key })
                    }
                });

                unreadMessage = count;
            });
            */
        }

        //console.log('My Msg count is : ' + unreadMessage);
        //return unreadMessage;
    }
    function UnreadMessages(senderid, receiverid) {
        var unreadMsg = [];
        var id = senderid + '-' + receiverid;
        var _id = receiverid + '-' + senderid;

        var ref = firebase.database().ref("userMessages/" + id);
        ref.orderByChild('receiverId').equalTo(senderid).on('child_added', function (snapshot) {
            //console.log(snapshot.val().isRead);
            if (snapshot.val().isRead === false) {
                unreadMsg.push({ msgid: snapshot.key })
            }
        });

        var _unread = unreadMsg.length;
        //console.log(_unread);
        return _unread;
    }
    function GroupMessages(grpid, msg) {
        firebase.database().ref('Groups/' + grpid + '/Messages').push({
            isRead: false,
            senderId: SenderId,
            senderName: _senderName,
            senderPhoto: _senderPhoto,
            dateTime: firebase.database.ServerValue.TIMESTAMP,
            teleid: _teleid,
            message: msg
        });
        $("#txtMsg").val('');
    }
    function isAdmin() {
        var ref = firebase.database().ref("Groups");
        ref.child(_receiverId).on('value', function (data) {
            if (data.val().id === SenderId)
                _userType = 'Admin';
            else
                _userType = 'user';
        });
    }
    function GetUnreadGrpMsg(grpid) {
        // debugger;
        var mycount = 1;
        var countTotal = 0;
        var _arr = [];
        var ref = firebase.database().ref("userMessages/" + grpid);
        ref.on('child_added', function (snapshot) {
            var status = false;
            ref.child(snapshot.key).child('read').child(SenderId).on('child_added', function (data) {
                status = true;
                // console.log('snapshot data is :' + data.key + ' :' + snapshot.key);
            });
            if (status === false) {
                countTotal++;
            }
            //  console.log('total unread msg : ' + countTotal);
        });
        return countTotal;
    }
    function UpdateUnreadCountForGroupUsers(grpId, _Users, shortmsg) {
        // debugger;
        for (var i = 0; i < _Users.length; i++) {
            var id = _Users[i].id;
            if (id !== SenderId) {
                var ref = firebase.database().ref("TeleUsers/" + id + '/Connections');
                ref.child(grpId).update({
                    lastOnline: firebase.database.ServerValue.TIMESTAMP,
                    lastMessage: shortmsg,
                    type: 'Public'
                }).then(function () {
                    return ref.child(grpId).once("value");
                }).then(function (snapshot) {
                    // debugger;
                    var data = snapshot.val();
                    var time = snapshot.val().lastOnline;
                    var unread = snapshot.val().unread;
                    if (unread)
                        unread += 1;
                    else
                        unread = 1;
                    //console.log('my local time is : ' + time);
                    var reff = firebase.database().ref("TeleUsers/" + id + '/Connections');
                    reff.child(grpId).update({
                        lastOnline: time * -1,
                        unread: unread
                    });

                });
            }
        }

    }


    // <<<<<<<<<<<<<<<<<*************  Currently Not Used Functions In Firebase  Or Can be used in future  End***************************** >>>>>>>>>>>>>>>>>>>>>>>>

</script>
<script>
    var form;
    var _files;

    $("#file").click(function () {

        var inputTag = "<input type='file' name='Attachement' id='fileUpload'/>";
        var tagId = $(inputTag);

        tagId.change(function () {
            // console.log("selected file:" + $(this).val());
            var file = $(this).val();
            var arr = file.split('\\');
            //debugger;
            // console.log(arr[2]);
            _files = tagId[0].files;

            var formId = $(form);
            var _fdata = new FormData();
            for (var i = 0; i < _files.length; i++) {
                _fdata.append("Attachement", _files[i]);
            }
            _fdata.append("senderId", SenderId);
            var frmUrl = '/FirebaseChat/SaveAttachement';
            // console.log('button  click');

            var fileName = arr[2];

            var arrType = fileName.split('.');
            var lastIndex = arrType.length - 1;
            var fileType = arrType[lastIndex];

            var date = new Date();
            var _hour = date.getHours();
            var _min = date.getMinutes();
            var _month = date.getDay();
            var _sec = date.getSeconds();
            var _mil = date.getMilliseconds();
            var _day = date.getDay();
            var _year = date.getFullYear();

            var timeStamp = _year + '' + _month + '' + _day + '' + _hour + '' + _min + '' + _sec + '' + _mil;

            fileName = '/Content/ChatFile/' + SenderId + '-' + timeStamp + '-' + fileName;

            var id = SenderId + '-' + _receiverId;
            var _id = _receiverId + '-' + SenderId;

            _fdata.append("timeStamp", timeStamp);

            $.ajax({
                type: 'POST',
                url: frmUrl,
                data: _fdata,
                processData: false,
                contentType: false,
                success: function (e) {
                    // console.log('Success is :' + e);
                    if (isGroup)
                        _GroupMessages(_receiverId, fileName, fileType);
                    else
                        SendMessageNew(id, _id, fileName, fileType);
                },
                Error: function (e) {
                    // console.log('Error is :' + e);
                }
            });

        });
        tagId.trigger('click');
    });


</script>
