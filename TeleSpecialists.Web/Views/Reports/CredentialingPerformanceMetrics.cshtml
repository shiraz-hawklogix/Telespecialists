@using TeleSpecialists.BLL.Extensions;
@using TeleSpecialists.BLL.ViewModels.Reports;
@using TeleSpecialists.BLL.Helpers;
@{
    ViewBag.Title = "Credentialing Performance Metrics";
    var currentDate = DateTime.Now.ToEST();
    var previousMonth = currentDate.AddMonths(-1);
}

@Html.Partial("_ReportLayout")

<div class="row" id="divLocalFilters">
    <div class="col-12">
        <div class="form-row">
            <div class="form-group col-xl-3 col-6">
                <label for="Facilities">Facility</label>
                @Html.DropDownList("Facilities", ViewBag.Facilities as List<SelectListItem>, new { @class = "form-control Facilities", @multiple = "multiple" })
            </div>
            <div class="form-group col-lg-3 col-sm-6">
                <label for="" class="control-label">Physician</label>
                @Html.DropDownList("Physicians", ViewBag.Physicians as List<SelectListItem>, new { @class = "form-control", @multiple = "multiple" })
            </div>
            <div class="form-group col-xl-3 col-6">
                <label for="ddlTimeFrame">Time Frame</label>
                <select class="form-control" id="ddlTimeFrame">
                    <option value="Today">Today</option>
                    <option value="Yesterday">Yesterday</option>
                    <option value="Last24Hours">Last 24 Hours</option>
                    <option value="Last48Hours" selected="selected">Last 48 Hours</option>
                    <option value="LastSevenDays">Last 7 Days</option>
                    <option value="Last14Days">Last 14 Days</option>
                    <option value="Last30Days">Last 30 Days</option>
                    <option value="Last60Days">Last 60 Days</option>
                    <option value="Last90Days">Last 90 Days</option>
                    <option value="PreviousMonth">Previous Month</option>
                    <option value="MonthToDate">Month to Date</option>
                    <option value="SpecificDate">Specific Date</option>
                    <option value="CustomRange">Date Range</option>
                </select>
            </div>
            <div class="form-group row col-xl-5 col-12" id="divDateRange" style="display:none;">
                <div class="col-6 pr-0">
                    <label>From</label>
                    <input type="text" id=FromDate name=FromDate class="form-control datepicker" />
                    <span class="text-danger field-validation-error position-absolute" id="txtFromDateError"
                          style="display:none" data-valmsg-for=FromDate data-valmsg-replace="true">
                        <span id="FromDate-error" class=""></span>
                    </span>
                </div>

                <div class="form-group col-6">
                    <label>To Date</label>
                    <input type="text" id="ToDate" name="ToDate" class="form-control datepicker" />
                </div>
            </div>
            <div class="form-group col-xl-2 col-6" id="divSpecificDate" style="display:none;">
                <div class="col-12">
                    <label>Date</label>
                    <input type="text" id="txtSpecificDate" name="txtSpecificDate" class="form-control datepicker" />
                    <span class="text-danger field-validation-error position-absolute" id="txtSpecificDateError"
                          style="display:none" data-valmsg-for="txtSpecificDate" data-valmsg-replace="true">
                        <span id="txtSpecificDate-error" class=""></span>
                    </span>
                </div>
            </div>
            <div class="form-group col-xl-3 col-6">
                <label for="ddlByDateFrame">Date Type</label>
                <select class="form-control" id="ddlByDateFrame">
                    <option value="Dateassigned">Date Assigned</option>
                    <option value="AppStarted">App Started</option>
                    <option value="InitialAppReceived">Initial App Received</option>
                    <option value="Appsubmittedtothehospital">App submitted to the Hospital</option>
                    <option value="VCAAdate">VCAA Date</option>
                </select>
            </div>
            <div class="form-group col-lg-4 col-sm-6">
                    <label for="" class="control-label">Credentialing Specialist</label>
                    @Html.DropDownList("Credentialing", ViewBag.CredentialingSpecialist as List<SelectListItem>, new { @class = "form-control", @multiple = "multiple" })
                </div>
        </div>
        <div class="form-row">
            <div class="form-group col-lg-12 col-sm-12 mt-lg-4 pt-lg-2">
                <button type="button" class="btn btn-dark" id="btnSearch">Search</button>
                <button type="button" class="btn btn-dark" id="btnClear" style="display: none">Clear Search</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var listStates = [];
        var listPhysicians = [];
        var filters = [];
        $('#divLocalFilters').appendTo('#divFilters');
        document.title = $("#title-prefix").val() + '@ViewBag.Title';
        $('.Facilities').multiselect({
            columns: 1,
            placeholder: 'Select Facilities',
            selectAll: true,
            search: true,
            searchOptions: {
                'default': 'Search Facilities'
            }
        });
        $('#Physicians').multiselect({
            columns: 1,
            placeholder: 'Select Physician',
            selectAll: true,
            search: true,
            searchOptions: {
                'default': 'Search Physician'
            }
        });
        $("#Credentialing").kendoDropDownList({
            filter: "startswith"
        });
        //$('#Credentialing').multiselect({
        //    columns: 1,
        //    placeholder: 'Select Credentialing',
        //    selectAll: true,
        //    search: true,
        //    searchOptions: {
        //        'default': 'Search Credentialing'
        //    }
        //});
        $('#ddlTimeFrame').off("change").change(function () {
            $("#divDateRange,#divSpecificDate").hide();
            var selectedValue = $(this).val();
            if (selectedValue == "SpecificDate")
                $("#divSpecificDate").show();
            else if (selectedValue == "CustomRange")
                $("#divDateRange").show();
        });
        $('#btnClear').click(function () {
            $('#btnClear').css('display', 'none');
            $("#kendoDataGrid").data("kendoGrid").dataSource.filter({});
            $(".Facilities").val("");
            $(".Facilities").multiselect('reload');
            $("#Physicians").val("");
            $("#Physicians").multiselect('reload');
            $("#Credentialing").val("");
            $("#Credentialing").multiselect('reload');
        });
        $('#btnSearch').click(function () {
            $('#btnClear').css('display', '');
            loadData();
        });
        resetDropDownOnDeseelect();
        loadData();
        setWidthOfDropDowns();
        $('.datepicker').kendoDatePicker({
            open: function (e) {
                onDatePickerOpen(e);
            }
        });
    });
   function loadData() {
        $("#kendoDataGrid").kendoGrid({
            excel: {
                allPages: true,
                filterable: false,
                fileName: '@ViewBag.Title' + '.xlsx',
                proxyURL: '@Url.Action("ExportToExcel")',
            },
            pdf: {
                author: "Condado Group",
                creator: "Condado Group",
                date: new Date(),
                fileName: '@ViewBag.Title' + '.pdf',
                keywords: '@ViewBag.Title',
                subject: '@ViewBag.Title',
                title: '@ViewBag.Title'
            },
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetPerformanceCredentialing")',
                        contentType: "application/json",
                        type: "POST",
                        data: function () {
                            var filterModel = {
                                physicians: "",
                                Facilities: "",
                                StartDate: null,
                                EndDate: null,
                                TimeFrame: "",
                                DefaultType: "",
                                Credentialing:"",
                            };
                            filterModel.physicians = $("#Physicians").val();
                            filterModel.Credentialing = $("#Credentialing").val();
                            filterModel.Facilities = $(".Facilities").val();
                            filterModel.TimeFrame = $("#ddlTimeFrame").val();
                            filterModel.DefaultType = $("#ddlByDateFrame").val();

                            switch (filterModel.TimeFrame) {
                                    case "Today":
                                    filterModel.StartDate = "@currentDate.ToString()";
                                    filterModel.EndDate = "@currentDate.ToString()";
                                        break;
                                    case "Yesterday":
                                    filterModel.StartDate = "@(currentDate.AddDays(-1).ToString())";
                                    filterModel.EndDate = "@(currentDate.AddDays(-1).ToString())";
                                        break;
                                    case "Last24Hours":
                                    filterModel.IncludeTime = true;
                                    filterModel.StartDate = "@(currentDate.AddHours(-24).ToString())";
                                    filterModel.EndDate = "@currentDate.ToString()";
                                        break;
                                    case "Last48Hours":
                                    filterModel.StartDate = "@(currentDate.AddDays(-2).ToString())";
                                    filterModel.EndDate = "@currentDate.ToString()";
                                        break;
                                    case "LastSevenDays":
                                    filterModel.StartDate = "@(currentDate.AddDays(-7).ToString())";
                                    filterModel.EndDate ="@currentDate.ToString()";
                                        break;
                                    case "Last14Days":
                                    filterModel.StartDate = "@(currentDate.AddDays(-14).ToString())";
                                    filterModel.EndDate = "@currentDate.ToString()";
                                        break;
                                    case "Last30Days":
                                    filterModel.StartDate = "@(currentDate.AddDays(-30).ToString())";
                                    filterModel.EndDate = "@currentDate.ToString()";
                                        break; Last60Days
                                    case "Last60Days":
                                    filterModel.StartDate = "@(currentDate.AddDays(-60).ToString())";
                                    filterModel.EndDate = "@currentDate.ToString()";
                                        break;
                                    case "Last90Days":
                                    filterModel.StartDate = "@(currentDate.AddDays(-90).ToString())";
                                    filterModel.EndDate ="@currentDate.ToString()";
                                        break;
                                    case "PreviousMonth":
                                    filterModel.StartDate = "@(new DateTime(previousMonth.Year, previousMonth.Month,1).ToString())";
                                    filterModel.EndDate = "@(new DateTime(previousMonth.Year,previousMonth.Month, DateTime.DaysInMonth(previousMonth.Year, previousMonth.Month)).ToString())";
                                        break;
                                    case "MonthToDate":
                                    filterModel.StartDate = "@(new DateTime(currentDate.Year, currentDate.Month, 01).ToString())";
                                    filterModel.EndDate = "@currentDate.ToString()";
                                        break;
                                    case "SpecificDate":
                                    filterModel.StartDate = $("#txtSpecificDate").val();
                                    filterModel.EndDate = $("#txtSpecificDate").val();
                                        break;
                                    case "CustomRange":
                                    filterModel.StartDate = $("#FromDate").val();
                                    filterModel.EndDate = $("#ToDate").val();
                                        break;
                                }
                            return filterModel;
                        }
                    },
                    parameterMap: function (options) {
                        options = KendoKeepState("Report", options);
                        exportPostData = options;
                        return kendo.stringify(options);
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: function (response) {
                        if (response != null && response.success != undefined && response.success != null && !response.success) {
                            $("#mainContentArea").find("#validationSummary").empty().showBSDangerAlert("", "Error! Please try again.");
                            HideLoading();
                        }
                    }
                },
                //serverPaging: true,
                //serverFiltering: true,
                //serverSorting: true
                serverPaging: true,
                pageSize: 10,
                serverFiltering: false,
                serverSorting: true,
            },
            width: '100%',
            groupable: false,
            filterable: true,
            sortable: true,
            resizable: true,
            pageable: {
                refresh: true,
                //pageSizes: true,
                //pageSize: 10
                pageSizes: [5, 10, 15, 20, 30, 50, 'All']
            },
            dataBound: function (e) {
                // Adjust dropdown horizental allignment in case of five-9 sidebae expanded.
                $('[data-role="dropdownlist"]').each(function () {
                    var kendoDropDown = $(this).data("kendoDropDownList");
                    if (kendoDropDown)
                        kendoDropDown.bind("open", onDropdDownOpen);
                });
            },
            columns: [
                { field: "date_assigned_to_appstarted_days", title: "Date assigned to App started Days", width: '230px' },
                { field: "date_assigned_to_appstarted_mean", title: "Mean Date assigned to App started for the hospital", width: '320px' },
                { field: "initial_to_appstarted_days", title: "Initial Receive date to App Started", width: '320px' },
                { field: "initial_to_appstarted_mean", title: "Initial Receive date to App Started for the hospital", width: '380px' },
                { field: "appstarted_to_app_submitted_day", title: "App started to App submitted to hospital", width: '220px' },
                { field: "app_submitted_to_vccaDate_day", title: "App submitted to hospital to VCAA date", width: '300px' },
                { field: "app_submitted_to_vccaDate_mean", title: "App submitted to hospital to VCAA date for the hospital", width: '300px' },
            ]
        });
   }

</script>



