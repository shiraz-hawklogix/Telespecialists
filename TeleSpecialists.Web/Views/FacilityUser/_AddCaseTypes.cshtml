@model TeleSpecialists.BLL.ViewModels.FacilityUser.PostCaeTypeViewModel
@using TeleSpecialists.BLL.Helpers;
@using TeleSpecialists.BLL.Extensions;
@{
    Layout = "";
}
<div class="modal-dialog modal-lg">

    <div class="modal-content">
        <!-- Modal Header -->
        <div class="modal-header">
            <h4 class="modal-title">Add Case Types</h4>
            <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <!-- Modal body -->
        <div class="modal-body">
            <div id="validationSummary">
            </div>
            <div class="row">
                <div class="col-sm-12 pr-5 pl-5">
                    <div class="form-group row">
                        <div class="col-lg-8 col-sm-12">
                            <input type="text" id="text-search-input" class="form-control" />
                        </div>
                        <div class="control-label col-lg-3 col-sm-12">
                            <input type="button" class="btn btn-dark" id="btn-search-case" value="Search" />
                        </div>
                    </div>
                    <form method="post" role="form" id="CaseTypesForm" action="@Url.Action("AddCaseTypes")">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.CaseTypes, new { id = "ect-case-types" })
                        @Html.HiddenFor(m => m.UserKey, new { id = "ect-add-userkey" })
                        <div class="form-group row">
                            <div class="col-sm-12">
                                <div id="casetypes-selector" class="kendo-ui-grid-control"></div>
                                <div id="all-case-types-error" style="display:none;">
                                    <label style="color: red">Please select at least one case type.</label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- Modal footer -->
        <div class="modal-footer">
            <a href="#" class="btn btn-link" data-dismiss="modal">Cancel</a>
            <input type="button" class="btn btn-dark" id="btn-save-caseTypes" value="Save" />
        </div>
    </div>
</div>
<script type="text/javascript">
    var selectedCaseTypes = [];
    function onDataBound(e) {
        var grid = this;
        $.each(grid.tbody.find('tr'), function () {
            var gridData = grid.dataItem(this);
            var selectedCaseType = "@(string.Join(",", @Model.CaseTypes))";
            var selectedCaseTypeArray = new Array();
            selectedCaseTypeArray = selectedCaseType.split(",");
            $.map(selectedCaseTypeArray, function (elementOfArray, indexInArray) {
                if (elementOfArray == gridData.ucd_key) {
                    selectedCaseTypes.push(gridData.ucd_key);
                    $('[data-uid=' + gridData.uid + ']').addClass('k-state-selected');
                    $('[data-uid=' + gridData.uid + '] input[type="checkbox"]').attr("checked", "checked");
                }
            });
        });
        if ($('td input[type="checkbox"]:checked').length == $('#casetypes-selector tbody tr:not([style*="display: none"])').length) {
            $('#header-chb').prop('checked', true)
        }
        if ($('td input[type="checkbox"]:checked').length != $('#casetypes-selector tbody tr:not([style*="display: none"])').length) {
            $('#header-chb').prop('checked', false)
        }
    }
    var gridControl =  $("#casetypes-selector").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: '/LookUp/GetAllSleep',
                        contentType: "application/json",
                        type: "POST"
                    }
                },
                schema: {
                        model: {
                            id: "ucd_key"
                        }
                },
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false,
            },
       dataBound: onDataBound,
       height: 419,
       pageable: false,
       scrollable: true,
       persistSelection: true,
       sortable: true,
       columns: [
            { hidden: true, field: "ucd_key" },
            {
                field: "ucd_title", title: "Select All",
                headerAttributes: {
                    style: "font-weight:bold"
                }
           },
           {
               title: 'Select All',
               headerTemplate: "<input type='checkbox' id='header-chb' class='k-checkbox header-checkbox'><label class='k-checkbox-label' for='header-chb'></label>",
               template: function (dataItem) {
                   return "<input type='checkbox' value='" + dataItem.ucd_key+"' id='" + dataItem.ucd_key + "' onChange='onChange(this)' class='k-checkbox row-checkbox'><label class='k-checkbox-label' for='" + dataItem.ucd_key + "'></label>";
               },
               width: 80
           }
        ]
    });
    $("#text-search-input").keyup(function (event) {
        if (event.keyCode == 13) {
            $("#btn-search-case").click();
        }
    });
    $("#btn-search-case").off("click").click(function () {
        var filters = [];
        var searchCriteria = $("#text-search-input").val().toLowerCase();
        $('#header-chb').prop('checked', false);
        $($("#casetypes-selector table")[1]).find("tr").filter(function () {
            $(this).toggle($(this).text().toLowerCase().indexOf(searchCriteria) > -1)
        });
        var isAllSelected = true;
        $('#casetypes-selector tbody tr:not([style*="display: none"])').each(function () {
            var chkBox = $(this).find('input[type="checkbox"]')
            if (!$(chkBox).is(":checked")) {
                isAllSelected = false;
            }
        });
        if (isAllSelected)
            $('#header-chb').prop('checked', true)
        else
            $('#header-chb').prop('checked', false)
    });
    $('#header-chb').off("click").click(function (e) {
        if ($(this).is(':checked')) {
            $('table td input[type="checkbox"]').each(function () {
                if ($(this).parent().parent().css("display") != 'none') {
                    $(this).prop('checked', true);
                    $(this).change();
                }
            });
        }
        else {
            $('table td input[type="checkbox"]').each(function () {
                if ($(this).parent().parent().css("display") != 'none') {
                    $(this).prop('checked', false);
                    $(this).change();
                }
            });
        }
    });
    $("#btn-save-caseTypes").off("click").click(function (e) {
        e.preventDefault();
        $("#CaseTypesForm").submit();
    });
    $("#CaseTypesForm").off("submit").submit(function (e) {
        e.preventDefault();
        if (selectedCaseTypes != null && selectedCaseTypes.length == 0) {
            $("#all-case-types-error").show();
        }
        else {
            var url = $(this).attr("action");
            var data = {
                UserKey: $("#ect-add-userkey").val(),
                CaseTypes: selectedCaseTypes
            }
            $("#divModelPopUp").find("input:button, input:submit").disable();
            $.post(url, data, function (response) {
                $("#divModelPopUp").find("input:button, input:submit").enable();
                if (response.success) {
                    getAssignedCaseTypes();
                    $("#divModelPopUp").modal("hide");
                }
                else {
                    $("#divModelPopUp").find("#validationSummary").showBSDangerAlert("", response.data);
                }
            });
        }
    });
    function onChange(elem) {
        try
        {
            if ($(elem).is(":checked")) {
                selectedCaseTypes.push($(elem).val());
            }
            else {
                selectedCaseTypes = selectedCaseTypes.filter(function (val) {
                    return val != $(elem).val();
                });
            }
        }
        catch (e) {

        }
    }
</script>
