@using TeleSpecialists.BLL.Helpers;
@using TeleSpecialists.BLL.Extensions;
@using TeleSpecialists.BLL.Model;
@using TeleSpecialists.BLL;
@model @case
@{
    //var currentDate = DateTime.Now.ToEST();
    var enableControlsInReadOnly = User.IsInRole(UserRoles.Administrator.ToDescription()) || User.IsInRole(UserRoles.SuperAdmin.ToDescription()) || User.IsInRole(UserRoles.QualityTeam.ToDescription());

    //bool userFacilityAdmin = false;
    //if (User.IsInRole(UserRoles.FacilityAdmin.ToDescription()))
    //{
    //    userFacilityAdmin = true;
    //}
    var userFacilityAdmin = User.IsInRole(UserRoles.FacilityAdmin.ToDescription());
    var userFacilityPhysician = User.IsInRole(UserRoles.FacilityPhysician.ToDescription());

    //bool userFacilityPhysician = false;
    //if (User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))
    //{
    //    userFacilityPhysician = true;
    //}
    var userRegionalMD = User.IsInRole(UserRoles.RegionalMedicalDirector.ToDescription());
    var userCredentialingTeam = User.IsInRole(UserRoles.CredentialingTeam.ToDescription());
    var userQPS = User.IsInRole(UserRoles.QPS.ToDescription());
    var userVPQuality = User.IsInRole(UserRoles.VPQuality.ToDescription());
    var userQualityDirector = User.IsInRole(UserRoles.QualityDirector.ToDescription());
    var userMedicalStaff = User.IsInRole(UserRoles.MedicalStaff.ToDescription());
    var userFinance = User.IsInRole(UserRoles.Finance.ToDescription());


    var userRRCDirector = User.IsInRole(UserRoles.RRCDirector.ToDescription());

    bool isReadOnlyCase = ViewBag.IsReadOnlyCase;
    TeleSpecialists.Models.ApplicationUser loggedInUser = ViewBag.loggedInUser;
    ViewBag.LoggedInName = loggedInUser.FullName;
    ViewBag.Title = "Edit Case";
    ViewBag.CurrentView = "Edit";
    var caseModel = (@case)ViewBag.CaseModel;
    ViewBag.ShowTab = true;
    var defualtBillingFollowUpDate = "";
    string facilityTimeZone = TeleSpecialists.BLL.Settings.DefaultTimeZone;
    var isTeleNeuroFacility = false;

    if (Model.facility != null)
    {
        if (Model.facility.facility_contract != null)
        {
            if (Model.facility.facility_contract.fct_service_calc != null
                && Model.facility.facility_contract.fct_service_calc != ""
                && Model.facility.facility_contract.fct_service_calc.Contains(ContractServiceTypes.TeleNeuro.ToString()))
            {
                isTeleNeuroFacility = true;
            }
        }

        if (!string.IsNullOrEmpty(Model.facility.fac_timezone))
        {
            facilityTimeZone = Model.facility.fac_timezone;
        }
    }

    var timeSpan = "";
    var showRed = 0;
    var disableControlsForPartnerPhysician = 0;
    var disableControlsForPhysician = 0;
    TimeSpan? elapsedTimeSpan = null;
    var startTime = Model.cas_metric_stamp_time_est;
    var endTime = Model.cas_metric_documentation_end_time_est ?? null;
    if (startTime.HasValue && endTime.HasValue)
    {
        elapsedTimeSpan = endTime.Value - startTime;
    }
    if (elapsedTimeSpan.HasValue)
    {
        timeSpan = elapsedTimeSpan.FormatTimeSpan();
        if (elapsedTimeSpan.Value.Hours > 0)
        {
            showRed = 1;
        }

        else if (elapsedTimeSpan.Value.TotalMinutes > 7)
        {
            showRed = 1;
        }
    }
    if (User.IsInRole(UserRoles.PartnerPhysician.ToDescription()))
    {
        disableControlsForPartnerPhysician = 1;
    }
    if (User.IsInRole(UserRoles.Physician.ToDescription()))
    {
        disableControlsForPhysician = 1;
    }

    var dictCaseTypes = new Dictionary<int, string>();
    if (ViewBag.CaseTypes != null)
    {
        dictCaseTypes = ViewBag.CaseTypes;
    }
    var ShowPopup = false;
    var initialSave = false;

    if (Request.Params["isInitialSave"] != null)
    {
        initialSave = Request.Params["isInitialSave"].ToString().ToLower() == "true" ? true : false;
    }

    if (initialSave)
    {
        ShowPopup = true;
    }
    else if (ViewBag.ShowNotesPopup)
    {
        if (Request.Params["showPopupOnLoad"] != null)
        {

            ShowPopup = Request.Params["showPopupOnLoad"].ToString().ToLower() == "false" ? false : true;

        }
    }



    // Billing default followup date.
    if (Model.cas_follow_up_date.HasValue)
    {
        defualtBillingFollowUpDate = Model.cas_follow_up_date.Value.FormatDate();
    }
    else if (Model.cas_billing_date_of_consult.HasValue)
    {
        defualtBillingFollowUpDate = Model.cas_billing_date_of_consult.Value.AddDays(1).FormatDate();
    }
    else
    {
        defualtBillingFollowUpDate = null;
    }

    var dictContractType = new Dictionary<int, string>();
    string serviceType = "";

    if (Model.facility?.facility_contract != null)
    {
        serviceType = Model.facility.facility_contract.fct_service_calc;
    }
    bool isMetricsVisible = false;

    bool enableAutoSave = ViewBag.EnableAutoSave;

    var isCompleted = ViewBag.CaseStatus;
    if (isCompleted == @CaseStatus.Complete.ToInt())
    {
        enableAutoSave = false;
    }

    var caseTypeList = new List<CaseType>() { CaseType.LongTermEEG, CaseType.StatEEG, CaseType.RoutineEEG, CaseType.RoutineConsultNew, CaseType.RoutineConsultFollowUp }.Select(m => new { ucd_key = m.ToInt(), ucd_title = m.ToDescription() }).OrderBy(m => m.ucd_title);
    var cas_status = Model.cas_cst_key;

    var textfreeExam = "false";
    DateTime examdate = Convert.ToDateTime("09/22/2020");
    if (Model.cas_created_date > examdate)
    {
        textfreeExam = "true";
    }
}
@Html.Partial("_facilityInfoPopover", caseModel)
<div class="col-md-12">
    <div class="hospitalprotocoldata"></div>
    <div class="onboardingdata"></div>
</div>
<input type="hidden" name="case_created_date" value="@caseModel.cas_created_date.ToUniversalTimeZone(facilityTimeZone).ToString("MMM,dd,yyyy,HH:mm")" id="case_created_date" />
@Html.HiddenFor(m => m.cas_modified_date)
<input type="hidden" id="lblPhyCancel" />
<input type="hidden" name="elapsed-time" id="elapsed-time" value="@timeSpan" />
<input type="hidden" name="show-red" id="show-red" value="@showRed" />
<input type="hidden" name="disable-general" id="disable-partnerPhysician-controls" value="@disableControlsForPartnerPhysician" />
<input type="hidden" name="hide-general" id="disable-physician-controls" value="@disableControlsForPhysician" />
<input type="hidden" name="hdn-cas-eta" id="hdn-cas-eta" value="@Model.cas_eta" />
<input type="hidden" name="hdn-cas-followup_date" id="hdn-default-followup_date" value='@defualtBillingFollowUpDate' />
<input type="hidden" name="hdn-discussed-neurointerventionalist" id="hdn-saved-discussed-neurointerventionalist"
       value="@Model.cas_metric_discussed_with_neurointerventionalist" />
<input type="hidden" name="hdn-cas-is-lastwellknown" id="hdn-cas-is-lastwellknown" value='@Model.cas_metric_is_lastwell_unknown.ToString()' />
<!-- Add here for copy button, so if the user change the facility on run time then it display the updated time in copy preview -->
<input type="hidden" id="five9_start_time" value="" />

<div class="alert case-info">
    <div class="row">
        <div class="col-xl-2 col-lg-6 col-md-6 col-sm-12 case-header-height p-0">
            <div class="col-12 ">
                <strong>@Model.cas_patient</strong>
            </div>
            <div class="col-12">
                <strong>
                    @(Model.cas_billing_dob.HasValue ? DateTime.Now.CalculateAge(caseModel.cas_billing_dob.Value).ToString() : "")
                </strong>


                <strong>
                    @(Model.cas_metric_patient_gender?[0].ToString().ToUpper())
                </strong>
                <strong>@(Model.cas_billing_dob?.FormatDate())</strong>

            </div>
            <div class="col-12 ">
                <strong>
                    <span>
                        @Model.cas_identification_Title
                    </span>
                    <span>
                        @Model.cas_identification_number
                    </span>
                </strong>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 case-header-height case-header-border p-0">
            <div class="col-12">
                <strong>Facility:</strong> <span>@caseModel.facility.fac_name</span>@*<span id="popover-container">
                    <span id="popover" data-toggle="popover" style="cursor:pointer;" title="Facility Info"><span class="facility-tooltip mt-1"></span></span>*@

                @{
                    var emrLink = "#";
                    var target = "";
                    var tooltipTitle = "No EMR link available";
                    if (!string.IsNullOrEmpty(caseModel.facility.fac_emr))
                    {
                        emrLink = caseModel.facility.fac_emr;

                        if (!emrLink.StartsWith("http://") && !emrLink.StartsWith("https://"))
                        {
                            emrLink = "http://" + emrLink;
                        }
                        target = "_blank";
                        tooltipTitle = null;
                    }
                }


            </div>
            <div class="col-12">
                <strong>Case Type:</strong> <span>
                    @if (dictCaseTypes.ContainsKey(Model.cas_ctp_key))
                    {
                        <text>
                            @dictCaseTypes[Model.cas_ctp_key]
                        </text>
                    }
                </span>
            </div>
            <div class="col-12">
                <strong>Cart:</strong>
                <span>@caseModel.cas_cart</span>
            </div>
        </div>

        <div class="col-xl-3 col-lg-6 col-md-6 col-sm-12 case-header-height case-header-border p-0">
            <div class="col-12">
                <strong>Facility Time:</strong> <span id="FacilityTime" style="display:none;"> @DateTime.UtcNow.ToTimezoneFromUtc(facilityTimeZone).ToString("HH:mm:ss") </span>
                <span>@(Functions.GetTimeZoneAbbreviation(facilityTimeZone))</span>
            </div>
            <div class="col-sm-12">
                <strong>Start Time:</strong>
                @{
                    if (caseModel.cas_response_ts_notification_utc.HasValue)
                    {
                        <span> @caseModel.cas_response_ts_notification_utc.Value.ToTimezoneFromUtc(Settings.DefaultTimeZone).ToString("H:mm:ss") EST @caseModel.cas_response_ts_notification_utc.Value.ToTimezoneFromUtc(Settings.DefaultTimeZone).ToString("MM/dd/yyyy")  </span>
                    }
                }
            </div>
            <div class="col-sm-12 d-inline-block">
                <strong>Arrival Time:</strong>
                @{
                    if (caseModel.cas_metric_door_time_est.HasValue)
                    {
                        <span>@(caseModel.cas_metric_door_time_est.Value.ToString("H:mm:ss")) @(Functions.GetTimeZoneAbbreviation(facilityTimeZone)) @(caseModel.cas_metric_door_time_est.Value.ToString("MM/dd/yyyy")) </span>
                    }
                }
            </div>
        </div>

        <div class="col-xl-2 col-lg-6 col-md-6 col-sm-12 case-header-height case-header-border p-0">
            <div class="col-sm-12">
                <strong>Physician: </strong>
                @if (caseModel.PhysicianUser != null)
                {
                    <span>
                        @caseModel.PhysicianUser.FirstName @caseModel.PhysicianUser.LastName
                    </span>
                }
            </div>
            <div class="col-sm-12">
                <strong>Navigator: </strong>
                <span>@Model.cas_created_by_name </span>
            </div>

            <div class="col-sm-12 align-text-bottom">
                <strong>Case:</strong> <span id="spnCaseNumber"> @caseModel.cas_case_number </span>
            </div>
        </div>


        <!-- New Column-->
        <div class="col-xl-2 col-lg-6 col-md-6 col-sm-12 case-header-height case-header-border" id="case_edit_header_col5">
            <div class="row">

                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6">
                    <input type="button" value="Facility Info" id="popover" class="btn btn-dark btn-sm" />

                </div>
                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6 text-xl-right">
                    <a target="@target" rel="noopener noreferrer" href="@emrLink" class="btn btn-dark btn-sm" data-toggle="tooltip" data-placement="top" title="@tooltipTitle">
                        EMR Link <img alt="EMR Icon" style="width:17px;" src="/Content/images/facility_rem_icon.png" class="facility-emr-link" />
                    </a>
                </div>


            </div>

            <div class="row mt-xl-3">
                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6">
                    <a href="javascript:void(0)" data-type="ED Main" class="@(loggedInUser.EnableFive9 ? "edMainLinkClick" : "") btn btn-dark btn-sm">
                        ED Main &nbsp;
                        <span class="fa fa-phone text-white edMainHeaderLink">
                        </span>
                    </a>
                </div>

                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6 text-xl-right">
                    <a href="javascript:void(0)" data-type="CallBack" class="@(loggedInUser.EnableFive9 ? "callLink" : "") btn btn-dark btn-sm" data-number="@Functions.ClearPhoneFormat(Model.cas_callback)" data-formatted-number="@Model.cas_callback">
                        Call Back
                        <span class="fa fa-phone text-white  edMainHeaderLink">
                        </span>
                    </a>
                </div>

            </div>
            <div class="row mt-xl-3">
                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6">
                    <a href="javascript:void(0)" data-type="Radiology" class="@(loggedInUser.EnableFive9 ? "edMainLinkClick" : "") btn btn-dark btn-sm">
                        Radiology
                        <span class="fa fa-phone text-white  edMainHeaderLink">
                        </span>
                    </a>
                </div>

                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6 text-xl-right">
                    <a href="javascript:void(0)" data-type="Help Desk/ IT" class="@(loggedInUser.EnableFive9 ? "edMainLinkClick" : "") btn btn-dark btn-sm">
                        IT support
                        <span class="fa fa-phone text-white  edMainHeaderLink">
                        </span>
                    </a>
                </div>
            </div>
            <div class="row mt-xl-3">
                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6">
                    <button type="button" onclick="openProtocolpopup()" ; class="btn btn-dark btn-sm" id="protocols">
                        <span class="fa fa-hospital-o text-white  edMainHeaderLink">
                        </span>
                        Protocols
                    </button>
                </div>

                <div class="col-sm-12 col-md-12 col-lg-12 col-xl-6 text-xl-right">
                    <button type="button" onclick="openOnboardedpopup()" ; class="btn btn-dark btn-sm" id="onboardeds">
                        Onboarding
                    </button>
                </div>
            </div>

        </div>
        <!-- End of New Column -->
    </div>
</div>

@{
    var templateTypes = new List<int>()
{
EntityTypes.StrokeAlertTemplateTpa.ToInt(),
EntityTypes.NeuroStrokeAlertTemplateTpa.ToInt(),
EntityTypes.StrokeAlertTemplateNoTpa.ToInt(),
EntityTypes.StrokeAlertTemplateNoTpaTeleStroke.ToInt(),
EntityTypes.StateAlertTemplate.ToInt()
};

    var hideTemplates = false;

    if (!Model.TemplateEntityType.HasValue || !templateTypes.Contains(Model.TemplateEntityType.Value))
    {
        hideTemplates = true;
    }
}
<ul class="nav nav-tabs" role="tablist" id="menuTabs">
    @if (!(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) || User.IsInRole(UserRoles.FacilityPhysician.ToDescription()) || User.IsInRole(UserRoles.Physician.ToDescription()) || User.IsInRole(UserRoles.PartnerPhysician.ToDescription())))
    {
        <li class="nav-item"><a id="generalTABLink" data-toggle="tab" class="nav-link  @((User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) ||  User.IsInRole(UserRoles.FacilityPhysician.ToDescription()) || User.IsInRole(UserRoles.Physician.ToDescription()) || User.IsInRole(UserRoles.PartnerPhysician.ToDescription())) ? "" : "active")" href="#basic" onclick="showHideTabElements('#basic');">General</a></li>
    }
    @if (!(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription())))
    {
        if (Model.cas_ctp_key == CaseType.StrokeAlert.ToInt() || Model.cas_ctp_key == CaseType.StatConsult.ToInt() || Model.cas_ctp_key == CaseType.TransferAlert.ToInt())
        {
            isMetricsVisible = true;
            <li class="nav-item">
                <a id="metricTabLink" data-toggle="tab" class="nav-link @((User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) ||  User.IsInRole(UserRoles.FacilityPhysician.ToDescription()) || User.IsInRole(UserRoles.Physician.ToDescription()) || User.IsInRole(UserRoles.PartnerPhysician.ToDescription()))? "active" : "")" href="#metric" onclick="showHideTabElements('#metric');">Physician Metrics</a>
            </li>
        }
    }
    @if (!(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription())) && !hideTemplates)
    {
        if (Model.cas_ctp_key == CaseType.StrokeAlert.ToInt() || Model.cas_ctp_key == CaseType.StatConsult.ToInt() || Model.cas_ctp_key == CaseType.TransferAlert.ToInt())
        {
            <li class="nav-item"><a id="templatesTabLink" data-toggle="tab" class="nav-link" href="#templates" onclick="showHideTabElements('#templates');">Templates</a></li>
        }
    }
    @if (!(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription()) || User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) || User.IsInRole(UserRoles.FacilityPhysician.ToDescription())))
    {
        <li class="nav-item"><a id="billingTabLink" data-toggle="tab" class="nav-link @((User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) ||  User.IsInRole(UserRoles.FacilityPhysician.ToDescription())) && !isMetricsVisible? "active" : "")" href="#billing" onclick="showHideTabElements('#billing');">Billing</a></li>
    }
    @if (!(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription())))
    {
        <li class="nav-item"><a data-toggle="tab" class="nav-link" href="#metricResponse" onclick="showHideTabElements('metricResponse');">Case Review</a></li>
    }
    @if ((User.IsInRole(UserRoles.SuperAdmin.ToDescription()) || User.IsInRole(UserRoles.Administrator.ToDescription()) || User.IsInRole(UserRoles.QPS.ToDescription()) || User.IsInRole(UserRoles.QualityDirector.ToDescription()) || User.IsInRole(UserRoles.VPQuality.ToDescription())))
    {
        if (Model.cas_ctp_key == CaseType.StrokeAlert.ToInt() || Model.cas_ctp_key == CaseType.StatConsult.ToInt())
        {
            <li class="nav-item"><a id="premorbidTabLink" data-toggle="tab" class="nav-link" href="#premorbid" onclick="showHideTabElements('#premorbid');">Follow Up</a></li>
        }
    }
</ul>
@{
    var editUrl = Url.Action("Edit");

    if (isReadOnlyCase)
    {
        editUrl = editUrl + "?isReadOnly=true";
    }
    else
    {
        editUrl = editUrl + "?isReadOnly=false";
    }
}
<div class="ajaxForm">
    <form method="post" class="form-horizontal" id="createForm" action="@editUrl">
        <input type="hidden" name="cas_cancelled_type" id="cas_cancelled_type" value="@Model.cas_cancelled_type" />
        @Html.HiddenFor(x => x.cas_billing_bic_key_initial, new { @id = "key_revised" })
        @Html.Partial("_caseCancellationReason")
        <div class="tab-content" style="margin-top:27px;">
            <div id="basic" role="tabpanel" class="tab-pane fade @(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) || User.IsInRole(UserRoles.FacilityPhysician.ToDescription()) || User.IsInRole(UserRoles.Physician.ToDescription()) || User.IsInRole(UserRoles.PartnerPhysician.ToDescription()) ? "d-none" : "")
                         && @((User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) || User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))&& isMetricsVisible? "" : "in active show")">
                @Html.HiddenFor(m => m.cas_is_active)
                @Html.Partial("_CaseForm", Model)
            </div>

            <div id="metric" role="tabpanel" class="tab-pane fade @(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription()) ? "d-none": "")
                         @((User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) || User.IsInRole(UserRoles.FacilityPhysician.ToDescription()) || User.IsInRole(UserRoles.Physician.ToDescription()) || User.IsInRole(UserRoles.PartnerPhysician.ToDescription())) ? "fade in active show " : "")">
                @Html.Partial("_CaseMetricForm", Model)
            </div>

            <div id="templates" role="tabpanel" class="tab-pane fade @(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription()) || hideTemplates  ? "d-none": "")">
                @if (Model.TemplateEntityType == EntityTypes.StrokeAlertTemplateTpa.ToInt())
                {
                    @Html.Partial("Templates/Forms/_StrokeAlertTPATemplateForm", Model)
                }
                else if (Model.TemplateEntityType == EntityTypes.NeuroStrokeAlertTemplateTpa.ToInt())
                {
                    @Html.Partial("Templates/Forms/_StrokeNeuroTPATemplateForm", Model)
                }
                else if (Model.TemplateEntityType == EntityTypes.StrokeAlertTemplateNoTpa.ToInt())
                {
                    @Html.Partial("Templates/Forms/_StrokeAlertNoTPATemplateForm", Model)
                }
                else if (Model.TemplateEntityType == EntityTypes.StrokeAlertTemplateNoTpaTeleStroke.ToInt())
                {
                    @Html.Partial("Templates/Forms/_TeleStrokeNoTPATemplateForm", Model)
                }
                else if (Model.TemplateEntityType == EntityTypes.StateAlertTemplate.ToInt() && (Model.cas_ctp_key == 10 || Model.cas_ctp_key == 244))
                {
                    @Html.Partial("Templates/Forms/_TeleStateTemplate", Model)
                }
                @Html.HiddenFor(m => m.TemplateEntityType)
            </div>

            <div id="facilityMetric" role="tabpanel" class="tab-pane fade @(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription()) ? "d-none": "")">
                @Html.Partial("_CaseFacilityForm", Model)
            </div>


            <div id="premorbid" role="tabpanel" class="tab-pane fade">
                @Html.Partial("_CasePreMorbid", Model)
            </div>

            <div id="billing" role="tabpanel" class="tab-pane fade @(User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription()) ? "d-none": "")
                         @((User.IsInRole(UserRoles.FacilityAdmin.ToDescription()) || User.IsInRole(UserRoles.FacilityPhysician.ToDescription())) && !isMetricsVisible ? "fade in active show " : "")">
                @Html.Partial("_CaseBilling", Model)
            </div>

            <div id="metricResponse" role="tabpanel" class="tab-pane fade @( User.IsInRole(UserRoles.Navigator.ToDescription()) || User.IsInRole(UserRoles.OutsourcedNavigator.ToDescription()) ? "d-none": "")">
                @Html.Partial("_CaseMetricResponse", Model)
            </div>


        </div>
    </form>
</div>

<div id="caseTemplateModel" class="modal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        @using (Html.BeginForm(new { role = "form" }))
        {
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Case Template</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div id="validationSummary">
                        </div>
                        <div class="form-group row">
                            <div class="col-12">
                                <textarea class="form-control" id="cas_template_html" name="cas_template_html"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <div class="col-2 text-left">
                        <a class="btn btn-link" href="#" id="btnCancelTemplatePopup">Cancel</a>
                    </div>
                    <div class="col-10 text-right">
                        <input type="button" class="btn btn-dark" id="btnSaveTemplate" value="Save" />

                        @*<input type="button" class="btn btn-dark" id="btnSaveAndCopyTemplate" value="Save & Finalize" data-clipboard-action="copy" data-clipboard-target="#editorContentHolder" />*@
                        <input type="button" class="btn btn-dark" id="btnSaveAndCloseTemplate" value="Save & Close" />
                        <div id="editorContentHolder" style="height:0.5px; width:0.5px; overflow:hidden;"></div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="casereviewtemplatemodal" class="modal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        @using (Html.BeginForm(new { role = "form" }))
        {
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Case Review Template</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <!-- Modal body -->
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div id="Reviewvalidation">
                        </div>
                        <div class="form-group row">
                            <div class="col-12">
                                <textarea class="form-control" id="cas_review_template_html" name="cas_review_template_html"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <div class="col-2 text-left">
                        <a class="btn btn-link" href="#" id="btnCancelReviewTemplatePopup">Cancel</a>
                    </div>
                    <div class="col-10 text-right">
                        <input type="button" class="btn btn-dark" id="btnSaveReviewTemplate" value="Save" />
                        <input type="button" class="btn btn-dark" id="btnSaveAndCloseReviewTemplate" value="Save & Close" />
                        <input type="button" class="btn btn-dark" id="btnPdfExport" value="Export PDF" style="display:none" />
                        <input type="button" class="btn btn-dark" id="btnWordDocumentExport" value="Export Word" />

                        <div id="editorContentHolder" style="height:0.5px; width:0.5px; overflow:hidden;"></div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-2 btn-copy-popup">
        <input type="button" value="Copy" class="btn btn-dark" id="btnCopy" disabled="disabled" />
    </div>
    <div class="col-lg-6 col-md-6 col-sm-8 col-12 btn-save-close-cancel">
        @if (!string.IsNullOrEmpty(Request.Params["RedirectUrl"]))
        {
            <a href="@Request.Params["RedirectUrl"]" class="btn btn-link loadLinkAsync-cancel">Cancel</a>
        }
        else
        {
            <a href="@Url.Action("Index")" class="btn btn-link loadLinkAsync-cancel">Cancel</a>
        }

        <input type="button" class="btn btn-dark" value="Save" id="btnSave" disabled="disabled" />

        <input type="button" class="btn btn-dark" value="Save & Close" id="btnSaveClose" disabled="disabled" />

        @*work for tele*@
        @{
            var reviewtemplate = Model.case_review_template.Where(x => x.crt_cas_key == Model.cas_key).FirstOrDefault();
            <input type="button" class="btn btn-dark" value="@(reviewtemplate?.crt_cas_key !=null ? "Load Review Template" : "Generate Review Template")" id="btnExportWord" style="display:none" />
        }
        @*work for tele*@

        @{
            var template = Model.case_generated_template.Where(m => m.cgt_ent_key == Model.TemplateEntityType.ToInt()).FirstOrDefault();
        }

        <input type="button" class="btn btn-dark" @(Model.cas_template_deleted_date.HasValue ? "disabled" : "") value="@(template?.cgt_finalize_date != null ? "Load Template" : "Generate Template")" id="btnDownloadTemplate" style="display:none" />
        <input type="button" class="btn btn-dark" value="Complete Case" id="btnCompleteCase" disabled="disabled" style="display:none" />
        <input type="button" class="btn btn-danger" value="Cancel Case" id="btnCancelCase" disabled="disabled" style="display:none" />
    </div>
    <div class="col-1"></div>
</div>

@if (!ViewData.ModelState.IsValid)
{
    <div>
        <br />
        @Html.ShowBootStrapAlert("", Html.ValidationSummary().ToHtmlString(), BootStrapeAlertType.Danger);
    </div>
}

@Html.Partial("_CaseCopyPopup")

<div id="caseTemplatePreviewModal" class="modal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Copy Preview</h4>
                <button type="button" class="close btnCloseTemplatePreview">&times;</button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <div id="caseTemplateReviewData">
                </div>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="col-2 text-left">
                    <input type="button" class="btn btn-dark btnCloseTemplatePreview" id="btnCancelTemplatePreview" value="Close" />
                </div>
                <div class="col-10 text-right">
                    <input type="button" class="btn btn-dark" id="btnOKTemplatePreview" value="OK" />
                    <input type="button" class="btn btn-dark d-none " id="btnCopyTemplatePreview" value="copyTemplateAlt" data-clipboard-action="copy" data-clipboard-target="#caseTemplateReviewData" />
                </div>
            </div>
        </div>
    </div>
</div>

<div id="casereviewremplatepreviewmodal" class="modal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Copy Preview</h4>
                <button type="button" class="close btnCloseReviewTemplatePreview">&times;</button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <div id="caseReviewTemplateReviewData">
                </div>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="col-2 text-left">
                    <input type="button" class="btn btn-dark btnCloseReviewTemplatePreview" id="btnCancelReviewTemplatePreview" value="Close" />
                </div>
                <div class="col-10 text-right">
                    <input type="button" class="btn btn-dark" id="btnOKReviewTemplatePreview" value="OK" />
                    <input type="button" class="btn btn-dark d-none " id="btnCopyReviewTemplatePreview" value="copyTemplateAlt" data-clipboard-action="copy" data-clipboard-target="#caseReviewTemplateReviewData" />
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_EDMainCallPopup")

<script src="~/Scripts/clipboard.min.js"></script>

<script src="~/Content/case/pdf/jspdf.min.js"></script>
<script src="~/Content/case/pdf/html2canvas.min.js"></script>
<script src="~/Content/case/pdf/html2pdf.bundle.min.js"></script>
<script type="text/javascript">
        var AutoSaveBool = @enableAutoSave.ToString().ToLower();

        function PauseAutoSave() {
            AutoSaveBool = false;
            clearAutoSaveInterval();
        }
        function ResumeAutoSave() {
            AutoSaveBool = true;
            autoSaveCase();
        }
    var casStatus;
    var checkCaseAlreadyUpdated = true;



    $(".timer-container").find("input.timepicker").each(function (i, e) {
        ShowHideTimeZone($(e));
    });

    $(document).ready(function () {

        $(window).on('beforeunload', function () {
            clearSoftSaveCase();
        });

        var checkRevised = "@Model.cas_billing_bic_key_initial";
        if (checkRevised)
            $('#cas_billing_bic_key').attr("disabled", true);
        window.showErrorsOnTabClick = false;
         casStatus = "@cas_status";
        if (casStatus === "140") {
            DisableFields();
        }
    })
    //$('#cas_cst_key').change(function () {
    //    var id = $('#cas_cst_key').val();
    //    if (id !== '140') {
    //        EnableFields();
    //    }
    //});
    function EnableFields() {
        var ctp_key = $('#cas_ctp_key').data("kendoDropDownList");
        var fac_key = $('#cas_fac_key').data("kendoDropDownList");
        var bic_key = $('#cas_billing_bic_key').data("kendoDropDownList");
        var bic_key3 = $('#cas_billing_bic_key3').data("kendoDropDownList");
        var ident_type = $('#billing_cas_identification_type').data("kendoDropDownList");
        var phy_key = $('#cas_phy_key').data("kendoDropDownList");
        var cas_ident_type = $('#general_cas_identification_type').data("kendoDropDownList");
        var loc_key = $('#cas_cart_location_key').data("kendoDropDownList");
        var tpa_key = $('#cas_metric_tpaDelay_key').data("kendoDropDownList");
        var lod_key = $('#cas_billing_lod_key').data("kendoDropDownList");
        var reason_key = $('#cas_metric_non_tpa_reason_key').data("kendoDropDownList");

        ctp_key.enable(true); fac_key.enable(true); bic_key.enable(true); bic_key3.enable(true); ident_type.enable(true); phy_key.enable(true);
        cas_ident_type.enable(true); loc_key.enable(true); tpa_key.enable(true); lod_key.enable(true); reason_key.enable(true);

        $('#cas_metric_lastwell_date_est').data('kendoTimePicker').readonly(false);
        $('#cas_metric_door_time_est').data('kendoTimePicker').readonly(false);
        $('#cas_response_first_atempt').data('kendoTimePicker').readonly(false);
        $('#cas_response_ts_notification').data('kendoTimePicker').readonly(false);
        $('#cas_metric_stamp_time_est').data('kendoTimePicker').readonly(false);
        $('#cas_metric_video_start_time_est').data('kendoTimePicker').readonly(false);

        $('#cas_metric_assesment_time_est').data('kendoTimePicker').readonly(false);
        $('#cas_metric_video_end_time_est').data('kendoTimePicker').readonly(false);
        $('#cas_metric_tpa_verbal_order_time_est').data('kendoTimePicker').readonly(false);

        $('#metric_cas_dob').data('kendoDatePicker').readonly(false);
        $('#billing_cas_dob').data('kendoDatePicker').readonly(false);
        $(".physicianValidationID [name='cas_billing_date_of_consult']").data('kendoDatePicker').enable();

        $('input[type="text"]').removeAttr('disabled');//prop("disabled", false);
        $('input[type="text"], textarea').removeAttr('disabled');
        $("input.ml-2").removeAttr("disabled");
        $("input.track_change").removeAttr("disabled");
        $("input.form-check-input").removeAttr("disabled");
        $(".addValidation").removeAttr('disabled');
        $('select').removeAttr("disabled");
        $("#cas_cst_key").removeAttr("disabled");
        $("#cas_callback_response_by").removeAttr("disabled");
        for (var i = 1; i <= 15; i++) {
            var id = '#case_template_telestroke_notpa_ctt_nihss_' + i;
            $(id).attr("disabled", false);
        }
        for (var i = 1; i <= 15; i++) {
            var id = '#case_template_stroke_notpa_ctn_nihss_' + i;
            $(id).attr("disabled", false);
        }
        //for (var i = 1; i <= 15; i++) {
        //    var id = '#case_template_statconsult_ctt_nihss_' + i;
        //    $(id).attr("disabled", true);
        //}
        $('.k-i-clock').removeAttr('disabled');
        $('.disabled').removeAttr("disabled");
        $('#cas_metric_is_lastwell_unknown').removeAttr("disabled");
        $("input.disabled").removeAttr("disabled");
        $('#cas_metric_lastwell_date_est').removeAttr("disabled");
        $('.readonly').removeAttr("disabled");
        $('.staticDropDown').removeAttr("disabled");
        $('input[type=checkbox]').removeAttr("disabled");
        $('input[type=radio]').removeAttr("disabled");
    }
    function DisableFields() {
        $('input[type="text"]').prop("disabled", true);
        $('input[type="text"], textarea').prop("disabled", true);
        $("input.ml-2").attr("disabled", true);
        $("input.track_change").attr("disabled", true);
        $("input.form-check-input").attr("disabled", true);
        $(".addValidation").attr("disabled", true);
        $('select').attr('disabled', true);
        $("#cas_callback_response_by").KendoDropDownDisable();
       // $("#cas_cst_key").removeAttr("disabled");
        for (var i = 1; i <= 15; i++) {
            var id = '#case_template_telestroke_notpa_ctt_nihss_' + i;
            $(id).attr("disabled", true);
        }
        for (var i = 1; i <= 15; i++) {
            var id = '#case_template_stroke_notpa_ctn_nihss_' + i;
            $(id).attr("disabled", true);
        }
        //for (var i = 1; i <= 15; i++) {
        //    var id = '#case_template_statconsult_ctt_nihss_' + i;
        //    $(id).attr("disabled", true);
        //}
        $('#cas_billing_bic_key').attr("disabled", true);
        $('#cas_billing_bic_key3').attr("disabled", true);
        $('.disabled').attr("disabled", true);
        $('#cas_metric_is_lastwell_unknown').attr("disabled", true);
        $("input.disabled").attr("disabled", true);
        $('#cas_metric_lastwell_date_est').attr("disabled", true);
        $('.readonly').attr("disabled", true);
        $('.staticDropDown').attr("disabled", true);
        $('input[type=checkbox]').attr('disabled', 'true');
        $('input[type=radio]').attr('disabled', 'true');

        $('#btnSave, #btnSaveClose, #btnExportWord, #btnCopy, #btnCompleteCase, #btnSaveTemplate, #btnSaveAndCloseTemplate, #btnDownloadTemplate').hide();//attr('disabled', true);

    }
    var acceptedStatusIndex = 2;
    clearAutoSaveInterval();
    var uclData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.UclData, Newtonsoft.Json.Formatting.Indented));
    var clipboard;
    var browserName = getBrowserName();
    var previousCaseStatus = null;
    var isAdmin = @((User.IsInRole("Administor") || User.IsInRole("Super Admin")).ToString().ToLower());
    var physicianDropDown = null;
    function showHideTabElements(tab) {
        $("#btnExportWord").hide();
        $("#btnDownloadTemplate").hide();
        $("#btnCompleteCase").hide();
        $("#btnCopy").hide();
        $("#btnSaveSend").hide();
        $("#btnCancelCase").hide();
        $('#btnSave, #btnSaveClose, #btnExportWord').attr('disabled', false);

        if (tab == '#basic') {
            if (casStatus !== '140') {
                $("#btnCopy").show();
                $("#btnSaveSend").show();
            }
            if ('@(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))' == 'True') {
                $('#btnCopy, #btnSave, #btnSaveClose, #btnExportWord').attr('disabled', true)
            }
        }
        else if (tab == '#metric') {
            if ('@(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()))' == 'True' || '@(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))' == 'True') {
                $('#btnSave, #btnSaveClose, #btnExportWord').attr('disabled', true)
            }
        }
        else if (tab == '#templates') {
            if (@isReadOnlyCase.ToString().ToLower()) {
                $("#btnDownloadTemplate").hide();

                if (@userMedicalStaff.ToString().ToLower()) {
                    if (casStatus !== '140') {
                        $("#btnDownloadTemplate").show();
                        $('#btnDownloadTemplate').enable();
                    }
                }

            }
            else {
                if (casStatus !== '140') {

                    $("#btnDownloadTemplate").show();
                }
            }

            if ('@(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()))' == 'True' || '@(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))' == 'True') {
                $('#btnSave, #btnSaveClose, #btnExportWord').attr('disabled', true)
            }

        }
        else if (tab == '#billing') {
            if (casStatus !== '140') {
                $("#btnCompleteCase").show();
            }

            if ('@(User.IsInRole(UserRoles.Physician.ToDescription()))' == 'True' || '@(User.IsInRole(UserRoles.PartnerPhysician.ToDescription()))' == 'True') {
                if (casStatus !== '140') {
                    $("#btnCancelCase").show();
                }
            }
            if ('@(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))' == 'True') {
                $('#btnSave, #btnSaveClose, #btnExportWord').attr('disabled', true)
            }
        } else if (tab == 'metricResponse' || tab == '#metricResponse') {
            if (casStatus !== '140') {
                $("#btnExportWord").show();
            }
            if ('@(User.IsInRole(UserRoles.Physician.ToDescription()))' == 'True' || '@(User.IsInRole(UserRoles.PartnerPhysician.ToDescription()))' == 'True' || '@(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()))' == 'True' || '@(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))' == 'True') {
                $('#btnSave, #btnSaveClose, #btnExportWord').attr('disabled', true)
            }

            if ('@(User.IsInRole(UserRoles.VPQuality.ToDescription()))' == 'True') {
                $("#cas_review_qps_reviewed_completed").removeAttr('readonly');
            }
        } else if (tab == '#premorbid' || tab == 'premorbid') {
            GetPreMorbidData();
        }

        //Disable and Enable buttons
        if (@isReadOnlyCase.ToString().ToLower()) {
               if (@enableControlsInReadOnly.ToString().ToLower()) {

                   if ((tab == 'metricResponse' || tab == '#metricResponse') && @userFacilityAdmin.ToString().ToLower() != true && @userFacilityPhysician.ToString().ToLower() != true) {
                        $('#btnSave').enable();
                       $('#btnSaveClose').enable();
                        $('#btnExportWord').enable();
                    }
                    else {
                        $('#btnSave').disable();
                        $('#btnSaveClose').disable();
                        $('#btnExportWord').disable();
                  }
              }
            }

        //// If validation call is comming from complete case button, then we validate on each tab selection. other wise we do not need to check validation on tab selection.
        if (typeof (window.showErrorsOnTabClick) == "undefined" || window.showErrorsOnTabClick === false) {

            return;
        }

        var time = 250;

        if (tab == "#basic") {

            /// SUMMARY:
            /// Basic Or General Tab is default tab when page is loaded. That is why we are checking where all kendo or UI javascript executed successfully
            /// and data in dropdowns are loaded successfully.  if not we avoid validation.
            /// Below conditional statement verify that the dropdown in Genral tab is renderd and data is loaded in it.


            if ($("#cas_ctp_key").parent(".k-dropdown").length > 0 && $("#cas_fac_key").parent(".k-dropdown").length > 0) {
                window.setTimeout(function () {
                    $("#generalTABLink").tab("show");
                    validateGeneralTabForm(true, true, false);
                }, time);
            }

        }
        else if (tab == "#metric") {
            window.setTimeout(function () {
                $("#metricTabLink").tab("show");
                validateMetricsRequiredFields(true);
            }, time);
        }
        else if (tab == "#templates") {
            window.setTimeout(function () {
                $("#templatesTabLink").tab("show");
                validateTemplateTabRequiredFields($("#TemplateEntityType").val() @*@Model.TemplateEntityType.ToInt()*@, true);
            }, time);
        }
        else if (tab == "#billing") {
            window.setTimeout(function () {
                $("#billingTabLink").tab("show");
                validateBillingRequiredFields(true);
            }, time);
        } else if (tab == "#premorbid") {
            window.setTimeout(function () {
                $("#premorbidTabLink").tab("show");
               // validatepremorbidFields(false);
            }, time);
        }

    }

    function checkIfCaseUpdatedBefore() {
        var url = "/Case/checkIfCaseUpdatedBefore";
        var result = null;
        $.ajax({
            async: false,
            type: 'Get',
            url: url,
            data: {
                cas_key: $.trim($("#createForm").find("#cas_key").val()).toInt(),
                cas_cst_key: $.trim($("#cas_cst_key").val()).toInt(),
                cas_modified_date: $("#cas_modified_date").val(),
                VisibleTabs: $("#VisibleTabs").val()
            },
            success: function (response) {
                result = response;
            }
        });
        return result;
    }

    function onLoadCompleteCode() {
        if ('@(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()))' != 'True' || '@(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))' != 'True'  && @((!isReadOnlyCase).ToString().ToLower())) {
            $("#btnCopy").enable(); $("#btnSave").enable(); $("#btnSaveClose").enable(); $("#btnCompleteCase").enable(); $("#btnCancelCase").enable();
            //if (enableAutoSave.ToString().ToLower()) {
            if (AutoSaveBool) {
                window.setTimeout(function () { $('#createForm').watch("cas_key,cas_fac_key,cas_phy_key,cas_ctp_key,cas_cst_key,nihssDropDown,cas_metric_stamp_time_est,cas_response_ts_notification");}, 2000);
                autoSaveCase();
            }
            enableSaveSend();
        }
    }

    $(document).ready(function () {
        var Status = 1;
        RootCauseTable(Status);
        ContactInfoTable(Status);
        $("#cas_cst_key-list").remove();
        document.title = $("#title-prefix").val() + '@ViewBag.Title';
        $("#review-initiated-wrap .form-check-inline input[type='radio']:checked").click();
        var tab = $("#activetab").val();

        // biiling code text
        ShowLableForBillingCode(@Model.cas_billing_bic_key);

        var clickfromhome = localStorage.getItem("clickfromhome");
        if (clickfromhome === "casespendingreview") {
            tab = "#metricResponse";
            localStorage.setItem('clickfromhome', 'null');
        }

        // fix for activeTab not found on page load
        if (tab == '') {
            $("#menuTabs").find('.nav-link').first().addClass("active");
            tab = $("#menuTabs .active ").attr("href");
        }
        if (tab != "") {
            var panId = tab.replace("#", "");
            $('.nav-tabs .nav-link').removeClass("active");
            $('.tab-content .tab-pane').removeClass("fade in active show");
            $('.nav-tabs a[href="' + tab + '"]').addClass("active");
            $('.tab-content div[id="' + panId + '"]').addClass("fade in active show");

            $("#activetab").val("");

            $("#activetab").val("");
            window.setTimeout(function () {

                var visibleTabs = [];
                $("#menuTabs a").each(function (index, item) {
                    visibleTabs.push($(this).attr("href").replace("#", ""));
                    var test = "";
                });
                $("#VisibleTabs").val(visibleTabs.join(","));

            }, 500);

            showHideTabElements(tab);
        }
        // mask phone number field
        maskPhoneNumber();
        // case general info
        var facilityDropDown = $("#cas_fac_key").fillKendoDropDown("/LookUp/GetStrokeFacilities?phoneNumber=", "fac_name", "fac_key", "-- Select --",function () {
            if (@(User.IsInRole(UserRoles.Physician.ToDescription()).ToString().ToLower()) || @(User.IsInRole(UserRoles.PartnerPhysician.ToDescription()).ToString().ToLower())) {

                onLoadCompleteCode();
            }
        });

        var cas_phy_key_val = '@Model.cas_phy_key';
        var caseStatusDropDown = null;
        if(@Model.cas_cst_key != @CaseStatus.Complete.ToInt() && '@(User.IsInRole(UserRoles.Navigator.ToDescription()))' == 'True') {
            caseStatusDropDown =  $("#cas_cst_key").fillKendoDropDown("/LookUp/GetCaseStatus?allowCompleteOption=false", "ucd_title", "ucd_key", "-- Select --", function () {
                if (cas_phy_key_val == "" || cas_phy_key_val == null) {
                    $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).hide();
                }
                else {
                    $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).show();
                }
            });
        }
        else if('@(User.IsInRole(UserRoles.Navigator.ToDescription()))' != 'True'){
            caseStatusDropDown =   $("#cas_cst_key").fillKendoDropDown("/LookUp/GetCaseStatus?allowCompleteOption=true", "ucd_title", "ucd_key", "-- Select --", function () {
                if (cas_phy_key_val == "" || cas_phy_key_val == null) {
                    $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).hide();
                }
                else {
                    $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).show();
                }
            });
        }

        if (caseStatusDropDown != null) {
            caseStatusDropDown.bind('change', function (e) {
                previousCaseStatus = $("#cas_cst_key").val();
                enableSaveSend();
            });
        }

        var caseTypeDropDown = null;
        var caseTypeJson = null;
        var batch_id = $("#cas_batch_id").val();
        if ($.trim(batch_id) != "") {
             caseTypeJson =   @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(caseTypeList, Newtonsoft.Json.Formatting.Indented));
        }
        var caseTypeDropDown = $("#cas_ctp_key").fillStaticKendoDropDown(caseTypeJson == null ? getUclDataByType(uclData, @(UclTypes.CaseType.ToInt())) : caseTypeJson, "ucd_title", "ucd_key", "-- Select --", caseTypeChangeHandler, hideFieldsForEEGCases);
        $("#general_cas_identification_type").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.IdentificationType.ToInt())), "ucd_title", "ucd_key", "-- Select --");
        $("#billing_cas_identification_type").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.IdentificationType.ToInt())), "ucd_title", "ucd_key", "-- Select --");
        var caller_source = $("#cas_caller_source_key").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.CallerSource.ToInt())), "ucd_title", "ucd_key", "-- Select --");
        var cart_location = $("#cas_cart_location_key").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.CartLocation.ToInt())), "ucd_title", "ucd_key", "-- Select --");

        caller_source.bind('change', function (e) {

            $("#div_cas_caller_source_text").hide();
            var value = $(this).find("option:selected").text();
            if ($.trim(value).toLowerCase() == 'other') {
                $("#div_cas_caller_source_text").show();
            }
        });

        @*TCARE - 472 *@
        cart_location.bind('change', function (e) {

            $("#div_cas_cart_location_text").hide();
            var value = $(this).find("option:selected").text();
            if ($.trim(value).toLowerCase() == 'other') {
                $("#div_cas_cart_location_text").show();
            }
        });

        /*************************************************************************************************************************************
         ******************************* On field change, Automatically update it value in its duplicate field********************************
         ************************************************************* (if exist) in other tabs.**********************************************
         *************************************************************************************************************************************/
        //caseTypeDropDown.bind('change', caseTypeChangeHandler);
        caseTypeDropDown.bind("change", function (e) {
            if ($(this).val() == '@CaseType.StrokeAlert.ToInt()') {
                $(".date_consult_timepicker").addClass('d-none ');
                $(".date_consult_datepicker").removeClass('d-none ');
                $("[name = cas_billing_date_of_consult]").val($(".date_consult_datepicker input").val().split(" ")[0]);
                $(".date_consult_datepicker").parent().siblings("label").removeClass("text-danger");
            }
            else {
                $(".date_consult_datepicker").addClass('d-none ');
                $(".date_consult_timepicker").removeClass('d-none ');
                $("[name = cas_billing_date_of_consult]").val($(".date_consult_timepicker input").val());
                $(".date_consult_timepicker").parent().siblings("label").addClass("text-danger");
            }
            caseTypeChangeHandler();
            if ($.trim($("#cas_fac_key").val()) != "" && $("#cas_fac_key").val() != "00000000-0000-0000-0000-000000000000") {
                loadPhysicianDropDown($("#cas_fac_key").val(), true);
            }
        });
        $("#general_cas_billing_date_of_consult,.date_consult_timepicker .timepicker, .date_consult_datepicker .datepicker").off("change").change(function () {
            $("[name = cas_billing_date_of_consult]").val($(this).val());

        });
        $("#general_cas_identification_type").on('change', function () {
            $("#billing_cas_identification_type").data('kendoDropDownList').value(this.value);
        });
        $("#billing_cas_identification_type").on('change', function () {
            $("#general_cas_identification_type").data('kendoDropDownList').value(this.value);
        });
        $("#general_cas_identification_number").on('change', function () {
            $("#billing_cas_identification_number").val($(this).val());
            $("#review_cas_identification_number").val($(this).val());
        });
        $("#billing_cas_identification_number").on('change', function () {
            $("#general_cas_identification_number").val($(this).val());
            $("#review_cas_identification_number").val($(this).val());
        });
        $("#general_cas_dob").on('change', function () {
            $("#billing_cas_dob").val($(this).val());
            $("#metric_cas_dob").val($(this).val());
        });
        $("#billing_cas_dob").on('change', function () {
            $("#general_cas_dob").val($(this).val());
            $("#metric_cas_dob").val($(this).val());
        });
        $("#metric_cas_dob").on('change', function () {
            $("#general_cas_dob").val($(this).val());
            $("#billing_cas_dob").val($(this).val());
        });
        //ticket 557

        $("#general_cas_patient_name").on('change', function () {
            $("#billing_cas_patient_name").val($(this).val());
        });
        $("#billing_cas_patient_name").on('change', function () {
            $("#general_cas_patient_name").val($(this).val());
        });
        //Added By Axim 29-10-2020
        @*$(".morbidSymptoms").on('change', function () {
            var currentVal = $('input:radio[name=cas_metric_has_morbid_symptoms]:checked').val();
            $('.premorbid :radio:not(:checked)').attr('disabled', false);
            if (currentVal == "0") {
                $("#cas_metric_has_morbid_symptoms_0_UP").prop('checked', true);
            } if (currentVal == "1") {
                $("#cas_metric_has_morbid_symptoms_1_UP").prop('checked', true);
            } if (currentVal == "2") {
                $("#cas_metric_has_morbid_symptoms_2_UP").prop('checked', true);
            } if (currentVal == "3") {
                $("#cas_metric_has_morbid_symptoms_3_UP").prop('checked', true);
            } if (currentVal == "4") {
                $("#cas_metric_has_morbid_symptoms_4_UP").prop('checked', true);
            } if (currentVal == "5") {
                $("#cas_metric_has_morbid_symptoms_5_UP").prop('checked', true);
            } if (currentVal == "6") {
                $("#cas_metric_has_morbid_symptoms_6_UP").prop('checked', true);
            }if (currentVal == "7") {
                $("#cas_metric_has_morbid_symptoms_7_UP").prop('checked', true);
            }
            if ('@(User.IsInRole(UserRoles.Physician.ToDescription()))' != 'True') {
                $('.premorbid :radio:not(:checked)').attr('disabled', true);
            }
        });
        $(".premorbid").on('change', function () {
            var currentVal = $('input:radio[name=cas_premorbid_symptoms]:checked').val();
            if (currentVal == "0") {
                $("#cas_metric_has_morbid_symptoms_0").prop('checked', true);
            } if (currentVal == "1") {
                $("#cas_metric_has_morbid_symptoms_1").prop('checked', true);
            } if (currentVal == "2") {
                $("#cas_metric_has_morbid_symptoms_2").prop('checked', true);
            } if (currentVal == "3") {
                $("#cas_metric_has_morbid_symptoms_3").prop('checked', true);
            } if (currentVal == "4") {
                $("#cas_metric_has_morbid_symptoms_4").prop('checked', true);
            } if (currentVal == "5") {
                $("#cas_metric_has_morbid_symptoms_5").prop('checked', true);
            } if (currentVal == "6") {
                $("#cas_metric_has_morbid_symptoms_6").prop('checked', true);
            } if (currentVal == "7") {
                $("#cas_metric_has_morbid_symptoms_7").prop('checked', true);
            }
        });*@
        //Ended By Axim 29-10-2020

        $("#cas_billing_visit_type").on('change', function () {

            if ($(this).val() == 'Follow-Up') {
                $("#billing_followUp_date").val($("#hdn-default-followup_date").val());
                $("#billing_followUp_date_container").removeClass('d-none');
            }
            else {
                $("#billing_followUp_date").val("");
                $("#billing_followUp_date_container").addClass('d-none');
            }
        });

        /*************************************************************************************************************************************/
        loadPhysicianDropDown("@Model.cas_fac_key", false);

        facilityDropDown.bind("change", function (e) {
            $("#btnCopy").disable(); // making the button disabled by default.
            if ($("#cas_fac_key").val() == undefined || $("#cas_fac_key").val() == "00000000-0000-0000-0000-000000000000" || $("#cas_fac_key").val() == "") {
                $('#cas_phy_key').data('kendoDropDownList').enable(false);
            }
            else {
                $("#cas_phy_key_offline_error").hide();
                $("#cas_phy_key").removeAttr("disabled");
                $("#cas_phy_key").val("");
                loadPhysicianDropDown($("#cas_fac_key").val(), true);
                loadFacilityTimeZone($("#cas_fac_key").val());
                checkFacilityServiceType($("#cas_fac_key").val());
                GetFacilityCart($("#cas_fac_key").val());
            }
        });

        if (@Model.cas_ctp_key == @CaseType.StrokeAlert.ToInt()) {
            $("#cas_metric_tpaDelay_key").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.TpaDelay.ToInt())), "ucd_description", "ucd_key", "-- Select --");
            var tpadelayreason = $("#cas_metric_tpaDelay_key option:selected").text();
            $("#showtpadelayreasons").append(tpadelayreason);
            var nonTPACandidateReasonType = $("#cas_metric_non_tpa_reason_key").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.NonTPACandidate.ToInt())), "ucd_description", "ucd_key", "-- Select --");
            nonTPACandidateReasonType.bind("change", function (e) {
                if ($("#cas_metric_non_tpa_reason_key option:selected").text() == "Other") {
                    $("#divNonTPACandidateOther").show();
                }
                else {
                    $("#divNonTPACandidateOther").hide();
                }
            });
        }
        @*
        var BillingCodesList = getUclDataByType(uclData, @(UclTypes.BillingCode.ToInt()));
        if (@Model.cas_ctp_key == @CaseType.StrokeAlert.ToInt()) {
            BillingCodesList.splice(1, 1);
            BillingCodesList.splice(3, 2);
        }
        if (@Model.cas_ctp_key == @CaseType.StatConsult.ToInt()) {
            BillingCodesList.splice(0, 1);
        }
        if (@Model.cas_ctp_key == @CaseType.NursetoDr.ToInt()) {
            BillingCodesList.splice(0, 7);
        }
        if (@Model.cas_ctp_key == @CaseType.DrtoDr.ToInt()) {
            BillingCodesList.splice(0, 1);
            BillingCodesList.splice(1, 4);
        }

        if (@Model.cas_ctp_key == @CaseType.LongTermEEG.ToInt() || @Model.cas_ctp_key == @CaseType.RoutineEEG.ToInt() || @Model.cas_ctp_key == @CaseType.StatEEG.ToInt()) {
            BillingCodesList.splice(0, 4);
            BillingCodesList.splice(2, 1);
        }
        // case billing
        $("#cas_billing_lod_key").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.LoginDelay.ToInt())), "ucd_title", "ucd_key", "-- Select --");
        $("#cas_billing_bic_key").fillStaticKendoDropDown(BillingCodesList, "ucd_title", "ucd_key", "-- Select --");
        $("#cas_billing_bic_key2").fillStaticKendoDropDown(BillingCodesList, "ucd_title", "ucd_key", "-- Select --");
        $("#cas_billing_bic_key3").fillStaticKendoDropDown(BillingCodesList, "ucd_title", "ucd_key", "-- Select --");*@

        // case billing
        $("#cas_billing_lod_key").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.LoginDelay.ToInt())), "ucd_title", "ucd_key", "-- Select --");
        $("#cas_billing_bic_key").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.BillingCode.ToInt())), "ucd_title", "ucd_key", "-- Select --");
        $("#cas_billing_bic_key2").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.BillingCode.ToInt())), "ucd_title", "ucd_key", "-- Select --");
        $("#cas_billing_bic_key3").fillStaticKendoDropDown(getUclDataByType(uclData, @(UclTypes.BillingCode.ToInt())), "ucd_title", "ucd_key", "-- Select --");

        if ($("#disable-partnerPhysician-controls").val() == "1") { // in case of partner physician diablle controls
            //$("#cas_fac_key").KendoDropDownReadOnly();
            $("#cas_phy_key").KendoDropDownReadOnly();
            //$("#cas_cst_key").KendoDropDownReadOnly();
            $("#cas_is_nav_blast_true").attr('disabled', 'disabled');
            $("#cas_is_nav_blast_false").attr('disabled', 'disabled');
        }
        if ($("#disable-physician-controls").val() == "1") { // in case of physician diablle controls
            $("#cas_fac_key").KendoDropDownReadOnly(); // disable facility dropdown.
        }

        $(".eta_validation").change(function () {
            var minutes = $(this).val().toInt();
            if (minutes > 10) {
                $("#cas_eta_errormsg").show();
                previousCaseStatus = $("#cas_cst_key").val();
                $('#cas_cst_key').data('kendoDropDownList').value(caseStatusEnum.Cancelled);
            }
            else {
                $("#cas_eta_errormsg").hide();
                if (previousCaseStatus != null)
                    $('#cas_cst_key').data('kendoDropDownList').value(previousCaseStatus);
            }
        });


        $("#cas_phy_has_technical_issue").off("change").change(function () {
            var tech_issue_date = $("#cas_phy_has_technical_issue").val();
            $("#cas_response_first_atempt").val(tech_issue_date);
            $("#cas_phy_has_technical_issue").change();
        });

        $("#cas_response_first_atempt").off("change").change(function () {
            ShowHideTimeZone($(this));
            $("#cas_metric_video_start_time_est").val($(this).val());
            ShowHideTimeZone($("#cas_metric_video_start_time_est"));
            firstLoginTimeCallBack();

        });

        //$("#metric_cas_callback_responsetime").off("change").change(function () {
        //    $("#cas_callback_response_time_est").val($(this).val());
        //});
        //$("#cas_callback_response_time_est").off("change").change(function () {
        //    $("#metric_cas_callback_responsetime").val($(this).val());
        //});

        //cas_callback_response_time_est  metric_cas_callback_responsetime

        $("#metric_cas_callback_notes").off("change").change(function () {
            $("#cas_callback_notes").val($(this).val());
        });
        $("#cas_callback_notes").off("change").change(function () {
            $("#metric_cas_callback_notes").val($(this).val());
        });

        $("#metric_cas_callback_responsetime").off("change").change(function () {
            $("#cas_callback_response_time_est").val($(this).val());
            metricCallBackResponseTime();
        });
        $("#cas_callback_response_time_est").off("change").change(function () {
            $("#metric_cas_callback_responsetime").val($(this).val());
            CallBackResponseTime();
        });
        function CallBackResponseTime() {
            var value = $.trim($("#cas_callback_response_time_est").val());
            $("#cas_callback_notes").removeAttr("data-is-required");
            $("#cas_callback_notes_label").removeClass("text-danger");
            $("#metric_cas_callback_notes").removeAttr("data-is-required");
            $("#metric_cas_callback_notes_label").removeClass("text-danger");
            if (value != "") {
                var startDate = moment($("#cas_response_ts_notification").val());
                var callback = moment(value);
                var duration = moment.duration(callback.diff(startDate.format("YYYY-MM-DD HH:mm:ss")));
                if (duration.asMinutes() > 15.0) {
                    $("#divModelPopUp").empty().showConfirmPopUpWithYesNo("Confirm",
                        "Your callback is more than 15 minutes from the start time. Is this time correct?",
                        function () {
                            $("#cas_callback_notes").attr("data-is-required", "true");
                            $("#cas_callback_notes_label").addClass("text-danger");
                            $("#metric_cas_callback_notes").attr("data-is-required", "true");
                            $("#metric_cas_callback_notes_label").addClass("text-danger");
                            $("#divModelPopUp").modal("hide");
                        },
                        function () {
                            $("#cas_callback_response_time_est").val("");
                        }
                    );
                    // Changing the Cancel button text to No.
                    $("#divModelPopUp").find(".modal-dialog").find(".modal-footer").find(".cancel").text("No");
                }
            }
        }
        function metricCallBackResponseTime() {
            var value = $.trim($("#metric_cas_callback_responsetime").val());
            $("#metric_cas_callback_notes").removeAttr("data-is-required");
            $("#metric_cas_callback_notes_label").removeClass("text-danger");
            $("#cas_callback_notes").removeAttr("data-is-required");
            $("#cas_callback_notes_label").removeClass("text-danger");
            if (value != "") {
                var startDate = moment($("#cas_response_ts_notification").val());
                var callback = moment(value);
                var duration = moment.duration(callback.diff(startDate.format("YYYY-MM-DD HH:mm:ss")));
                if (duration.asMinutes() > 15.0) {
                    $("#divModelPopUp").empty().showConfirmPopUpWithYesNo("Confirm",
                        "Your callback is more than 15 minutes from the start time. Is this time correct?",
                        function () {
                            $("#metric_cas_callback_notes").attr("data-is-required", "true");
                            $("#metric_cas_callback_notes_label").addClass("text-danger");
                            $("#cas_callback_notes").attr("data-is-required", "true");
                            $("#cas_callback_notes_label").addClass("text-danger");
                            $("#divModelPopUp").modal("hide");
                        },
                        function () {
                            $("#metric_cas_callback_responsetime").val("");
                        }
                    );
                    // Changing the Cancel button text to No.
                    $("#divModelPopUp").find(".modal-dialog").find(".modal-footer").find(".cancel").text("No");
                }
            }
        }
        $("#cas_phy_has_technical_issue").off("change").change(function () {
            if ($(this).prop("checked")) {
                if ($.trim($("#cas_phy_technical_issue_date_est").val()) == "") {
                    var currentDateTime = moment().utcOffset(@Functions.GetTimeZoneOffset(facilityTimeZone)).format("MM/DD/YYYY HH:mm:ss");

                    $("#cas_phy_technical_issue_date_est").val(currentDateTime);
                    $("#cas_response_first_atempt").val(currentDateTime);
                    $("#cas_response_first_atempt").attr("readonly", "true");

                    $("#cas_phy_technical_issue_date_est").change();

                    if ($('#cas_response_first_atempt').data('kendoTimePicker') != undefined && !isAdmin)
                        $('#cas_response_first_atempt').data('kendoTimePicker').readonly();

                }
                else {
                    if ($('#cas_response_first_atempt').data('kendoTimePicker') != undefined && !isAdmin)
                        $('#cas_response_first_atempt').data('kendoTimePicker').readonly();

                }
                $("#div_cas_phy_technical_issue_date_est").show();
                $("#cas_phy_technical_issue_date_est_errormsg").show();
            }
            else {

                $("#cas_metric_notes").removeAttr("data-is-required");
                $("#cas_metric_notes_label").removeClass("text-danger");

                $("#cas_response_first_atempt").removeAttr("readonly");
                $("#div_cas_phy_technical_issue_date_est").hide();
                $("#cas_phy_technical_issue_date_est_errormsg").hide();

                $("#cas_phy_technical_issue_date_est").val("");
                $("#cas_response_first_atempt").val("");

                if ($('#cas_response_first_atempt').data('kendoTimePicker') != undefined && !isAdmin)
                    $('#cas_response_first_atempt').data('kendoTimePicker').readonly(false);
            }
        });

        $("#cas_phy_technical_issue_date_est").change(function () {
            $("#cas_response_first_atempt").val($(this).val());
            firstLoginTimeCallBack();
        });



        function firstLoginTimeCallBack() {
            var value = $.trim($("#cas_response_first_atempt").val());
            $("#cas_metric_notes").removeAttr("data-is-required");
            $("#cas_metric_notes_label").removeClass("text-danger");
            if (value != "")
            {
                var startDate = moment($("#cas_metric_stamp_time_est").val());
                var loginDate = moment(value);
                var duration = moment.duration(loginDate.diff(startDate.format("YYYY-MM-DD HH:mm:ss")));
                if (duration.asMinutes() > 10.0) {
                    $("#divModelPopUp").empty().showConfirmPopUpWithYesNo("Confirm",
                        "Your initial login is more than 10 minutes from the stamp time. Is this time correct?",
                        function () {
                            $("#cas_metric_notes").attr("data-is-required", "true");
                            $("#cas_metric_notes_label").addClass("text-danger");
                            $("#divModelPopUp").modal("hide");
                        },
                        function () {
                            $("#cas_response_first_atempt").val("");
                            $("#cas_phy_technical_issue_date_est").val("");
                        }
                    );
                    // Changing the Cancel button text to No.
                    $("#divModelPopUp").find(".modal-dialog").find(".modal-footer").find(".cancel").text("No");
                }
            }
        }


        // counter up timer -- kendoTimePicker
        $(".timepicker").kendoTimePicker({
            open: function (e) {
                e.preventDefault();
                var currentDateTime = moment().utcOffset(@Functions.GetTimeZoneOffset(facilityTimeZone)).format("MM/DD/YYYY HH:mm:ss");
                if ('@(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()))' != 'True' || '@(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()))' != 'True'  && @((!isReadOnlyCase).ToString().ToLower())) {
                    this.element.first().val(currentDateTime);
                    // handling arrival time in metric and general tab

                    //if (this.element.first().attr("id") == "cas_metric_door_time_est_copy")
                    //    $("#cas_metric_door_time_est").val(currentDateTime);

                    //if (this.element.first().attr("id") == "cas_metric_door_time_est")
                    //    $("#cas_metric_door_time_est_copy").val(currentDateTime);

                    if (this.element.first().attr("id") == "cas_response_first_atempt") {
                        $("#cas_metric_video_start_time_est").val(currentDateTime);
                        firstLoginTimeCallBack();
                    }

                    if (this.element.first().attr("id") == "cas_metric_needle_time_est") {

                        ValidateTPANotesandReason($('#cas_metric_needle_time_est').val(), $("#cas_metric_door_time_est").val());
                    }
                    if (this.element.first().attr("id") == "cas_metric_door_time_est") {
                        ValidateTPANotesandReason($('#cas_metric_needle_time_est').val(), $("#cas_metric_door_time_est").val());
                    }
                     if (this.element.first().attr("id") == "cas_callback_response_time_est") {
                         $("#metric_cas_callback_responsetime").val(this.element.first().val());
                         CallBackResponseTime();
                    }
                    if (this.element.first().attr("id") == "metric_cas_callback_responsetime") {
                        $("#cas_callback_response_time_est").val(this.element.first().val());
                        metricCallBackResponseTime();
                    }

                    if (this.element.first().attr("id") == "cas_phy_technical_issue_date_est") {
                        $("#cas_response_first_atempt").val(currentDateTime);
                        firstLoginTimeCallBack();
                    }
                }
                if (this.element.first().attr("name") == "cas_billing_date_of_consult") {
                    $("[name = cas_billing_date_of_consult]").val(this.element.first().val());
                    $("#general_cas_billing_date_of_consult").val(this.element.first().val());
                }

                if (this.element.first().attr("id") == "general_cas_billing_date_of_consult") {
                    $("[name = cas_billing_date_of_consult]").val(this.element.first().val());
                }

                var timePicker = this.element.first();
                ShowHideTimeZone(timePicker);

                if (this.element.first().attr("id") == "cas_response_first_atempt") {
                    ShowHideTimeZone($("#cas_metric_video_start_time_est"));
                }

            },
            close: function (e) {
                e.preventDefault(); //prevent popup closing
            }
        });


        $(".timer-container").find("input.timepicker").bind("change", function () {

            ShowHideTimeZone($(this));

        });

        $(".timepicker").kendoMaskedTextBox({
            mask:  "00/00/0000 00:00:00"
        });


        $("#cas_metric_door_time_est").off("change").change(function () {
            ShowHideTimeZone($(this));
              ValidateTPANotesandReason($('#cas_metric_needle_time_est').val(), $("#cas_metric_door_time_est").val());
        });
        $('#cas_metric_needle_time_est').off("change").change(function () {
                 ValidateTPANotesandReason($('#cas_metric_needle_time_est').val(), $("#cas_metric_door_time_est").val());
        });

        function ValidateTPANotesandReason(datetime1, datetime2) {

            if ($('input:radio[name=cas_metric_tpa_consult]:checked').val() == "true") {

                if (getDifferenceInMinutes($('#cas_metric_needle_time_est').val(), $("#cas_metric_door_time_est").val()) > 45) {
                    $('#cas_metric_tpaDelay_key_label').addClass('text-danger')
                    $('#cas_metric_tpaDelayNotes_key_label').addClass('text-danger')
                }
                else {
                    $('#cas_metric_tpaDelay_key_label').removeClass('text-danger')
                    $('#cas_metric_tpaDelayNotes_key_label').removeClass('text-danger')
                }
            }
        }


        $(".datepicker").kendoDatePicker({
            open: function (e) {
                onDatePickerOpen(e);
            },
            disableDates: function (date) {
                if (@(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()).ToString().ToLower()) || @(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()).ToString().ToLower()) || @(isReadOnlyCase.ToString().ToLower())) {
                    return true;
                }
            }
        });

        if ($("#elapsed-time").val() != "") {
            $("#custom").html($("#elapsed-time").val());
            $("#elapsedTimeArrival").show();
            var t = $("#cas_cst_key").val();
            if ($("#show-red").val() == "1" && @Model.cas_cst_key != @CaseStatus.Accepted.ToInt())
                $("#custom").addClass("elapsed-time");
        }
        else {

            var door_time = $.trim($("#cas_metric_stamp_time_utc").val());
            if (door_time != "") {
                upTime(door_time, $("#elapsedTimeArrival"));
            }
        }


        $("#lnkCaseClose").off("click").click(function (e) {
            e.preventDefault();
            clearAutoSaveInterval();
            loadPageAsync("@Url.Action("Index")");
        });

        $("#btnSave,#btnSaveSend").off("click").click(function () {
            if ($('#cas_cst_key').val() == "" || $('#cas_cst_key').val() == null || $('#cas_cst_key').val() == undefined) {
                $('#case_status_key_val').text('Status is required.')
                return false;
            } else {
                $('#case_status_key_val').text('');
            }
            savetypeofcorrespondense();
            $(".error_msg").hide();
            if ($(this).attr("id") === "btnSaveSend") {
                $("#hdnSaveAndSend").val("1");
            }
            else {
                $("#hdnSaveAndSend").val("0");
            }

            var caseId = $("#createForm").find("#cas_key").val();
            var isCompleted = $("#cas_cst_key").val();
            if (caseId != "0" && isCompleted == @CaseStatus.Complete.ToInt()) {
                if (@isReadOnlyCase.ToString().ToLower()) {
                    $("#activetab").val('#metricResponse');
                }
                performCaseCompletion("0");
                return;
            }
            if (typeof (caseTemplateBeforeSubmit) != "undefined") {
                caseTemplateBeforeSubmit();
            }
            if (!validateGeneralTabForm(false, false, false)) {
                return false;
            }
            // check tpa fields in physician metrics tab, and reset hidden field values.
            resetTpaCandidatehiddenFields();
            GetCaseReviewers();
            $("#RedirectPage").val("0");
            var currentTab = $("#menuTabs .active ").attr("href");
            $("#activetab").val(currentTab);
            clearAutoSaveInterval();

             if (@isReadOnlyCase.ToString().ToLower()) {
                 readOnlyAllFields();
            }

            //checkBillingRevisedCode();

            // temporary disabling it, to exclude it from production deployment
            submitCaseChanges(); // temporary direct call
            //if (checkCaseAlreadyUpdated) {
            //    var response = checkIfCaseUpdatedBefore();
            //    if (!response.AlreadyUpdated) {
            //        submitCaseChanges();
            //    }
            //    else {
            //        $("#divModelPopUp").empty().showConfirmPopUpWithYesNo("Case already updated",
            //            "<span>This case has already been updated. Do you wish to override?</span>",
            //            function () {
            //                checkCaseAlreadyUpdated = false;
            //                submitCaseChanges();
            //            }, function () {
            //                checkCaseAlreadyUpdated = true;
            //                $("#divModelPopUp").modal("hide");
            //                loadPageAsync('/Case/Index');
            //            });
            //    }
            //}
        });

        $("#btnSaveClose").off("click").click(function () {
            savetypeofcorrespondense();
            $(".error_msg").hide();
            var isCompleted = $("#cas_cst_key").val();
            if (isCompleted == @CaseStatus.Complete.ToInt()) {
                performCaseCompletion("1");
                return;
            }

            if ($('#cas_cst_key').val() == "" || $('#cas_cst_key').val() == null || $('#cas_cst_key').val() == undefined) {
                $('#case_status_key_val').text('Status is required.')
                return false;
            } else {
                $('#case_status_key_val').text('');
            }

            if (typeof (caseTemplateBeforeSubmit) != "undefined") {
                caseTemplateBeforeSubmit();
            }
            if (validateGeneralTabForm(true, false, false) && validateMetricsRequiredFields(false) /*&& validatepremorbidFields(false)*/ && validateBillingRequiredFields(false) && validateTemplateTabRequiredFields($("#TemplateEntityType").val()@*@Model.TemplateEntityType.ToInt()*@, false)) {
                // check tpa fields in physician metrics tab, and reset hidden field values.
                resetTpaCandidatehiddenFields();
                GetCaseReviewers();
                $("#RedirectPage").val("1");
                clearAutoSaveInterval();
                submitCaseChanges();
            }
            else {
                if (!(isCompleted == @CaseStatus.Complete.ToInt())) {

                    if (@isReadOnlyCase.ToString().ToLower()) {
                        readOnlyAllFields();
                    }
                    saveFormData();
                }

            }
        });

        function ValidateAllTabs() {
            $(".error_msg").hide();

            var generalTab = true;
            var metricTab = true;
            var templateTab = true;
            var billingTab = true;
            //var premorbidTab = true;
            var tabToShow = "";


         if (!validateBillingRequiredFields(true)) {

             tabToShow = "#billingTabLink";
                billingTab = false;
            }

            if (!validateTemplateTabRequiredFields($("#TemplateEntityType").val() @*@Model.TemplateEntityType.ToInt()*@, true)) {

               tabToShow =  "#templatesTabLink";
                templateTab= false;
            }

           if (!validateMetricsRequiredFields(true)) {

               tabToShow = "#metricTabLink";

               metricTab = false;
           }

           if (!validateGeneralTabForm(true, true, false)) {

               tabToShow = "#generalTABLink";
               generalTab = false;
            }
            //if (!validatepremorbidFields(true)) {
            //    tabToShow = "#premorbidTabLink";
            //    premorbidTab = false;
            //}


            if (tabToShow !== null && tabToShow !== "") {

                $(tabToShow).tab("show");
            }


            if (tabToShow == "#billingTabLink") {
                if (casStatus !== '140') {
                    $("#btnCompleteCase").show();
                }

            }

            else {
                $("#btnCompleteCase").hide();
                $('#btnCancelCase').hide();
            }

           return  (generalTab && metricTab && templateTab && billingTab)
        }

        $("#btnCompleteCase").off("click").click(function () {
            savetypeofcorrespondense();

            window.showErrorsOnTabClick = true;

            if (!ValidateAllTabs()) {
                var cas_type = $('#cas_ctp_key').val();
                if (cas_type == @CaseType.StatConsult.ToInt() || cas_type == @CaseType.TransferAlert.ToInt() || cas_type == @CaseType.StrokeAlert.ToInt()) {
                    var currentTab = $("#menuTabs .active ").attr("href");
                    if (currentTab == "#templates") {
                        $("#btnDownloadTemplate").show();
                    }
                }
                return;
            }
            performCaseCompletion("1");

            window.showErrorsOnTabClick = false;
            @*// call rate function
            var physcian = "";
            var startDate = "@(new DateTime(currentDate.Year, currentDate.Month, currentDate.Day).ToString())";
            var endDate = "@(new DateTime(currentDate.Year, currentDate.Month, currentDate.Day).ToString())";
            GetTodayBill(startDate, endDate, physcian);
            // end*@

        });
        $("#btnCancelCase").off("click").click(function () {
            $('#lblPhyCancel').val('found');
            var cas_id = "@Model.cas_ctp_key";
            if (cas_id === '9')
                ShowCancelMessage();
            else {
                $('#toolTipCancel').show();
                $('#popupModelCaseCancel').modal({
                    'show': true,
                    backdrop: 'static',
                    keyboard: false
                });
            }
                //CancelCase();
        });
        function ShowCancelMessage() {

            $("#divModelPopUp").empty().showAlertPopUp("Confirm",
                "You cannot cancel a stroke alert case. Please contact your Navigator!",
                function () {
                    $("#divModelPopUp").modal("hide");
                }
            );
        }
        $("#review-initiated-wrap .form-check-inline input[type='radio']").off("click").click(function () {
            if ($(this).val() == 1) {
                $("#cas_response_case_number").prop('readonly', false);
            }
        });
        //$("#btnCopy").off("click").click(copyCase);
        document.getElementById('btnCopy').addEventListener('click', function () {
            copyCase();
        });
        document.getElementById('btnCopyOK').addEventListener('click', function () {
            var textis = $('#txtAreaCopy').val();
            console.log('value is : ' + $('#txtAreaCopy').val());
            var createdId = "txtAreaJS";
            var textarea = document.createElement("textarea");
            textarea.id = createdId;
            // Place in top-left corner of screen regardless of scroll position.
            textarea.style.position = 'fixed';
            textarea.style.top = 0;
            textarea.style.left = 0;

            // Ensure it has a small width and height. Setting to 1px / 1em
            // doesn't work as this gives a negative w/h on some browsers.
            textarea.style.width = '1px';
            textarea.style.height = '1px';

            // We don't need padding, reducing the size if it does flash render.
            textarea.style.padding = 0;

            // Clean up any borders.
            textarea.style.border = 'none';
            textarea.style.outline = 'none';
            textarea.style.boxShadow = 'none';

            // Avoid flash of white box if rendered for any reason.
            textarea.style.background = 'transparent';
            document.querySelector("body").appendChild(textarea);
            var _createdId = document.getElementById(createdId);
            _createdId.value = textis;
            _createdId.select();
            //$('#txtAreaCopy').select();
            try {
                var status = document.execCommand('copy');
                if (!status) {
                    logToConsole("Cannot copy text");
                } else {
                    logToConsole("The text is now on the clipboard");
                    document.body.removeChild(_createdId);
                }
            } catch (err) {
                logToConsole('Unable to copy.');
            }
        });

        if ($("#hdn-cas-eta").val() != null && $("#hdn-cas-eta").val() != "") {
            $("#case-eta").prop("checked", true);
            $("#cas_eta").show();
        }

        generateStatusFilter()
        //$('#popover').showPopover('#divContentArea'); // #popover-container
        //Remove popup functionality and currently showing popup modal in case when we click on H icone.
        //$('#popover-facility').showPopover('#divContentArea'); // #popover-container-facility'


        $('#popover, #popover-facility').click(function () {
            $('#tooltip').show();
            $('#popupModelFacility').modal({
                'show': true,
                backdrop: 'static',
                keyboard: false
                });
        });



        // code to prevent form submit on enter
        $("input[type=text]").keyup(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
            }
        });
        // code to hide and show "tPA early order" message if all the options are selected
        // to "No" form "LB2S2 Criteria" section in metrics tab.
        $('#lb2s2-contianer :radio').on("change", function () {
            var Is_allSelectedTo_No = true;
            var totalLb2s2Options = 5;
            var count = 0;
            $('#lb2s2-contianer :radio:checked').each(function () {
                if ($(this).val() != "0") {
                    Is_allSelectedTo_No = false;
                    return;
                }
                else {
                    count++;
                }
            });
            if (Is_allSelectedTo_No && count == totalLb2s2Options) {
                $("#early-tpa-order-indicator").removeClass("d-none");
            } else {
                $("#early-tpa-order-indicator").addClass("d-none");
            }
        });
        // Metric tab - Neuro Interventional controls
        $("#cas_metric_is_lastwell_unknown").on("click", function () {
            if (this.checked == true) {
                $("#cas_metric_lastwell_date_est").val("");
                $('#cas_metric_lastwell_date_est').data('kendoTimePicker').enable(false);
            }
            else {
                $("#cas_metric_lastwell_date_est").val("");
                $('#cas_metric_lastwell_date_est').data('kendoTimePicker').enable(true);
            }
        });
        if ($("#hdn-cas-is-lastwellknown").val().toLowerCase() == "true") {
            $("#cas_metric_lastwell_date_est").val("");
            $('#cas_metric_lastwell_date_est').data('kendoTimePicker').enable(false);
        }
        $("input[name='cas_metric_is_neuro_interventional']").on("change", function () {
            toggleNeurointerventionControl($(this).val());
        });
        if (showFacilityTime.To != undefined)
            window.clearTimeout(showFacilityTime.To);

        showFacilityTime(@Functions.GetTimeZoneOffset(facilityTimeZone));
        // If user is facility admin, user not allow to make changes in case.
        if (@(User.IsInRole(UserRoles.FacilityAdmin.ToDescription()).ToString().ToLower().ToString().ToLower()) || @(User.IsInRole(UserRoles.FacilityPhysician.ToDescription()).ToString().ToLower().ToString().ToLower())  @*|| @(User.IsInRole(UserRoles.RegionalMedicalDirector.ToDescription()).ToString().ToLower().ToString().ToLower())*@
            || @(isReadOnlyCase.ToString().ToLower())) {
            window.setTimeout(function () {
                disableAllControls();
            }, 400);

        }
        else {
            //if (enableAutoSave.ToString().ToLower()) {
            if (AutoSaveBool) {
                autoSaveCase();
            }
        }
        @*if (@(User.IsInRole(UserRoles.RegionalMedicalDirector.ToDescription()).ToString().ToLower().ToString().ToLower()) ) {
            disableAllControls();
            enableReviewTabElements();
        }*@
    });
    $("input[name='cas_billing_physician_blast']").on("change", function (e) {
        if ($(this).val() == "true") {
            var currentDateTime = moment().utcOffset(@Functions.GetTimeZoneOffset(facilityTimeZone)).format("MM/DD/YYYY HH:mm:ss");
            var currentDateTime_est = moment().utcOffset(@Functions.GetTimeZoneOffset(Settings.DefaultTimeZone)).format("MM/DD/YYYY HH:mm:ss");
            $("#cas_billing_physician_blast_date_est").val(currentDateTime_est);
            $("#cas_billing_physician_blast_date").val(currentDateTime);
        }
        else {
            $("#cas_billing_physician_blast_date").val("");
            $("#cas_billing_physician_blast_date_est").val("");
        }
    });
    // case template scripts
    $('textarea.mechanism_stroke_text').on('keyup', function () {
        var maxlen = $(this).attr('maxlength');
        var length = $(this).val().length;
        if (length > maxlen - 1) {
            $(this).siblings("span").text('max length ' + maxlen + ' characters only.')
        }
        else {
            $(this).siblings("span").text('');
        }
    });

    $(".track_change").off("change").change(function () {
        if (typeof (caseTemplateBeforeSubmit) != "undefined") {
            caseTemplateBeforeSubmit();
        }
    });


    var responsestringGenerateTemplate = '';
    var showeditorresponseGenerateTemplate = false;

    $(document).ready(function () {
         var url = "@Url.Action("GenerateCaseTemplate", "Case")"; //"Url.Action("GenerateCaseReviewTemplate", "Case")";
         var data = $("#createForm").serialize();

         $.post(url, data, function (response) {
                if (response.success) {
                    responsestringGenerateTemplate = response.data;
                    showeditorresponseGenerateTemplate = response.showEditor;
                }
            });
    })



    $("#btnDownloadTemplate").off("click").click(function () {
        ////added by ahmad 08-09-2020
        var criticalcareTimeDiv = true;
        var criticalCar = $("#divcriticalCare").find("input[type=radio]:checked").val();
        var criticalCarProvided = $("#criticalcareTimeDiv").find("input[type=number]").val();
        if (criticalCar == "true") {
            if (criticalCarProvided == "" || criticalCarProvided == null || criticalCarProvided == undefined) {
                $("#criticalcareTimeDiv").find(".error_msg").show();
                criticalcareTimeDiv = false;
            }
        }


////ended by ahmad
        if (criticalcareTimeDiv) {
            $("#criticalcareTimeDiv").find(".error_msg").hide();

        if ($(this).val() == 'Generate Template') {
            GetCaseReviewers();
            if (!@userMedicalStaff.ToString().ToLower())
            {
                saveFormData();
            }
            caseTemplateBeforeSubmit();
            var url = "@Url.Action("GenerateCaseTemplate", "Case")";
            var data = $("#createForm").serialize();
            if (@userMedicalStaff.ToString().ToLower()) {

                $.post(url, data, function (response) {
                    if (response.success) {
                        if (showeditorresponseGenerateTemplate) {
                            $("#cas_template_html").val(responsestringGenerateTemplate);
                            showCKEditor("cas_template_html");
                            $("#caseTemplateModel").modal("show");
                            if (browserName == "Edge" || browserName == "FireFox") {
                                copyTemplateAlt("#btnSaveAndCopyTemplate", false);
                            }
                        }
                        else {
                            $("#btnCancelTemplatePreview").show();
                            $("#btnOKTemplatePreview").val("Copy");
                            $("#caseTemplateReviewData").html(response.data);
                            $("#caseTemplatePreviewModal").modal("show");
                        }
                    }
                });

            }
            else {


                $.post(url, data, function (response) {
                    if (response.success) {
                        if (response.showEditor) {
                            $("#cas_template_html").val(response.data);
                            showCKEditor("cas_template_html");
                            $("#caseTemplateModel").modal("show");
                            if (browserName == "Edge" || browserName == "FireFox") {
                                copyTemplateAlt("#btnSaveAndCopyTemplate", false);
                            }
                        }
                        else {
                            $("#btnCancelTemplatePreview").show();
                            $("#btnOKTemplatePreview").val("Copy");
                            $("#caseTemplateReviewData").html(response.data);
                            $("#caseTemplatePreviewModal").modal("show");
                        }
                    }
                });
            }
        }
        else if ($(this).val() == 'Load Template') {
            var caseKey = $.trim($("#createForm").find("#cas_key").val()).toInt();@* @Model.cas_key;*@
            var templateEntityKey = @Model.TemplateEntityType.ToInt();
            var url = '/Case/LoadCaseTemplate?caseKey=' + caseKey + '&templateEntity=' + templateEntityKey;
            $.post(url, null, function (response) {
                if (response.success) {
                    if (response.showEditor) {
                        // code for wsiwyg popup
                        $("#cas_template_html").val(response.data);
                        showCKEditor("cas_template_html");
                        $("#caseTemplateModel").modal("show");
                    }
                    else {
                        $("#btnCancelTemplatePreview").show();
                        $("#btnOKTemplatePreview").val("Copy");
                        $("#caseTemplateReviewData").html(response.data);
                        $("#caseTemplatePreviewModal").modal("show");
                    }
                }
            });
            }
        }
        $("#btnSaveTemplate,#btnSaveAndCloseTemplate").off("click").click(function () {
            var isSaveAndClose = $(this).attr("id") == "btnSaveAndCloseTemplate" ? true : false;
            saveTemplateData(false).done(function (response) {

                window.setTimeout(function () {

                    if (response.success) {

                        if (browserName != "Edge" || browserName != "FireFox") {
                            copyHtmlToClipboard(CKEDITOR.instances["cas_template_html"].getData());
                        }

                        if (!isSaveAndClose) {
                            $("#cas_template_html").val(CKEDITOR.instances["cas_template_html"].getData());
                            showCKEditor("cas_template_html");
                            $("#caseTemplateModel").find("#validationSummary").empty().showBSSuccessAlert("", "Template changes saved successfully");
                        }
                        else {
                            $("#caseTemplateModel").modal("hide");
                        }
                    }
                    else {
                        $("#caseTemplateModel").find("#validationSummary").empty().showBSDangerAlert("", response.data);
                    }
                }, 100);
            })
        });
        $("#btnCancelTemplatePopup").off("click").click(function () {
            var isDirty = CKEDITOR.instances["cas_template_html"].checkDirty();
            if (isDirty) {
                $("#divModelPopUp").empty().showConfirmPopUp("Confirm",
                    "Are you sure you want to close this template without saving?",
                    function () {
                        $("#caseTemplateModel").modal("hide");
                        $("#divModelPopUp").modal("hide");
                    });
            }
            else {
                $("#caseTemplateModel").modal("hide");
                $("#divModelPopUp").modal("hide");
            }
        });
        $(".btnCloseTemplatePreview").off("click").click(function () {
            $("#caseTemplateModel").modal("hide");
            $("#divModelPopUp").modal("hide");
            $("#caseTemplatePreviewModal").modal("hide");
        });
        $("#btnSaveAndCopyTemplate").off("click").click(function () {
            $("#editorContentHolder").html(CKEDITOR.instances["cas_template_html"].getData());
            saveTemplateData(true).done(function (response) {
                if (response.success) {
                    $("#btnDownloadTemplate").val("Load Template");
                    $("#btnCancelTemplatePreview").hide();
                    $("#btnOKTemplatePreview").val("OK");
                    if (browserName != "Edge" || browserName != "FireFox") {
                        copyHtmlToClipboard(CKEDITOR.instances["cas_template_html"].getData());
                    }
                    $("#caseTemplateReviewData").html(CKEDITOR.instances["cas_template_html"].getData());
                    $("#caseTemplateModel").modal("hide");
                    $("#caseTemplatePreviewModal").modal("show");
                    $("#caseTemplateReviewData").find(".datetime").show();
                }
                else {
                    $("#caseTemplateModel").find("#validationSummary").empty().showBSDangerAlert("", response.data);
                }
            });
        });
        $("#btnOKTemplatePreview").off("click").click(function () {
            if ($("#btnOKTemplatePreview").val().toLowerCase() == "copy") {
                if (browserName == "Edge") {
                    copyTemplateAlt("#btnCopyTemplatePreview", true);
                }
                else {
                    copyHtmlToClipboard($("#caseTemplateReviewData").html());
                }
                alert('Template has been copied to clipboard.');
            }
            else {
                $("#caseTemplateModel").modal("hide");
                $("#divModelPopUp").modal("hide");
                $("#caseTemplatePreviewModal").modal("hide");
            }
        });
    });



    function copyTemplateAlt(targetElement, doTriggerClick) {
        try {
            clipboard.destroy();
        } catch (e) { }

        clipboard = new ClipboardJS(targetElement);
        clipboard.on('success', function (e) {
            logToConsole('text copied to clipboard');
            e.clearSelection();
        });
        clipboard.on('error', function (e) {
            logToConsole(e);
            e.clearSelection();
        });

        if (doTriggerClick)
            $(targetElement).trigger("click");
    }
    function performCaseCompletion(redirectedPage) {
        $(".error_msg").hide();
        if (typeof (caseTemplateBeforeSubmit) != "undefined") {
            caseTemplateBeforeSubmit();
        }
        if (validateGeneralTabForm(true, true, false) && validateMetricsRequiredFields(true) /*&& validatepremorbidFields(true)*/ && validateBillingRequiredFields(true) && validateTemplateTabRequiredFields($("#TemplateEntityType").val() @*@Model.TemplateEntityType.ToInt()*@, true)) {
            // check tpa fields in physician metrics tab, and reset hidden field values.
            resetTpaCandidatehiddenFields();
            GetCaseReviewers();
            $("#RedirectPage").val(redirectedPage);
            if ('@(User.IsInRole(UserRoles.Administrator.ToDescription()))' == 'True' || '@(User.IsInRole(UserRoles.SuperAdmin.ToDescription()))' == 'True') {
                var completed = @CaseStatus.Complete.ToInt()
                $('#cas_cst_key').data('kendoDropDownList').value(completed);
            }
            else {
                $("[name=IsCaseCompleted]").val("True");
            }
            if (@isReadOnlyCase.ToString().ToLower()) {
                readOnlyAllFields();
            }
            $("#createForm").submit();
        }
        else {
            $("#mainContentArea").find("#validationSummary").empty().showBSDangerAlert("","Please fill all required fields in all tabs before setting this case as completed.");
        }
    }
    function saveTemplateData(bIsFinal) {
        var deffer = $.Deferred();
        var url = "@Url.Action("SaveTemplate")";
        var postData = {
            cas_key: $("#createForm").find("#cas_key").val(),
            entityKey: $("#TemplateEntityType").val(),
            is_finalized: bIsFinal,
            ptemplateData: Base64.encode(CKEDITOR.instances["cas_template_html"].getData())
        };
        $.post(url, postData, function (data) {
             return deffer.resolve(data);
        });
        return deffer.promise();
    }
    function setQuestionResponse() {
        var result = [];
        $(".nihss select").each(function () {
            var selectedVal = $.trim($(this).find("option:selected").val());
            if (selectedVal != "") {
                result.push(selectedVal);
            }
        });
        $("#SelectedNIHSQuestionResponse").val(result.join(","));
    }
    function setTemplateFieldData(containerClass, controlId) {
        var list = [];
        $(containerClass + " input:checked").each(function () {
            list.push($(this).val())
        })
        $(controlId).val(list.join(","));
    }
    function calculateScore(scoreContainer) {
        var totalScore = 0;
        var index = 0;
        $(".nihss select").each(function () {
            var selectedText = $(this).find("option:selected").text();
            index = selectedText.indexOf("+");
            if (index > -1) {
                totalScore += $.trim(selectedText.substring(index).replace("+", "")).toInt();
            }
        });

        $("#divTotalScore").html((totalScore > 0 ? totalScore.toString() : "0"));
        $(scoreContainer).val(totalScore);
        $("#nihssScoreSpan").val(totalScore);
        setQuestionResponse();
        return totalScore;
    }

    function submitCaseChanges() {
        var previousStatus = @Model.cas_cst_key;
        var currentStatus = $.trim($("#cas_cst_key").val()).toInt();
        if (currentStatus == caseStatusEnum.Cancelled) {
            //previousStatus != currentStatus &&
           $('#toolTipCancel').show();
            $('#popupModelCaseCancel').modal({
                'show': true,
                backdrop: 'static',
                keyboard: false
            });
            @*$("#divModelPopUp").empty().showConfirmPopUpWithYesNo("Cancel Case",
                "<span>Would you like to save this case as cancelled?</span>",
                function () {
                     if (@isReadOnlyCase.ToString().ToLower()) {
                        readOnlyAllFields();
                    }
                    $("#createForm").submit();
                }, function () {
                    $("#divModelPopUp").modal("hide");
                });*@
        }
        else {
            if (@isReadOnlyCase.ToString().ToLower()) {
                        readOnlyAllFields();

            }
           // checkBillingRevisedCode();

            $("#createForm").submit();
        }
    }
       $('#SaveCaseCancel').click(function () {
        var checkPhy = $('#lblPhyCancel').val();
        var cancelType = $('#cas_cancelled_type').val();
           var cancelText = $('#cas_cancelled_text').val();
           var caseKey = $.trim($("#createForm").find("#cas_key").val()).toInt();
        if (checkPhy === 'found') {
            $.ajax({
                type: 'post',
                url: '/Case/CancelCase?casKey=' + caseKey @*@Model.cas_key*@ + '&caseType=' + cancelType + '&caseText=' + cancelText,
                success: function (data) {
                    if (data.success) {
                        $('#popupModelCaseCancel').modal("hide");
                        loadPageAsync('@Url.Action("index", "case")')
                        //$("#createForm").submit();
                    }
                }
            });
        }
        else {
            $('#lblPhyCancel').val('');
            $('#popupModelCaseCancel').modal("hide");
            $("#createForm").submit();
        }

        });


        $('.cas_cancelled_list').change(function () {
            var valueText = $("#cas_cancelled_list :selected").text();
            $('#cas_cancelled_type').val(valueText);
        });


    function nihssScoreValidatoin(scoreContainer) {
        var result = true;
        if ($(scoreContainer).is(":checked") == false) {
            $(".nihss select").each(function (item) {
                var selectedtext = $(this).find("option:selected").text();
                var itemid = $(this)[0].id;
                if (selectedtext == "--Select--") {
                    var idd = "#" + itemid + "-error";
                    $(idd).show();
                    result = false;
                }
                else {
                    var idd = "#" + itemid + "-error";
                    $(idd).hide();
                }
            });
        }
        return result;
    }
    function removeAllDropdownError(scoreContainer) {
        var result = true;
        $(".nihss select").each(function (item) {
            var selectedtext = $(this).find("option:selected").text();
            var itemid = $(this)[0].id;
            var idd = "#" + itemid + "-error";
            $(idd).hide();
        });
        return result;
    }
    function disableAllControls() {
        $("#case-complete-label").disable();

        $('#btnCompleteCase').hide();
        $('#btnCancelCase').hide();

        $('#createForm input').disable();
        $('#createForm textarea').disable();
        $('#createForm select').disable();
        // Dropdown lists
        $("#cas_caller_source_key").KendoDropDownDisable();
        $("#cas_ctp_key").KendoDropDownDisable();
        $("#cas_phy_key").KendoDropDownDisable();
        $("#cas_cst_key").KendoDropDownDisable();
        $("#cas_fac_key").KendoDropDownDisable();
        $("#general_cas_identification_type").KendoDropDownDisable();
        if (!@userFinance.ToString().ToLower())
        {
            $("#billing_cas_identification_type").KendoDropDownDisable();
        }
        $("#cas_metric_tpaDelay_key").KendoDropDownDisable();
        $("#cas_metric_non_tpa_reason_key").KendoDropDownDisable();
        $("#cas_billing_lod_key").KendoDropDownDisable();
        $("#cas_billing_bic_key").KendoDropDownDisable();
        $("#cas_billing_bic_key2").KendoDropDownDisable();
        $("#cas_cart_location_key").KendoDropDownDisable();
        $("#cas_phy").KendoDropDownDisable();
        $("#cas_callback_response_by").KendoDropDownDisable();
        // DatePicker
        $('#general_cas_dob').data('kendoDatePicker').enable(false);
        if ($("#cas_ctp_key").val() == '@CaseType.StrokeAlert.ToInt()') {
            $(".date_consult_datepicker [name='cas_billing_date_of_consult']").data('kendoDatePicker').enable(false);
        }
        $('#billing_cas_dob').data('kendoDatePicker').enable(false);
        $('#billing_followUp_date').data('kendoDatePicker').enable(false);
        $('#cas_response_date_consult').data('kendoDatePicker').enable(false);
        // Buttons
        $('#btnCompleteCase').disable();
        $('#btnCancelCase').disable();

        $('#btnDownloadTemplate').disable();
        if ($('#btnDownloadTemplate').val() == 'Load Template')
            $('#btnDownloadTemplate').enable();
        $('#btnOKTemplatePreview').enable();
        $('#btnCancelTemplatePreview').enable();
        $('#btnSave').disable();
        $('#btnSaveClose').disable();
        if (@userFacilityPhysician.ToString().ToLower() != true) {// added by Nabeel to disable button if user is Facility Physician
            $("#btnCopy").enable();

        }
        if (!@userMedicalStaff.ToString().ToLower()) {
            $('#btnExportWord').disable();
        }
        if ($('#btnExportWord').val() == 'Load Review Template')
            $('#btnExportWord').enable();
         ///TCARE-547



        if (@enableControlsInReadOnly.ToString().ToLower()) {

            enableReviewTabElements();
        }
        else
        {
            // Multiselect
            $("#casereviewers").multiselect("disable");
            // DatePicker
             $('#cas_response_date_consult').data('kendoDatePicker').enable(false);
            // Other Fields
            $("#metricResponse #cas_response_case_research,#metricResponse  #cas_response_case_qps_assessment,#metricResponse #cas_response_case_facility_request_reviewed,#metricResponse #response_case_qps_reviewed,#metricResponse #cas_qps_assigned").disable();

            //Disabled RCA Initiate and Countermeasuer(s) button and its related fields
            $(".rca input").disable()
        }

        @*if (@userRegionalMD.ToString().ToLower()) {
            enableReviewTabElements();
        }*@

    $('.k-i-clock').parent().bind('keyup keydown keypress', function (evt) { return false; });
        $(".k-i-clock").parent().attr("style", "background-color:#e9ecef; pointer-events:none;");
        if (@userQPS.ToString().ToLower()) {
            enableReviewTabElements();
            enableReviewersBox();
        }

        if (@userFinance.ToString().ToLower()) {
            $('#btnSave').enable();
            $('#btnSaveClose').enable();
            $('#btnExportWord').enable();

            $('#billing input').enable();
            $('#billing textarea').enable();
            $('#billing select').enable();

            $('#billing_cas_dob').data('kendoDatePicker').enable();
            $('#billing_followUp_date').data('kendoDatePicker').enable();
            $(".date_consult_datepicker [name='cas_billing_date_of_consult']").data('kendoDatePicker').enable();
        }

        if (@userQualityDirector.ToString().ToLower()) {
            enableReviewTabElements();
            enableReviewersBox();
        }
        if (@userVPQuality.ToString().ToLower()) {
            enableReviewTabElements();
            enableReviewersBox();
        }
    }

    function enableReviewTabElements() {
        var casStatus = "@cas_status";
        if (casStatus === "140") {
            return;
        }
        else {
            $(`#metricResponse #cas_response_case_research,
               #metricResponse #cas_response_case_qps_assessment,
               #metricResponse #cas_response_case_facility_request_reviewed,
               #metricResponse #response_case_qps_reviewed,
               #metricResponse #cas_qps_assigned,
               #metricResponse #cas_operations_review,
               #metricResponse #cas_review_facility_communication,
               #metricResponse #cas_review_internal_notes,
               #metricResponse #operations_review_completed,
                #metricResponse #contactdatatable .readonly,

               #cas_response_date_consult`).enable().removeAttr("readonly");

    $('#metricResponse #contactdatatable .k-i-clock').parent().unbind('keyup keydown keypress', function (evt) { return false; });
        $('#metricResponse #contactdatatable .k-i-clock').parent().removeAttr("style", "background-color:#e9ecef; pointer-events:none;");



            $('#divReviewers input').enable().removeAttr("readonly");;
            //$('#cas_response_date_consult').kendoDatePicker({

            //    close: function (e) {

            //        $("#cas_billing_date_of_consult").val((e.sender.element.val()));
            //    }
            //});

            //Enabled RCA Initiate and Countermeasuer(s) button and its related fields
            $(".rca input").enable().removeAttr("readonly");
            $("#dynamictable input").enable().removeAttr("readonly");
            $("#dynamictable textarea").enable().removeAttr("readonly");
            var currentTab = $("#menuTabs .active").attr("href");
            if ((currentTab == 'metricResponse' || currentTab == '#metricResponse') && @userFacilityAdmin.ToString().ToLower() != true && @userFacilityPhysician.ToString().ToLower() != true) {
                $('#btnSave').enable();
                $('#btnSaveClose').enable();
                $('#btnExportWord').enable();
            }
            else {
                $('#btnSave').disable();
                $('#btnSaveClose').disable();
                $('#btnExportWord').disable();
            }
        }
    }

    function enableReviewersBox() {
         var casStatus = "@cas_status";
        if (casStatus === "140") {
            return;
        }
        else {
            $(`#metricResponse #casereviewers`).disable().attr("readonly");
            $(`#metricResponse #casereviewers`).enable();
            $(`#metricResponse #cas_response_reviewer`).enable();
            $(`#metricResponse #divReviewers button`).enable();

        }
    }

    function disableReviewTabElements() {
        $(`#metricResponse #cas_response_case_research,
               #metricResponse #cas_response_case_qps_assessment,
               #metricResponse #cas_response_case_facility_request_reviewed,
               #metricResponse #response_case_qps_reviewed,
               #metricResponse #cas_qps_assigned,
               #metricResponse #cas_operations_review,
               #metricResponse #cas_review_facility_communication,
               #metricResponse #cas_review_internal_notes,
               #metricResponse #operations_review_completed,
               #cas_response_date_consult`).disable().attr("readonly");

        $('#divReviewers input').disable().attr("readonly");
        $('#cas_response_date_consult').kendoDatePicker({

            close: function (e) {

                $("#cas_billing_date_of_consult").val((e.sender.element.val()));
            }
        });

        //Enabled RCA Initiate and Countermeasuer(s) button and its related fields
        $(".rca input").disable().attr("readonly");
        $("#dynamictable input").disable().attr("readonly");
        $("#dynamictable textarea").disable().attr("readonly");
        var currentTab = $("#menuTabs .active").attr("href");
        if ((currentTab == 'metricResponse' || currentTab == '#metricResponse') && @userFacilityAdmin.ToString().ToLower() != true && @userFacilityPhysician.ToString().ToLower() != true) {
            $('#btnSave').disable();
            $('#btnSaveClose').disable();
            $('#btnExportWord').disable();
        }
        else {
            $('#btnSave').disable();
            $('#btnSaveClose').disable();
            $('#btnExportWord').disable();
        }
    }

   function MedicalStaffReadOnly() {

          $("#case-complete-label").readonly();

        $('#btnCompleteCase').hide();
        $('#btnCancelCase').hide();

        $('#createForm input').readonly();
        $('#createForm textarea').readonly();
        $('#createForm select').readonly();
        // Dropdown lists
        $("#cas_caller_source_key").KendoDropDownReadOnly();
        $("#cas_ctp_key").KendoDropDownReadOnly();
        $("#cas_phy_key").KendoDropDownReadOnly();
        $("#cas_cst_key").KendoDropDownReadOnly();
        $("#cas_fac_key").KendoDropDownReadOnly();
        $("#general_cas_identification_type").KendoDropDownReadOnly();
        $("#billing_cas_identification_type").KendoDropDownReadOnly();
        $("#cas_metric_tpaDelay_key").KendoDropDownReadOnly();
        $("#cas_metric_non_tpa_reason_key").KendoDropDownReadOnly();
        $("#cas_billing_lod_key").KendoDropDownReadOnly();
        $("#cas_billing_bic_key").KendoDropDownReadOnly();
        $("#cas_billing_bic_key2").KendoDropDownReadOnly();
        $("#cas_cart_location_key").KendoDropDownReadOnly();
       $("#cas_phy").KendoDropDownReadOnly();
       $("#cas_callback_response_by").KendoDropDownReadOnly();
        // DatePicker
        $('#general_cas_dob').data('kendoDatePicker').readonly(true);
        if ($("#cas_ctp_key").val() == '@CaseType.StrokeAlert.ToInt()') {
            $(".date_consult_datepicker [name='cas_billing_date_of_consult']").data('kendoDatePicker').readonly(true);
        }
        $('#billing_cas_dob').data('kendoDatePicker').readonly(true);
        $('#billing_followUp_date').data('kendoDatePicker').readonly(true);
        $('#cas_response_date_consult').data('kendoDatePicker').readonly(true);
        // Buttons
        $('#btnCompleteCase').disable();
        $('#btnCancelCase').disable();

        $('#btnDownloadTemplate').disable();
        if ($('#btnDownloadTemplate').val() == 'Load Template')
            $('#btnDownloadTemplate').enable();
        $('#btnOKTemplatePreview').enable();
        $('#btnCancelTemplatePreview').enable();
        $('#btnSave').disable();
        $('#btnSaveClose').disable();
        if (@userFacilityPhysician.ToString().ToLower() != true) {// added by Nabeel to disable button if user is Facility Physician
            $("#btnCopy").enable();

        }
        $('#btnExportWord').disable();
        if ($('#btnExportWord').val() == 'Load Review Template')
            $('#btnExportWord').enable();
         ///TCARE-547
    }

    function readOnlyAllFields() {
        $("input[name='__RequestVerificationToken']").readonly();
        $("#case-complete-label").readonly();
        $('#createForm input').readonly();
        $('#createForm textarea').readonly();
        $('#createForm select').readonly();
        // Dropdown lists
        $("#cas_ctp_key").KendoDropDownReadOnly();
        $("#cas_phy_key").KendoDropDownReadOnly();
        $("#cas_cst_key").KendoDropDownReadOnly();
        $("#cas_fac_key").KendoDropDownReadOnly();
        $("#general_cas_identification_type").KendoDropDownReadOnly();
        $("#billing_cas_identification_type").KendoDropDownReadOnly();
        $("#cas_metric_tpaDelay_key").KendoDropDownReadOnly();
        $("#cas_metric_non_tpa_reason_key").KendoDropDownReadOnly();
        $("#cas_billing_lod_key").KendoDropDownReadOnly();
        $("#cas_billing_bic_key").KendoDropDownReadOnly();
        $("#cas_billing_bic_key2").KendoDropDownReadOnly();
        $("#cas_cart_location_key").KendoDropDownReadOnly();
        $("#cas_phy").KendoDropDownReadOnly();
        $("#cas_callback_response_by").KendoDropDownReadOnly();
        // DatePicker
        $('#general_cas_dob').data('kendoDatePicker').enable(true);
        $(".date_consult_datepicker [name='cas_billing_date_of_consult']").readonly();
        $('#billing_cas_dob').readonly();
        $('#billing_followUp_date').readonly();
        ////////////
        $("#dynamictable input,#dynamictable textarea").attr("readonly", false)
    }

      function validateTemplateTabRequiredFields(entityType, isCaseCompleteCall) {

        var templateId = parseInt(entityType);

        var tPATypeYes = templateId == @EntityTypes.NeuroStrokeAlertTemplateTpa.ToInt() || templateId == @EntityTypes.StrokeAlertTemplateTpa.ToInt() || templateId == @EntityTypes.StateAlertTemplate.ToInt();

        var result = true;

        var divComment = true;
        var divImpression = true;
        var divBP = true;
          var divBloodGlucose = true;
          var divpulse = true;
          var divcriticalCare = true;
          var criticalcareTimeDiv = true;
        var divHpi = true;
        var divComplaint = true;
        var divGender = true;
          var conditionAllow = false;
          var cas_exam_free_text = true;
          var current_Tab = $("#menuTabs .active").attr("href");
        if ($.trim($("#cas_cst_key").val()).toInt() == caseStatusEnum.Cancelled) {
            return true;
        }
        var _d1 = $('#case_created_date').val();
        var _d2 = '2020-05-21';
        var caseDate = new Date(_d1);
        var compareDate = new Date(_d2);
        //$(".error_msg").hide();
        var cas_type = $('#cas_ctp_key').val();
        cas_type = parseInt(cas_type);
        if (caseDate > compareDate && cas_type === @CaseType.StatConsult.ToInt() ) {
            conditionAllow = true;
        }
        else {
            if (cas_type === @CaseType.StatConsult.ToInt()) {
                conditionAllow = false;
            }
            else {
                conditionAllow = true;
            }
          }
          if (isCaseCompleteCall || current_Tab == '#templates' || current_Tab == 'templates') {
              if (cas_type === @CaseType.StrokeAlert.ToInt() || cas_type === @CaseType.StatConsult.ToInt() || cas_type === @CaseType.TransferAlert.ToInt()) {
                  if (@textfreeExam) {
                      if ($("#divexamTextFree").css("display").toLowerCase() != "none") {
                          var characters = $.trim($("#cas_exam_free_text").val());
                          var trimmedcharacters = characters.replace(/\s/g, "");
                          if (trimmedcharacters.length < 50) {
                              $("#divexamFree").find(".error_msg").show();
                              result = false;
                              cas_exam_free_text = false;
                              //setTimeout(function () {
                              //    $("#cas_exam_free_text-error").hide();
                              //}, 5000);
                          }
                      }

                      if ($.trim($("#divBP").find("textarea").val()) == "") {
                          $("#divBP").find(".error_msg").show();
                          result = false;
                          divBP = false;
                      }

                      if ($.trim($("#divBloodGlucose").find("textarea").val()) == "") {
                          $("#divBloodGlucose").find(".error_msg").show();
                          result = false;
                          divBloodGlucose = false;
                      }

                      if ($.trim($("#divpulse").find("textarea").val()) == "") {
                          $("#divpulse").find(".error_msg").show();
                          result = false;
                          divpulse = false;
                      }
                  }
                  else {
                      if (tPATypeYes) {
                          if (cas_type !== @CaseType.StatConsult.ToInt() && cas_type !== @CaseType.TransferAlert.ToInt()) {
                              if ($.trim($("#divBP").find("textarea").val()) == "") {
                                  $("#divBP").find(".error_msg").show();
                                  result = false;
                                  divBP = false;
                              }

                              if ($.trim($("#divBloodGlucose").find("textarea").val()) == "") {
                                  $("#divBloodGlucose").find(".error_msg").show();
                                  result = false;
                                  divBloodGlucose = false;
                              }
                          }
                      }
                  }
              }
          }
        if (conditionAllow) {
            if (($("#templates").css("display").toLowerCase() != "none" || isCaseCompleteCall) && $('a[href="#templates"]').length > 0) {
                var tempComments = $.trim($("#divComment").find("textarea").val());
                if (tempComments == "") {
                    $("#divComment").find(".error_msg").show();
                    result = false;
                    divComment = false;
                } else {

                    // use the \s quantifier to remove all white space
                    let remSpaces = tempComments.replace(/\s/g, "")

                    if (remSpaces.length < 100) {
                        result = false;
                        divComments = false;
                    }
                }
               if (cas_type === @CaseType.StatConsult.ToInt() || cas_type === @CaseType.TransferAlert.ToInt()) {
                    if ($.trim($("#divImpression").find("textarea").val()) == "") {
                        if ($("#divImpression input:checked").length == 0) {
                            $("#divImpression").find(".error_msg").show();
                            result = false;
                            divImpression = false;
                        }
                    }

                    if ($.trim($("#divComplaint").find("textarea").val()) == "") {
                        $("#divComplaint").find(".error_msg").show();
                        result = false;
                        divComplaint = false;
                    }
                    if ($.trim($("#divHPI").find("textarea").val()) == "") {
                        $("#divHPI").find(".error_msg").show();
                        result = false;
                        divHpi = false;
                    }
                    var _patient = $("#divPatient").find("input[type=radio]:checked").val();
                    if (_patient == undefined || _patient == null) {
                        $("#divPatient").find(".error_msg").show();
                        result = false;
                        divGender = false;
                    }

                }
                else {
                    if ($.trim($("#divImpression").find("textarea").val()) == "" && $("#divImpression input:checked").length == 0) {
                        $("#divImpression").find(".error_msg").show();
                        result = false;
                        divImpression = false;
                    }
                }

                //TCARE-559
                var criticalCar = $("#divcriticalCare").find("input[type=radio]:checked").val();
                if (criticalCar == undefined || criticalCar == null) {
                    $("#divcriticalCare").find(".error_msg").show();
                    result = false;
                    divcriticalCare = false;
                }
                if (criticalCar == "true") {
                    var criticalCarProvided = $("#criticalcareTimeDiv").find("input[type=number]").val();
                    if (criticalCarProvided == "" || criticalCarProvided == null || criticalCarProvided == undefined) {
                        $("#criticalcareTimeDiv").find(".error_msg").show();
                        result = false;
                        criticalcareTimeDiv = false;

                    }
                }
            }
        }

         /// Focusing the first invalid control on the tab
        if (!result) {

            var element = null;
            if (!divImpression) {
                element = $("#divImpression").find("textarea");

            }
            else if (!divComment) {
                element = $("#divComment").find("textarea");
            }
            else if (!divBP) {
                element = $("#divBP").find("textarea");
            }
            else if (!divBloodGlucose) {
                element = $("#divBloodGlucose").find("textarea");
            }
            else if (!divpulse) {
                element = $("#divpulse").find("textarea");
            }
            else if (!cas_exam_free_text) {
                element = $("#divexamFree").find("textarea");
            }
            else if (!divcriticalCare) {
                element = $("#divcriticalCare").find("input[type=radio]");
                console.log("Criticle Care has issues");
            } else if (!criticalcareTimeDiv) {
                element = $("#criticalcareTimeDiv").find("input[type=number]");
                console.log("Criticle Care has issues");
            }
            else if (!divComplaint) {
                element = $("#divComplaint").find("textarea");
            }
            else if (!divHpi) {
                element = $("#divHPI").find("textarea");
            }
            else if (!divGender) {
                element = $("#divPatient").find("input[type=radio]");
            }


            if (element !== null) {

                window.setTimeout(function () { $(element).focus(); }, 250);
            }
        }

        return result;
    }

    function loadFacilityTimeZone(id) {
          if ($.trim(id) != "" && id != "00000000-0000-0000-0000-000000000000") {
              var url = "@Url.Action("GetFacilityTimeZone")";
              var stamp_time = $.trim($("#cas_response_ts_notification_utc").val());
              $.get(url, { id: id, inputDateTime: stamp_time }, function (response) {
                  if (response.success) {
                      changeAbbrivation(response.abbrivation);
                      $("#hdnFacilityTimeZone").val(response.timeZone);
                      $("#hdnFacilityTimeZoneOffSet").val(response.timeZoneOffset);

                      if (@userFacilityPhysician.ToString().ToLower() != true) {// added by Nabeel to disable button if user is Facility Physician
                          $("#btnCopy").enable();

                      }
                      if (response.convertedTime != "") {
                          $("#five9_start_time").val(response.convertedTime);
                      }
                  }
                  else {
                      $("#mainContentArea").find("#validationSummary").empty().showBSSuccessAlert("", "An error has occurred while converting time to facility time zone, please contact support");
                  }
              });
          }
    }

    function GetCaseReviewers()
    {
        var reviewers = $.trim($("#casereviewers").val());
        $("#cas_response_reviewer").val(reviewers);
    }
    function ClickToDial(number, isenabled) {
        if (number != "" && isenabled.toLowerCase() == "true") {
            DialNumber(number);
        }
    }
    function GetFacilityCart(cas_key) {
        $.ajax({
            cache: false,
            async: true,
            type: "POST",
            url: '/Case/GetFacilityCart?key=' + cas_key,
            success: function (data) {
                var fac_cart = [];
                $.each(data, function (key, val) {
                    if (val) {
                        fac_cart = val.split('#');
                    }
                })
                var html = "";
                html += '<option value="">-- Select --</option>';
                if (fac_cart.length > 0) {
                    for (var i = 0; i < fac_cart.length; i++) {
                        var sel = "";
                        var isExist = '@Model.cas_cart';
                        if (isExist) {
                            if (fac_cart[i] === isExist) {
                                sel = 'selected';
                            }
                        }
                        html += '<option value="' + fac_cart[i] + '" ' + sel + '>' + fac_cart[i] + '</option>';
                    }
                }
                html += '<option value="other">Other</option>';
                $("#casecart").empty();
                $("#casecart").append(html);
            },
            error: function () {

            }

        });
    }

    function loadPhysicianDropDown(fac_key, isfacilityChanged) {
        var caseTypeValue = "";
        if ($("#cas_ctp_key").val() != null)
            caseTypeValue = $("#cas_ctp_key").val();
        else
            caseTypeValue = "@Model.cas_ctp_key";

        if (fac_key != undefined && fac_key != "00000000-0000-0000-0000-000000000000") {
            var url = "@Url.Action("GetPhysiciansForCases")";
            url = url + "?fac_key=" + fac_key + "&cType_key=" + caseTypeValue;
            $.get(url, function (response) {
                var schedulePhy = [];
                if (response != undefined && response != null) {
                    if (response.data != null) {
                        schedulePhy = response.data.filter(function (el) {
                            return el.FinalSorted
                        });
                    }

                    $("#physicianStatusGrid").html(response.htmlData);
                    if (physicianDropDown != null && physicianDropDown != undefined) {
                        physicianDropDown.unbind('change', null);
                        physicianDropDown.data("kendoDropDownList").destroy();
                    }

                    physicianDropDown = $("#cas_phy_key").fillStaticKendoDropDown(response.data, "FullName", "AspNetUser_Id", "-- Select --", function () {


                        if (isfacilityChanged) {
                            if (response.data != null && response.data != undefined && $("#cas_ctp_key").val() == caseTypeEnum.StrokeAlert) {
                                if (typeof schedulePhy === 'string') {
                                    $('#cas_phy_key').data('kendoDropDownList').value(schedulePhy);
                                    $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).show();
                                    window.setTimeout(function () {
                                        $('#cas_phy_key').change();
                                    }, 500);
                                }
                                else if (schedulePhy.length > 0) {
                                    $('#cas_phy_key').data('kendoDropDownList').value(schedulePhy[0].AspNetUser_Id);
                                    $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).show();
                                    window.setTimeout(function () {
                                        $('#cas_phy_key').change();
                                    }, 500);
                                }
                                else {
                                    //$("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).hide();
                                    $('#cas_cst_key').data('kendoDropDownList').value(caseStatusEnum.Open);
                                    $('#cas_phy_key').data('kendoDropDownList').value("");
                                }
                            }
                            else {
                                //$("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).hide();
                                $('#cas_cst_key').data('kendoDropDownList').value(caseStatusEnum.Open);
                                $('#cas_phy_key').data('kendoDropDownList').value("");
                            }

                            enableSaveSend();
                        }

                        if ($("#cas_phy_key").val() == "" || $("#cas_phy_key").val() == null || $("#cas_phy_key").val() == "00000000-0000-0000-0000-000000000000") {
                            $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).hide();
                        }

                        if (!@(User.IsInRole(UserRoles.Physician.ToDescription()).ToString().ToLower()) && !@(User.IsInRole(UserRoles.PartnerPhysician.ToDescription()).ToString().ToLower())) {
                            onLoadCompleteCode();
                        }


                    });
                }

                physicianDropDown.bind("change", function (e) {
                    $("#cas_phy_key_offline_error").hide();
                    var val = $(this).val();
                    if (val == null || val == "" || val == undefined) {
                        $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).hide();
                        var open = @CaseStatus.Open.ToInt();
                        $('#cas_cst_key').data('kendoDropDownList').value(open);
                    }
                    else {
                        $("#cas_cst_key_listbox .k-item").eq(acceptedStatusIndex).show();
                        var inprogress = @CaseStatus.WaitingToAccept.ToInt();
                        $('#cas_cst_key').data('kendoDropDownList').value(inprogress);
                        enableSaveSend();
                        CheckPhysicianRule();
                    }
                });
                $("#cas_phy").fillStaticKendoDropDown(response.data, "FullName", "AspNetUser_Id", "-- Select --");
            });
        }
    }
    @*function loadPhysicianDropDown2(fac_key) {
        var caseTypeValue = "";
        if ($("#cas_ctp_key").val() != null)
            caseTypeValue = $("#cas_ctp_key").val();
        else
            caseTypeValue = "@Model.cas_ctp_key";

        var physicianDropDown = $("#cas_phy_key").fillKendoDropDown("/LookUp/GetPhysicians?fac_key=" + fac_key + "&fac_Type_key=" + caseTypeValue, "Name", "Id", "-- Select --", function () {
             if (!@(User.IsInRole(UserRoles.Physician.ToDescription()).ToString().ToLower()) &&  !@(User.IsInRole(UserRoles.PartnerPhysician.ToDescription()).ToString().ToLower())) {

                onLoadCompleteCode();
            }
        });
        loadPhysicianStatues(fac_key, caseTypeValue);
        physicianDropDown.bind("change", function (e) {
            var val = $(this).val();
            if (val == "" || val == undefined) {
                var open = @CaseStatus.Open.ToInt();
                $('#cas_cst_key').data('kendoDropDownList').value(open);
            }
            else {
                var inprogress = @CaseStatus.WaitingToAccept.ToInt();
                $('#cas_cst_key').data('kendoDropDownList').value(inprogress);
                CheckPhysicianRule();
            }
        });
    }*@
    function checkFacilityServiceType(facilityKey) {
        $.ajax({
            type: 'get',
            url: '/FacilityContract/CheckFacilityIsTeleneuro?fct_key=' + facilityKey,
            success: function (data) {
                if (data.success) {
                    $("#billing_facility_visit_type").removeClass('d-none');
                    $("#billing_facility_visit_type select").val("");
                    $("#billing_followUp_date_container").addClass('d-none');
                    $("#billing_followUp_date_container input").val("");
                }
                else {
                    $("#billing_facility_visit_type").addClass('d-none');
                    $("#billing_facility_visit_type select").val("");
                    $("#billing_followUp_date_container").addClass('d-none');
                    $("#billing_followUp_date_container input").val("");
                }
            }
        });
    }
    function generateStatusFilter() {
        $('#casereviewers').multiselect({
            columns: 1,
            placeholder: 'Select User',
            search: false,
            selectAll: true,
            onOptionClick: function () {
                GetCaseReviewers();
            }
        });
    }
    function CheckPhysicianRule() {
        if ($("#cas_ctp_key").val() == @CaseType.StrokeAlert.ToInt()) {
            var selectedPhysician = $("#cas_phy_key").val();
            var hdn = $("#SelectedVal").val();
            var cas_key = $.trim($("#createForm").find("#cas_key").val()) == "" ? "0" : $("#createForm").find("#cas_key").val();
            if (selectedPhysician != hdn) {
                $("#SelectedVal").val(selectedPhysician);
                var params = {
                    physicianKey: $("#cas_phy_key").val(),
                    cas_key: cas_key
                };
                $.ajax({
                    type: 'get',
                    url: '/Case/Check15MinuteRule',
                    data: params,
                    success: function (data) {
                        if (data.success) {
                            $("#divModelPopUp").empty().showConfirmPopUp("Confirm", "<span>This Physician has already been assigned a Stroke Alert within the last 15 minutes. Do you still want to assign this case to the physician?</span>", function () {
                                $("#divModelPopUp").modal("hide");
                            }, "Yes", function () {
                                $("#divModelPopUp").modal("hide");
                                $('#cas_phy_key').data('kendoDropDownList').value("");
                                $("#SelectedVal").val("");
                            });
                        }
                        else {
                            $("#divModelPopUp").empty();
                            $("#divModelPopUp").modal("hide");
                        }
                    }
                });
            }
        }
    }
    function LoadNotes(key)
    {
        var url = "/Case/DisplayNotes?id=" + key;
        $.get(url, function (response) {
            if (response) {
                $("#divModelPopUp").empty().html(response);
                $("#divModelPopUp").modal("show");
            }
        });
    }

    function toggleNeurointerventionControl(isYes) {
        // Show container
        if (isYes.toLowerCase() == "true")
            $("#metric_discussed_neurointerventionalist_container").removeClass("d-none");
        else
            $("#metric_discussed_neurointerventionalist_container").addClass("d-none");
        // Reset value
        if ($("#hdn-saved-discussed-neurointerventionalist").val().toLowerCase() == "true")
            $("input[name='cas_metric_discussed_with_neurointerventionalist'][value='true']").prop('checked', true);
        else if ($("#hdn-saved-discussed-neurointerventionalist").val().toLowerCase() == "false")
            $("input[name='cas_metric_discussed_with_neurointerventionalist'][value='false']").prop('checked', true);
    }

    function validateBasicInfo() {
        var result = true;
        if ($.trim($("#cas_ctp_key").val()) == "") {
            result = false;
        }
        if ($.trim($("#cas_fac_key").val()) == "") {
            result = false;
        }
        return result;
    }

    function autoSaveCase() {
        var currentUrl = $("#hdnCurrentUrl").val().toLowerCase();
        if (currentUrl.indexOf("/case/edit") > -1 || currentUrl.indexOf("_physicianstatuslist") > -1) {
          clearAutoSaveInterval();

            autoSaveCase.timeout = window.setTimeout(autoSaveCallBack, 15000);
        }
    }

    function autoSaveCallBack() {
        var currentUrl = $("#hdnCurrentUrl").val().toLowerCase();
        if (validateBasicInfo()) {

            $(".error_msg").hide();
            var url = "@Url.Action("autoSaveCaseData")";
            if (url.indexOf("?") == -1)
                url += "?";
            else
                url += "&";
            url += "rnd=" + (Math.floor(Math.random() * 10000) + 1);
            if ($("#createForm").length == 0 || (currentUrl.indexOf("/case/edit") > -1 || currentUrl.indexOf("_physicianstatuslist") > -1) == false)
                return;

            var includeList = "#SelectedNIHSQuestionResponse,#case_template_stroke_notpa_ctn_impression,#case_template_stroke_notpa_ctn_mechanism_stroke,#case_template_stroke_notpa_ctn_antiplatelet_therapy_recommedned,#case_template_stroke_notpa_ctn_PMH,#case_template_stroke_notpa_ctn_imaging_studies_recommedned,#case_template_stroke_notpa_ctn_therapies,#case_template_stroke_notpa_ctn_dysphaghia_screen,#case_template_stroke_notpa_ctn_dvt_prophylaxis,#case_template_stroke_notpa_ctn_disposition,#case_template_stroke_notpa_ctn_sign_out,#case_template_stroke_tpa_cts_acute_stroke,#case_template_stroke_tpa_cts_mechanism_stroke,#case_template_stroke_tpa_cts_verbal_consent,#case_template_stroke_neuro_tpa_csn_acute_stroke,#case_template_stroke_neuro_tpa_csn_mechanism_stroke,#case_template_stroke_neuro_tpa_csn_verbal_consent,#case_template_stroke_neuro_tpa_csn_additional_recomendations,#case_template_telestroke_notpa_ctt_impression,#case_template_telestroke_notpa_ctt_mechanism_stroke,#case_template_telestroke_notpa_ctt_sign_out,#case_template_telestroke_notpa_ctt_antiplatelet_therapy_recommedned,#case_template_telestroke_notpa_ctt_PMH,#cas_response_reviewer";
            var data = $("#createForm").getWatchChanges(includeList);
            if (data.length > 0) {

                GetCaseReviewers();
                if (typeof (caseTemplateBeforeSubmit) != "undefined") {
                    caseTemplateBeforeSubmit();
                }

                $.ajax({
                    type: "POST",
                    dataType: 'json',
                    url: url,
                    data: {
                        Id: $("#createForm").find("#cas_key").val(),@*@Model.cas_key,*@
                        FormData: data,
                        TemplateKey: $.trim($("#TemplateKey").val()).toInt(),
                        TemplateKeyName: $.trim($("#TemplateKeyName").val()),
                        TemplateEntityType: $.trim($("#TemplateEntityType").val()).toInt(),
                        FacilityTimeZone: $.trim($("#FacilityTimeZone").val())
                    },

                    global: false
                }).done(function (response) {
                    if (response.success) {
                        if ($.trim($("#TemplateKey").val()).toInt() == 0)
                            $("#TemplateKey").val($("#createForm").find("#cas_key").val());

                        $(data).each(function (index, item) {
                            var selector = "[name='" + item.key + "']";
                            if (selector.length == 1) {
                                $(selector).attr("data-original-value", Base64.decode(item.value));
                            }
                            else {
                                $(selector).each(function () {
                                    if ($(this).attr("data-IgnoreAutoSave") == undefined)
                                        $(this).attr("data-original-value", Base64.decode(item.value));
                                });
                            }

                        });
                    }
                    autoSaveCase();
                });
            }
            else {
                autoSaveCase();
            }
        }
        else {
            clearAutoSaveInterval();

            autoSaveCase();
        }
    }

            function CancelCase() {
                var caseKey = $.trim($("#createForm").find("#cas_key").val()).toInt();
        $("#divModelPopUp").empty().showConfirmPopUpWithYesNo("Cancel Case",
            "<span>Would you like to save this case as cancelled?</span>",
            function () {
                $("#divModelPopUp").modal("hide");
                $.ajax({
                        type: 'post',
                    url: '/Case/CancelCase?casKey=' + caseKey @*@Model.cas_key*@,
                        success: function (data) {
                            if (data.success) {
                                loadPageAsync('@Url.Action("index", "case")')
                            }
                        }
                });
            }, function () {
                $("#divModelPopUp").modal("hide");
            });
    }






    $(document).ready(function () {

        @*if (@userRegionalMD.ToString().ToLower()) {
            disableAllControls();
        }
        else {
            console.log("Regional MD: " + @userRegionalMD.ToString().ToLower())
        }*@

        if (@userCredentialingTeam.ToString().ToLower()) {
            disableAllControls();
        }
        if (@userQPS.ToString().ToLower()) {
            disableAllControls();
        }
        if (@userFinance.ToString().ToLower()) {
            disableAllControls();
        }

        function restrictKeys() {
            $('#billing input').bind('keyup keydown keypress', function (evt) { return false; });
            $("#billing input").attr("style", "background-color:#e9ecef; pointer-events:none;");
            $('#billing textarea').bind('keyup keydown keypress', function (evt) { return false; });
            $("#billing textarea").attr("style", "background-color:#e9ecef; pointer-events:none;");
            $("#cas_billing_visit_type").attr("style", "background-color:#e9ecef; pointer-events:none;");
            $('#cas_billing_visit_type').bind('keyup keydown keypress', function (evt) { return false; });
            $('#billing radio').bind('keyup keydown keypress', function (evt) { return false; });
        };

        if (@userVPQuality.ToString().ToLower()) {

            restrictKeys();
            $("#billing_cas_identification_type").KendoDropDownReadOnly();
            $("#cas_billing_bic_key").KendoDropDownReadOnly();
            $("#cas_billing_bic_key2").KendoDropDownReadOnly();
            $(".date_consult_datepicker [name='cas_billing_date_of_consult']").data('kendoDatePicker').readonly(true);
            $('#billing_cas_dob').data('kendoDatePicker').readonly(true);
            $('#billing_followUp_date').data('kendoDatePicker').readonly(true);

            $("#metricResponse input").readonly();
            $("#metricResponse [name='cas_response_date_consult']").data('kendoDatePicker').readonly(true);
            $("#metricResponse [name='cas_response_date_consult']").attr("style", "background-color:#e9ecef; pointer-events:none;");
            $("#metricResponse [name='cas_response_date_consult']").bind('keyup keydown keypress', function (evt) { return false; });

            enableReviewTabElements();
            enableReviewersBox();
        }

        if (@userQualityDirector.ToString().ToLower()) {

            restrictKeys();
            $("#billing_cas_identification_type").KendoDropDownReadOnly();
            $("#cas_billing_bic_key").KendoDropDownReadOnly();
            $("#cas_billing_bic_key2").KendoDropDownReadOnly();
            $(".date_consult_datepicker [name='cas_billing_date_of_consult']").data('kendoDatePicker').readonly(true);
            $('#billing_cas_dob').data('kendoDatePicker').readonly(true);
            $('#billing_followUp_date').data('kendoDatePicker').readonly(true);

            $("#metricResponse input").readonly();
            $("#metricResponse [name='cas_response_date_consult']").data('kendoDatePicker').readonly(true);
            $("#metricResponse [name='cas_response_date_consult']").attr("style", "background-color:#e9ecef; pointer-events:none;");
            $("#metricResponse [name='cas_response_date_consult']").bind('keyup keydown keypress', function (evt) { return false; });

            enableReviewTabElements();
            enableReviewersBox();
        }
        @*if (@userMedicalStaff.ToString().ToLower()) {

            MedicalStaffReadOnly();
        }*@

       //code for billing code rules when case type changes ticket 503
       BindBillingCodeDropdown(@Model.cas_ctp_key)
        function BindBillingCodeDropdown(caseType)
        {
        var billingCodeToRemove = 0;
            var mainDDl = getUclDataByType(uclData, @(UclTypes.BillingCode.ToInt()));
            if (parseInt(caseType) == @CaseType.StrokeAlert.ToInt()) {
              billingCodeToRemove=@CaseBillingCode.CC1_STAT.ToInt();
            }
            else if (parseInt(caseType) == @CaseType.StatConsult.ToInt())
            {
                billingCodeToRemove =@CaseBillingCode.CC1_StrokeAlert.ToInt();
            }
            else if (parseInt(caseType) == @CaseType.TransferAlert.ToInt())
            {
                 billingCodeToRemove =@CaseBillingCode.CC1_StrokeAlert.ToInt();
            }
             result = mainDDl.filter(function (el) {
            return el.ucd_key != billingCodeToRemove
             });
         $("#cas_billing_bic_key").fillStaticKendoDropDown(result, "ucd_title", "ucd_key", "-- Select --");
        }

        $("#cas_ctp_key").off("change").change(function () {

         BindBillingCodeDropdown($(this).val());
        });
          var show = @Model.cas_metric_symptom_onset_during_ed_stay.ToString().ToLower();

        SymptomsOnSet(show);

        var existingText = $("#cas_billing_comments").val();

        if (existingText != undefined) {
            var charactersTyped = existingText.replace(/\s/g, '').length;
            $(".commentsCount").html(charactersTyped);


            $(".commentsCount").html(charactersTyped);
            $("#cas_billing_comments").keyup(function () {


                var text = $(this).val();

                var charactersTyped = text.replace(/\s/g, '').length;

                $(".commentsCount").html(charactersTyped)

            });
        }
        var hpiexistingText = $("#cas_metric_hpi").val();

        if (hpiexistingText != undefined) {
            var hpicharactersTyped = hpiexistingText.replace(/\s/g, '').length;
            $(".hpiCount").html(hpicharactersTyped);


            $(".hpiCount").html(hpicharactersTyped);
            $("#cas_metric_hpi").keyup(function () {


                var text = $(this).val();

                var hpicharactersTyped = text.replace(/\s/g, '').length;

                $(".hpiCount").html(hpicharactersTyped)

            });
        }
        adjustCaseHeaderColWidth();

    });

    // Moving metric tab functionality here . Because some components such as datetime pickter did not render at _caseMetricForm.
    
    function SymptomsOnSet(show) {
        if (show) {
            $("input[name=cas_patient_type][value='4']").attr('checked', 'checked');
            $("#symptoms_onset_during_ed_stay").show();
        }
        //else {
        //    $("#symptoms_onset_during_ed_stay").hide();
        //}
    }
    
    @*$("#cas_metric_symptom_onset_during_ed_stay").off('change').change(function () {

        var show = $(this).prop("checked");

        if (show) {
             var currentDateTime = moment().utcOffset(@Functions.GetTimeZoneOffset(facilityTimeZone)).format("MM/DD/YYYY HH:mm:ss");
            $("#symptoms_onset_during_ed_stay_timestamp").val(currentDateTime);
        }

        SymptomsOnSet(show);
    });*@

    $(".callLink").off("click").click(function () {

        var number = $.trim($(this).data("number"));
        var formattedNumber = $.trim($(this).data("formatted-number"));
        var type = $.trim($(this).data("type"));


        if (number != "" && formattedNumber != "" && type != "") {
            callToNumber(number, formattedNumber,type);
        }
    });

    $(".edMainLinkClick").off("click").click(function () {
        var fac_key = $("#cas_fac_key").val();
        var url = "@Url.Action("GetFacilityEDMainContacts")";
        var type = $(this).data("type");
        $.post(url, { Id: fac_key, type: type }, function (response) {

            var contacts = response.contacts;
            if (contacts.length > 1) {
                $("#edMainCallModel").find(".modal-title").html(type);
                var body = $("#edMainCallModel").find("#tableBody");
                body.html("");

                $(contacts).each(function (i, item) {

                    var newitem = $("#edMainCallModel").find("#template").clone()
                        .find("td:eq(0)").html(item.phone_number_formatted).end();
                    newitem.find("td:eq(1) a").attr("onclick", "callToNumber('" + item.phone_number + "','" + item.phone_number_formatted + "','" + type + "')").end();

                    body.prepend(newitem.html());
                });

                $("#edMainCallModel").modal("show");


            }
            else if (contacts.length == 1) {
                callToNumber(contacts[0].phone_number, contacts[0].phone_number_formatted, type);
            }
            else {
                $("#divModelPopUp").empty().showAlertPopUp("Contacts", "No  " + type + " contacts available", type);
            }
        })
    });

    function callToNumber(number, formattedNum, title) {
        $("#divModelPopUp").empty().showConfirmPopUpWithYesNo(title, "Do you want to dial " + formattedNum + "?", function () {
            $("#divModelPopUp").modal("hide");
            ClickToDial(number, "@(loggedInUser.EnableFive9.ToString())");
        });
    }

      function saveFormData() {
        savetypeofcorrespondense();

        // Make all fields readonly by calling readOnlyAllFields
        $this = $("#createForm");
        var url = $this.attr("action").addParamToUrl("ShowSuccessOnly","1");
        var data = $this.serialize();



        $("#divContentArea").find("input:button, input:submit").disable();
        $.ajax({
            type: "POST",
            url: url,
            dataType: 'json',
            data: data,
            error: function (xhr, error) {
                $("#divContentArea").find("input:button, input:submit").enable();
                $("#mainContentArea").find("#validationSummary").empty().showBSDangerAlert("", "Oops, Something went wrong.<br/>Please retry or contact us if the problem still persist.");
                //console.debug(xhr); console.debug(error);
            },
            success: function (response) {

                if (response.success) {
                    if (response.message !== "" && response.message !== null) {
                        $("#mainContentArea").find("#validationSummary").empty().showBSSuccessAlert("", response.message);
                        $("#divContentArea").find("input:button, input:submit").enable();
                    }
                }
                else {
                    $("#divContentArea").find("input:button, input:submit").enable();
                    $("#mainContentArea").find("#validationSummary").empty().showBSDangerAlert("", response.message);
                    $("#divModelPopUp").modal("hide");
                }
            }

        });
                //Now make all fields disabled by calling disableallcontrol
        // now make fields enable in case review tab by calling  enableReviewTabElements
    }
    ///changes for tele
    var responsestring = '';
    var showeditorresponse = false;

            $(document).ready(function () {
                var caseKey = $.trim($("#createForm").find("#cas_key").val()).toInt();
         var url = "@Url.Action("GenerateCaseReviewTemplate", "Case")";
            //var data = $("#createForm").serialize();
         var id = caseKey @*@Model.cas_key.ToString();*@

            $.post(url, { id: id }, function (response) {
                if (response.success) {
                    responsestring = response.data;
                    showeditorresponse = response.showEditor;
                }
            });
    })

    function generateimage() {
        window.scrollTo(0, 0);
        html2canvas(document.getElementById('timelinecapture')).then(function (canvas) {
            var link = document.createElement("canvas");
            var isTpa = '@Model.cas_metric_tpa_consult';
            if (isTpa == 'True') {
                link.width = link.width * 2.20;
                link.height = link.height * 1.60;
            } else {
                link.width = link.width * 0.01;
                link.height = link.height * 0.01;
            }
            var ctx = link.getContext('2d');
            //ctx.drawImage(canvas, 0, 0, link.width, link.height); default
            var dataURL;
            try {
                ctx.drawImage(canvas, 0, 0, link.width, link.height); // modified
                dataURL = link.toDataURL('image/png');
            }
            catch{ }

            if (responsestring != "") {
                if (dataURL) {
                    responsestring = responsestring.replace(/PASTEIMAGEPATHHERE/, dataURL);
                }
                else {
                    responsestring = responsestring.replace(/PASTEIMAGEPATHHERE/, '');
                    responsestring = responsestring.replace(/alt='Timeline'/, 'alt="Timeline" style="display:none"');
                }
                if (showeditorresponse) {
                    $("#cas_review_template_html").val('<div>' + responsestring + '</div>');
                    showCKEditor("cas_review_template_html");
                    $("#casereviewtemplatemodal").modal("show");
                }
                else {
                    console.log(responsestring)
                    $("#btnCancelReviewTemplatePreview").show();
                    $("#btnOKReviewTemplatePreview").val("Copy");
                    $("#caseReviewTemplateReviewData").html(responsestring);
                    $("#casereviewremplatepreviewmodal").modal("show");
                }
            }
            return link;
        })
    }
    function generatePDF() {
        var element = CKEDITOR.instances["cas_review_template_html"].getData()
        console.log(element);
        var single = "'";
        var stringelement = element.replace(/"/g, single);
        var stringelement = element.replace(/<h3>/g, "<br/><br/><h3>");
        html2pdf(stringelement, {
            margin: 0.25,
            filename: 'CaseReviewTemplate.pdf',
            image: { type: 'jpeg', quality: 1 },
            enableLinks: true,
            html2canvas: { scale: 6, dpi: 96, letterRendering: true },
            jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' }
        });
    }

     // Generate Microsoft Word Document

    function exportHTML(innerdocbody) {

        innerdocbody = innerdocbody.replace('/Content/case/pdf/logo-header.png', 'https://dev-telecare.condadocloud.net/Content/images/logo-header.png')
        var header = "<html xmlns:o='urn:schemas-microsoft-com:office:office' " +
            "xmlns:w='urn:schemas-microsoft-com:office:word' " +
            "xmlns='http://www.w3.org/TR/REC-html40'>" +
            "<head><meta charset='utf-8'><title>Case Review</title><style>@@Page Section1{margin:0.70in 1in 0.70in 1in;} div.Section1 {page: Section1}</style></head><body>";
        var footer = "</body></html>";
        var sourceHTML = header + innerdocbody + footer;
        var source = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(sourceHTML);
        var fileDownload = document.createElement("a");
        document.body.appendChild(fileDownload);
        fileDownload.href = source;
        fileDownload.download = 'CaseReviewTemplate.doc';
        fileDownload.click();
        document.body.removeChild(fileDownload);
    }

    $("#btnPdfExport").click(function () {
        generatePDF();
    });
    $("#btnWordDocumentExport").click(function () {
        const element = CKEDITOR.instances["cas_review_template_html"].getData()
        exportHTML(element);
    });


            $("#btnExportWord").off("click").click(function () {


        if (@isReadOnlyCase.ToString().ToLower()) {
            readOnlyAllFields();
        }
        if ($(this).val() == 'Generate Review Template') {

            GetCaseReviewers();

            if (!@userMedicalStaff.ToString().ToLower()) {
                saveFormData();
            }
            generateimage();
            var url = "@Url.Action("GenerateCaseReviewTemplate", "Case")";
            var id = $.trim($("#createForm").find("#cas_key").val()).toInt(); @*@Model.cas_key.ToString();*@

            $.post(url, { id: id }, function (response) {
                if (response.success) {
                    responsestring = response.data;
                    showeditorresponse = response.showEditor;
                }
            });

        }
        else if ($(this).val() == 'Load Review Template') {
            var caseKey = $.trim($("#createForm").find("#cas_key").val()).toInt();
            var url = '/Case/LoadCaseReviewTemplate?caseKey=' + caseKey;
            $.post(url, null, function (response) {
                if (response.success) {
                    if (response.showEditor) {
                        // code for wsiwyg popup
                        $("#cas_review_template_html").val(response.data);
                        showCKEditor("cas_review_template_html");
                        $("#casereviewtemplatemodal").modal("show");
                    }
                    else {
                        $("#btnCancelReviewTemplatePreview").show();
                        $("#btnOKReviewTemplatePreview").val("Copy");
                        $("#caseReviewTemplateReviewData").html(response.data);
                        $("#casereviewremplatepreviewmodal").modal("show");
                    }
                }
            });
        }

        if (@isReadOnlyCase.ToString().ToLower()) {
            disableAllControls();
            if (!@userMedicalStaff.ToString().ToLower()) {
                enableReviewTabElements();
            }
        }

        $("#btnSaveReviewTemplate,#btnSaveAndCloseReviewTemplate").off("click").click(function () {
            var isSaveAndClose = $(this).attr("id") == "btnSaveAndCloseReviewTemplate" ? true : false;
            saveReviewTemplateData(false).done(function (response) {
                window.setTimeout(function () {

                    if (response.success) {
                        $("#btnExportWord").val('Load Review Template');
                        if (browserName != "Edge" || browserName != "FireFox") {
                            copyHtmlToClipboard(CKEDITOR.instances["cas_review_template_html"].getData());
                        }

                        if (!isSaveAndClose) {
                            $("#cas_review_template_html").val(CKEDITOR.instances["cas_review_template_html"].getData());
                            showCKEditor("cas_review_template_html");
                            $("#casereviewtemplatemodal").find("#Reviewvalidation").empty().showBSSuccessAlert("", "Template changes saved successfully");
                        }
                        else {
                            $("#casereviewtemplatemodal").modal("hide");
                        }
                    }
                    else {
                        $("#casereviewtemplatemodal").find("#Reviewvalidation").empty().showBSDangerAlert("", response.data);
                    }
                }, 100);
            })
        });
        $("#btnCancelReviewTemplatePopup").off("click").click(function () {
            var isDirty = CKEDITOR.instances["cas_review_template_html"].checkDirty();
            if (isDirty) {
                $("#divModelPopUp").empty().showConfirmPopUp("Confirm",
                    "Are you sure you want to close this template without saving?",
                    function () {
                        $("#casereviewtemplatemodal").modal("hide");
                        $("#divModelPopUp").modal("hide");
                    });
            }
            else {
                $("#casereviewtemplatemodal").modal("hide");
                $("#divModelPopUp").modal("hide");
            }
        });
        $(".btnCloseReviewTemplatePreview").off("click").click(function () {
            $("#casereviewtemplatemodal").modal("hide");
            $("#divModelPopUp").modal("hide");
            $("#casereviewremplatepreviewmodal").modal("hide");
        });
        $("#btnOKReviewTemplatePreview").off("click").click(function () {
            if ($("#btnOKReviewTemplatePreview").val().toLowerCase() == "copy") {
                if (browserName == "Edge") {
                    copyTemplateAlt("#btnCopyReviewTemplatePreview", true);
                }
                else {
                    copyHtmlToClipboard($("#caseReviewTemplateReviewData").html());
                }
                alert('Template has been copied to clipboard.');
            }
            else {
                $("#casereviewtemplatemodal").modal("hide");
                $("#divModelPopUp").modal("hide");
                $("#casereviewremplatepreviewmodal").modal("hide");
            }
        });
    });
    function saveReviewTemplateData(bIsFinal) {
        var deffer = $.Deferred();
        var url = "@Url.Action("SaveReviewTemplate")";
        var postData = {
            cas_key: $("#createForm").find("#cas_key").val(),
            is_finalized: bIsFinal,
            ptemplateData: btoa(CKEDITOR.instances["cas_review_template_html"].getData())
        };

        $.post(url, postData, function (data) {
             return deffer.resolve(data);
        });
        return deffer.promise();
    }

     function isSignOffFollowUpRequired() {

        var required = false;
        if (@isTeleNeuroFacility.ToString().ToLower()) {
            var billingCode = $("#cas_billing_bic_key").data("kendoDropDownList").value();

             var result  = billingCode == @CaseBillingCode.New.ToInt()
                        || billingCode == @CaseBillingCode.FU.ToInt()
                        || billingCode == @CaseBillingCode.CC1_STAT.ToInt()
                        || billingCode == @CaseBillingCode.TC.ToInt()
                        || billingCode == @CaseBillingCode.CC1_StrokeAlert.ToInt() ;

            if (result) {
                required = true;
                $("#billing_facility_visit_type").find("label").addClass("text-danger");
            }
            else {
                $("#billing_facility_visit_type").find("label").removeClass("text-danger");
            }
        }

        return required;
    }


     function hideFieldsForEEGCases() {
         var hide = false;

            var caseType = $("#cas_ctp_key").val();

            var result =   caseType == @CaseType.StatEEG.ToInt()
                        || caseType == @CaseType.RoutineEEG.ToInt()
                        || caseType == @CaseType.LongTermEEG.ToInt() ;
            if (result) {
                hide = true;
                $("#billing_facility_visit_type").hide();
                $("#commentContainer").hide();
            }
            else {
                $("#billing_facility_visit_type").show();
                $("#commentContainer").show();
                hide = false;
            }


         return hide;
    }

    //TCARE 559 Start
    function onCriticalOptionsChanged() {
        $("#divcriticalCare").find("input[type=radio]").off("change").change(function () {


            var value = $(this).val();
            if (value == "true") {

                $("#criticalcareTimeDiv").show();
                //$("#criticalcareTimeDiv").find("input").val();

            }
            else {
                $("#criticalcareTimeDiv").hide();

            }
        });
    }

    function setCriticalCareDefaults() {
        var criticalCar = $("#divcriticalCare").find("input[type=radio]:checked").val();

        if (criticalCar == undefined || criticalCar == null) {
            $("#divcriticalCare").find("input[type=radio]").first().attr("checked", true);
            $("#criticalcareTimeDiv").show();
            //$("#criticalcareTimeDiv").find("input").val();

        }
    }
    $(document).ready(function () {
        setCriticalCareDefaults();
    })
        //TCARE 559 End
    $('#cas_billing_bic_key3').change(function () {
        $("#cas_billing_bic_key").removeAttr('disabled');
        var oldBillingkey = $("#cas_billing_bic_key").val();
        console.log('biiling key is ' + oldBillingkey);
        $('#key_revised').val(oldBillingkey);
        var billingCode = $(this).val();
        if (billingCode !== "") {
            $('#cas_billing_bic_key').val(billingCode);//.change();
            $('#cas_billing_bic_key').change();
        }
            $('#lblRevised').html('Revised Billing Code Will Update the Billing Code!');
        });
    function openProtocolpopup() {
        ShowLoading();
        var fac_key = '@Model.cas_fac_key';
        $.ajax({
            type: "POST",
            url: "/Case/GetProtocol",
            dataType: 'json',
            data: { fac_key: fac_key},
            error: function (xhr, error) {

            },
            success: function (response) {
                $(".hospitalprotocoldata").append(response.data);
                $("#graphmodal").modal('show');
                HideLoading();
            }

        });
    }

    function openOnboardedpopup() {
        ShowLoading();
        var fac_key = '@Model.cas_fac_key';
        $.ajax({
            type: "POST",
            url: "/Case/GetOnboard",
            dataType: 'json',
            data: { fac_key: fac_key},
            error: function (xhr, error) {

            },
            success: function (response) {
                $(".onboardingdata").append(response.data);
                $("#onboadedgraphmodal").modal('show');
                HideLoading();
            }

        });

    }
    
    
</script>

@if (ShowPopup)
{
    <script>
            var caseKey = $.trim($("#createForm").find("#cas_key").val()).toInt();
            LoadNotes(caseKey); @*(@Model.cas_key);*@
    </script>
}








