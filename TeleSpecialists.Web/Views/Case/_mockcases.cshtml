
<div class="pt-1 customGridHeader facility-grid-container">
    <div id="mockCasesGrid">
    </div>
</div>

<script type="text/javascript">
    function mCaseapplyColors() {
        $("#mockCasesGrid tr").each(function (index, element) {
            var open = pacStatusEnum.Open;
            var row = $(element);
            var status = row.find("td:nth-child(3)").text().toInt();
            if (status == open)
            {
                if (!$("#hhTabText").hasClass("text-danger font-weight-bold"))
                {
                    $("#hhTabText").addClass("text-danger font-weight-bold");
                }

                row.children("td").addClass("text-danger font-weight-bold");
            }
        });

        if (mCaseapplyColors.To != undefined)
            window.clearTimeout(mCaseapplyColors.To);

        mCaseapplyColors.To = window.setTimeout(mCaseapplyColors, 2000);
    }

    function validateForm() {
        var selectedOption = $("#mCasedateFilter").val();
        $("#mCasetxtStartDateError").hide();
        if (selectedOption == "DateRange") {
            var start_date = $("#mcasetxtStartDate").val();
            var end_date = $("#mcasetxtEndDate").val();
            if (start_date != "" && end_date != "") {
                var duration = moment.duration(moment(end_date).diff(new Date(start_date)));
                if (duration.asMinutes() < 0) {
                    $("#mCasetxtStartDateError").html("Start Date must be less then End Date");
                    $("#mCasetxtStartDateError").show();
                    return false;
                }
            }
        }
        return true;
    }


    function onmCaseGridFilter(tab, filters) {
            if (filters == undefined || filters == null)
                filters = [];
        if ($("#mockCasesGrid").data("kendoGrid") == undefined || $("#mockCasesGrid").data("kendoGrid") == null) {
            $("#mockCasesGrid").kendoGrid({
                dataSource: {
                    page: KendoGet("Case", "page"),
                    transport: {
                        read: {
                            url: '@Url.Action("GetAllMockCases")',
                            contentType: "application/json",
                            type: "POST"
                        },
                        parameterMap: function (options) {
                            options = KendoKeepState("Case", options, true);
                            return kendo.stringify(options);
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                    },
                    pageSize: GetKendoPageSize("Case", "RecPerPage", true),
                    page: KendoGet("Case", "page"),
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                filterable: true,
                sortable: true,
                scrollable: true,
                resizable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                dataBound: function (e) {
                    mCaseapplyColors();
                    _refreshData();
                    //get All records
                    SetKendoTotalCount("Case", $('#mockCasesGrid').data("kendoGrid").dataSource.total());
                    $('[data-role="dropdownlist"]').each(function () {
                        var kendoDropDown = $(this).data("kendoDropDownList");
                        if (kendoDropDown)
                            kendoDropDown.bind("open", onDropdDownOpen);
                    });
                },

                columns: [
                    { hidden: true, field: "mcas_key" },
                    { hidden: true, field: "mcas_fac_key" },
                    { hidden: true, field: "mcas_cst_key" },
                    {
                        title: "Actions", width: '80px',
                        template: "<a class='btn btn-dark btn-sm py-1 loadLinkAsync' title='Edit'  href='@Url.Action("Edit","MockCase")/\#= mcas_key#'>Edit</a>"
                    },

                    { field: "mcas_created_date", title: "Start Time", width: '150px' },
                    { field: "mcas_created_date", title: "Created Time", width: '150px' },
                    { field: "CaseStatus", title: "Status", width: '120px' },              
                    { field: "casetype", title: "Case Type", width: '150px' },
                    { field: "facilityname", title: "Facility", width: '200px' },
                    { field: "PhysicianName", title: "Physician", width: '150px' },
                    { field: "mcas_patient", title: "Patient", width: '150px' },
                    { field: "mcas_callback", title: "Callback", width: '100px' },

                ]
            });
        }
        else
        {
                if (filters.length == 0)
                    return;

            $("#mockCasesGrid").data("kendoGrid").dataSource.filter({
                    logic: "or",
                    filters: filters
            });
        }

    }

    function mCaseperformSearchOnCases() {
        if (!validateForm())
            return;

        var filters = [];

        var selectedValue = $("#mCasedateFilter").val();
        if (selectedValue == "SpecificDate") {
            if ($("#mcasetxtSpecificDate").val() != "") {
                filters.push({
                    field: "specific_date",
                    operator: "eq",
                    value: $("#mcasetxtSpecificDate").val()
                });
            }
        }
        else if (selectedValue == "DateRange") {
            if ($("#mcasetxtStartDate").val() != "") {
                filters.push({
                    field: "start_date",
                    operator: "eq",
                    value: $("#mcasetxtStartDate").val()
                });
            }

            if ($("#mcasetxtEndDate").val() != "") {
                filters.push({
                    field: "end_date",
                    operator: "eq",
                    value: $("#mcasetxtEndDate").val()
                });
            }
        }

        filters.push({
            field: "date_filter",
            operator: "eq",
            value: selectedValue
        });

        var searchValue = $('#mcasesearchBox').val();

        if (searchValue != "") {
            filters.push({
                field: "search_text",
                operator: "eq",
                value: searchValue
            });
        }
        var statusFilter = $("#mCasestatusFilter").val().toString();
        if (statusFilter !== "") {
            filters.push({
                field: "cas_status",
                operator: "eq",
                value: statusFilter
            });
        }

        // advance search user type
        if (userTypeValue != "") {
            var valueUserType = $("#mcaseuserTypeFilter").val().toString();
            if (valueUserType && ($("#mcaseuserTypeFilter option:selected").length != $("#mcaseuserTypeFilter option").length)) {
                filters.push({ //
                    field: "cas_ctp_key_selected", /*multi_cas_ctp_key*/
                    operator: "eq",
                    value: valueUserType
                });
            }
        }

        // advance search
        $.each(advanceSearchformData, function (index, formElement) {
            if ($.trim(formElement.value) != "" && formElement.value != undefined) {

                filters.push({
                    field: "advance_" + formElement.name,
                    operator: "eq",
                    value: formElement.value
                });
            }
        });

        onmCaseGridFilter($("#caseListActiveTab").val(), filters);
    }

    function mCasegenerateStatusFilter() {
        $('#mCasestatusFilter').multiselect({
            columns: 1,
            placeholder: 'Select Status',
            search: true,
            searchOptions: {
                'default': 'Search Status'
            },
            selectAll: true,
            onOptionClick: function () {
                $("#mCasebtnSearch").click();
            },
            onSelectAll: function () {
                mCaseperformSearchOnCases();
            }
        });
    }

    $(document).ready(function () {
        mCasegenerateStatusFilter();
        $("#mCasedateFilter").val('Last48Hours');
        document.title = $("#title-prefix").val() + '@ViewBag.Title';
        mCaseperformSearchOnCases();

        $("#mCasebtnSearch").off("click").click(function () {
            mCaseperformSearchOnCases();
        });

        $("#mCasedateFilter").unbind("change").change(function () {
            $("#mCasedivDateRange,#mCasedivSpecificDate").hide();
            var selectedValue = $(this).val();
            if (selectedValue == "SpecificDate") {
                $("#mCasedivSpecificDate").show();
            }
            else if (selectedValue == "DateRange") {
                $("#mCasedivDateRange").show();
            }
            else {
                $("#mCasebtnSearch").click();
            }
        });

        // frmSearch
        $("#mcasesearchBox").keyup(function (event) {
            if (event.keyCode == 13) {
                $("#mCasebtnSearch").click();
            }
        });



        });

    function _refreshData() {
        var currentUrl = $("#hdnCurrentUrl").val().toLowerCase();
        if (currentUrl.indexOf("/case") > -1 || currentUrl.indexOf("/case/index") > -1) {
            if (_refreshData.timeout != undefined)
                window.clearTimeout(_refreshData.timeout);

            _refreshData.timeout = window.setTimeout(function () {
                $("#hdnDisableLoader").val("1");
                var _grid = $('#mockCasesGrid').data("kendoGrid");
                if (_grid != undefined)
                    _grid.dataSource.read();
            }, 10000);
        }
    }
    function StopmCaseCaseListingTimer() {
        if (_refreshData.timeout != undefined)
            window.clearTimeout(_refreshData.timeout);
    }

</script>